/*
 *Form : AddStudentUI1
 * Version : 0.1.0
 * Updated 20-08-2012 at 11.43 PM.
 * 22-08-2012 at 4.47 PM
 * 25-08-2012 at 1.10 AM icon
 * 27-08-2012 at 1.30 notification of bus rout spelling mistake. 
 * 30-08-2012 at 5.40 PM month comboBox modified.
 * 31-08-2012 at 11.53 PM hostel spelling mistake
 * 01-09-2012 at 11.34 PM showDialog changed.
 * 3-9-2012 at 2.43 PM kill object
 * 3-9-2012 at 3.03 pm doa interface adjested.
 */
package studentDetails;

import Misc.MyImageFilter;
import Run.dbConnect;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.*;

/**
 *
 * @author Nawaf
 */
public class AddStudentUI1 extends javax.swing.JFrame {

    /**
     * Creates new form AddStudentUI1
     */
    public static JFrame AddStudentUIpointer1;
    public static File myFile = null;

    public AddStudentUI1() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/main_package/resources/icon.png")).getImage());
        setLocationRelativeTo(null);
        AddStudentUIpointer1 = this;
        hostelRoomText.setEnabled(false);
        busRootText.setEnabled(false);
        hostelCombo.setEnabled(false);
        AddStudentUI2 form = new AddStudentUI2();
        form.hide();
        fillDepartmentCombo();
        usnText.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rightClickMenu = new javax.swing.JPopupMenu();
        Cut = new javax.swing.JMenu();
        Copy = new javax.swing.JMenu();
        Paste = new javax.swing.JMenu();
        detailsPanel = new javax.swing.JPanel();
        hostelRoomText = new javax.swing.JTextField();
        semesterLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        classDivLabel = new javax.swing.JLabel();
        usnText = new javax.swing.JTextField();
        classDivisonCombo = new javax.swing.JComboBox();
        lastNameLabel = new javax.swing.JLabel();
        syllabusSchemeLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        dobLabel = new javax.swing.JLabel();
        busCheckBox = new javax.swing.JCheckBox();
        statusCombo = new javax.swing.JComboBox();
        lastNameText = new javax.swing.JTextField();
        usnLabel = new javax.swing.JLabel();
        firstNameText = new javax.swing.JTextField();
        statusLabel = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        dojLabel = new javax.swing.JLabel();
        hostelCheckBox = new javax.swing.JCheckBox();
        busRootText = new javax.swing.JTextField();
        notification = new javax.swing.JLabel();
        deptLabel = new javax.swing.JLabel();
        deptCombo = new javax.swing.JComboBox();
        religionLabel = new javax.swing.JLabel();
        casteLabel = new javax.swing.JLabel();
        religionText = new javax.swing.JTextField();
        casteText = new javax.swing.JTextField();
        categoryLabel = new javax.swing.JLabel();
        categoryText = new javax.swing.JTextField();
        monthOfBirthCombo = new javax.swing.JComboBox();
        yearOfBirthSpinner = new com.toedter.calendar.JYearChooser();
        monthOfAdmissionCombo = new javax.swing.JComboBox();
        yearOfAdmissionSpinner = new com.toedter.calendar.JYearChooser();
        dayOfBirthSpinner = new javax.swing.JSpinner();
        dayOfAdmissionSpinner = new javax.swing.JSpinner();
        hostelCombo = new javax.swing.JComboBox();
        photoPanel = new javax.swing.JPanel();
        studPhotoLabel = new javax.swing.JLabel();
        homeButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        dispalyInfoLabel = new javax.swing.JLabel();
        genderComboBox = new javax.swing.JComboBox();
        syllabusSchemeComboBox = new javax.swing.JComboBox();
        semesterComboBox = new javax.swing.JComboBox();
        bad1 = new javax.swing.JLabel();
        bad2 = new javax.swing.JLabel();
        bad3 = new javax.swing.JLabel();
        bad4 = new javax.swing.JLabel();
        bad5 = new javax.swing.JLabel();
        bad6 = new javax.swing.JLabel();
        bad7 = new javax.swing.JLabel();
        bad8 = new javax.swing.JLabel();

        Cut.setText("jMenu1");
        rightClickMenu.add(Cut);

        Copy.setText("jMenu1");
        rightClickMenu.add(Copy);

        Paste.setText("jMenu1");
        rightClickMenu.add(Paste);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add student - Page 1");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        detailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Student details"));
        detailsPanel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        hostelRoomText.setToolTipText("To enter hostel room number.");
        hostelRoomText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hostelRoomTextMouseEntered(evt);
            }
        });
        hostelRoomText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                hostelRoomTextFocusGained(evt);
            }
        });
        hostelRoomText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hostelRoomTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hostelRoomTextKeyReleased(evt);
            }
        });

        semesterLabel.setText("Semester :");
        semesterLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                semesterLabelMouseEntered(evt);
            }
        });

        genderLabel.setText("Gender :");
        genderLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                genderLabelMouseEntered(evt);
            }
        });

        classDivLabel.setText("Division :");
        classDivLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                classDivLabelMouseEntered(evt);
            }
        });

        usnText.setToolTipText("To enter USN.");
        usnText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                usnTextMouseEntered(evt);
            }
        });
        usnText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usnTextFocusGained(evt);
            }
        });
        usnText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usnTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usnTextKeyReleased(evt);
            }
        });

        classDivisonCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Divison", "1st Batch", "2nd Batch", "3rd Batch", "4th Batch", "5th Batch" }));
        classDivisonCombo.setToolTipText("To select class division.");
        classDivisonCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                classDivisonComboMouseEntered(evt);
            }
        });
        classDivisonCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                classDivisonComboFocusGained(evt);
            }
        });
        classDivisonCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                classDivisonComboKeyPressed(evt);
            }
        });

        lastNameLabel.setText("Last name :");
        lastNameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lastNameLabelMouseEntered(evt);
            }
        });

        syllabusSchemeLabel.setText("Syllabus scheme :");
        syllabusSchemeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                syllabusSchemeLabelMouseEntered(evt);
            }
        });
        syllabusSchemeLabel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                syllabusSchemeLabelFocusGained(evt);
            }
        });

        firstNameLabel.setText("First name *:");
        firstNameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                firstNameLabelMouseEntered(evt);
            }
        });

        dobLabel.setText("DOB :");
        dobLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dobLabelMouseEntered(evt);
            }
        });

        busCheckBox.setText("Bus facility.");
        busCheckBox.setToolTipText("Select if styudent having bus facilty.");
        busCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        busCheckBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                busCheckBoxMouseEntered(evt);
            }
        });
        busCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busCheckBoxActionPerformed(evt);
            }
        });
        busCheckBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                busCheckBoxFocusGained(evt);
            }
        });
        busCheckBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                busCheckBoxKeyPressed(evt);
            }
        });

        statusCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Current", "Passed Out", "Year Out", "TC", "NFT" }));
        statusCombo.setToolTipText("To select student current status.");
        statusCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                statusComboMouseEntered(evt);
            }
        });
        statusCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                statusComboFocusGained(evt);
            }
        });
        statusCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                statusComboKeyPressed(evt);
            }
        });

        lastNameText.setToolTipText("To enter flast name.");
        lastNameText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lastNameTextMouseEntered(evt);
            }
        });
        lastNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lastNameTextFocusGained(evt);
            }
        });
        lastNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lastNameTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lastNameTextKeyReleased(evt);
            }
        });

        usnLabel.setText("USN *:");
        usnLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                usnLabelMouseEntered(evt);
            }
        });

        firstNameText.setToolTipText("To enter first name.");
        firstNameText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                firstNameTextMouseEntered(evt);
            }
        });
        firstNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                firstNameTextFocusGained(evt);
            }
        });
        firstNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                firstNameTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                firstNameTextKeyReleased(evt);
            }
        });

        statusLabel.setText("Status :");
        statusLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                statusLabelMouseEntered(evt);
            }
        });

        nextButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Actions-go-next-icon.png"))); // NOI18N
        nextButton.setText("Next");
        nextButton.setToolTipText("To goto next page.");
        nextButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nextButtonMouseEntered(evt);
            }
        });
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        nextButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nextButtonFocusGained(evt);
            }
        });
        nextButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nextButtonKeyPressed(evt);
            }
        });

        dojLabel.setText("DOA :");
        dojLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dojLabelMouseEntered(evt);
            }
        });
        dojLabel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dojLabelFocusGained(evt);
            }
        });

        hostelCheckBox.setText("Hostelite .");
        hostelCheckBox.setToolTipText("Select if student is hostelite.");
        hostelCheckBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hostelCheckBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hostelCheckBoxMouseEntered(evt);
            }
        });
        hostelCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostelCheckBoxActionPerformed(evt);
            }
        });
        hostelCheckBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                hostelCheckBoxFocusGained(evt);
            }
        });
        hostelCheckBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hostelCheckBoxKeyPressed(evt);
            }
        });

        busRootText.setToolTipText("To enter bus route.");
        busRootText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                busRootTextMouseEntered(evt);
            }
        });
        busRootText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                busRootTextFocusGained(evt);
            }
        });
        busRootText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                busRootTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                busRootTextKeyReleased(evt);
            }
        });

        notification.setForeground(new java.awt.Color(51, 51, 251));
        notification.setText(" ");
        notification.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        deptLabel.setText("Department :");
        deptLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deptLabelMouseEntered(evt);
            }
        });

        deptCombo.setToolTipText("To select department code.");
        deptCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deptComboMouseEntered(evt);
            }
        });
        deptCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptComboActionPerformed(evt);
            }
        });
        deptCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                deptComboFocusGained(evt);
            }
        });
        deptCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deptComboKeyPressed(evt);
            }
        });

        religionLabel.setText("Religion :");
        religionLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                religionLabelMouseEntered(evt);
            }
        });

        casteLabel.setText("Caste :");
        casteLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                casteLabelMouseEntered(evt);
            }
        });

        religionText.setToolTipText("To enter religion.");
        religionText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                religionTextMouseEntered(evt);
            }
        });
        religionText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                religionTextFocusGained(evt);
            }
        });
        religionText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                religionTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                religionTextKeyReleased(evt);
            }
        });

        casteText.setToolTipText("To enter caste.");
        casteText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                casteTextMouseEntered(evt);
            }
        });
        casteText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                casteTextFocusGained(evt);
            }
        });
        casteText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                casteTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                casteTextKeyReleased(evt);
            }
        });

        categoryLabel.setText("Category :");
        categoryLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                categoryLabelMouseEntered(evt);
            }
        });

        categoryText.setToolTipText("To enter category.");
        categoryText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                categoryTextMouseEntered(evt);
            }
        });
        categoryText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                categoryTextFocusGained(evt);
            }
        });
        categoryText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                categoryTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                categoryTextKeyReleased(evt);
            }
        });

        monthOfBirthCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "July", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        monthOfBirthCombo.setToolTipText("To select month of birth.");
        monthOfBirthCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                monthOfBirthComboMouseEntered(evt);
            }
        });
        monthOfBirthCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                monthOfBirthComboFocusGained(evt);
            }
        });
        monthOfBirthCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                monthOfBirthComboKeyPressed(evt);
            }
        });

        yearOfBirthSpinner.setToolTipText("To select year of birth.");
        yearOfBirthSpinner.setValue(1992);
        yearOfBirthSpinner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                yearOfBirthSpinnerMouseEntered(evt);
            }
        });
        yearOfBirthSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yearOfBirthSpinnerFocusGained(evt);
            }
        });
        yearOfBirthSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yearOfBirthSpinnerKeyPressed(evt);
            }
        });

        monthOfAdmissionCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "July", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        monthOfAdmissionCombo.setToolTipText("To select month of admission.");
        monthOfAdmissionCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                monthOfAdmissionComboMouseEntered(evt);
            }
        });
        monthOfAdmissionCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                monthOfAdmissionComboFocusGained(evt);
            }
        });
        monthOfAdmissionCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                monthOfAdmissionComboKeyPressed(evt);
            }
        });

        yearOfAdmissionSpinner.setToolTipText("To select year of admission.");
        yearOfAdmissionSpinner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                yearOfAdmissionSpinnerMouseEntered(evt);
            }
        });
        yearOfAdmissionSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yearOfAdmissionSpinnerFocusGained(evt);
            }
        });
        yearOfAdmissionSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yearOfAdmissionSpinnerKeyPressed(evt);
            }
        });

        dayOfBirthSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        dayOfBirthSpinner.setToolTipText("To select day of birth.");
        dayOfBirthSpinner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dayOfBirthSpinnerMouseEntered(evt);
            }
        });
        dayOfBirthSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dayOfBirthSpinnerFocusGained(evt);
            }
        });
        dayOfBirthSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dayOfBirthSpinnerKeyPressed(evt);
            }
        });

        dayOfAdmissionSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        dayOfAdmissionSpinner.setToolTipText("To select day of admission.");
        dayOfAdmissionSpinner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dayOfAdmissionSpinnerMouseEntered(evt);
            }
        });
        dayOfAdmissionSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dayOfAdmissionSpinnerFocusGained(evt);
            }
        });
        dayOfAdmissionSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dayOfAdmissionSpinnerKeyPressed(evt);
            }
        });

        hostelCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "JBH", "SBH", "GH" }));
        hostelCombo.setToolTipText("To select hostel name.");
        hostelCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hostelComboMouseEntered(evt);
            }
        });
        hostelCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostelComboActionPerformed(evt);
            }
        });
        hostelCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                hostelComboFocusGained(evt);
            }
        });
        hostelCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hostelComboKeyPressed(evt);
            }
        });

        photoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Student photo"));
        photoPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        photoPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                photoPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                photoPanelMouseEntered(evt);
            }
        });

        studPhotoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/defaultPhoto(3.5x4.5).jpg"))); // NOI18N
        studPhotoLabel.setToolTipText("Click to select a photo.");
        studPhotoLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        studPhotoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studPhotoLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                studPhotoLabelMouseEntered(evt);
            }
        });
        studPhotoLabel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studPhotoLabelFocusGained(evt);
            }
        });

        javax.swing.GroupLayout photoPanelLayout = new javax.swing.GroupLayout(photoPanel);
        photoPanel.setLayout(photoPanelLayout);
        photoPanelLayout.setHorizontalGroup(
            photoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(photoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studPhotoLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        photoPanelLayout.setVerticalGroup(
            photoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(photoPanelLayout.createSequentialGroup()
                .addComponent(studPhotoLabel)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/home-icon.png"))); // NOI18N
        homeButton.setText("Home");
        homeButton.setToolTipText("Click home button to go back to home.");
        homeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        homeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeButtonMouseEntered(evt);
            }
        });
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        homeButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                homeButtonFocusGained(evt);
            }
        });
        homeButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                homeButtonKeyPressed(evt);
            }
        });

        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Actions-edit-clear-icon.png"))); // NOI18N
        clearButton.setText("Clear");
        clearButton.setToolTipText("To clear the form feilds.");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearButtonMouseEntered(evt);
            }
        });
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        clearButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                clearButtonFocusGained(evt);
            }
        });
        clearButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                clearButtonKeyPressed(evt);
            }
        });

        dispalyInfoLabel.setText(" ");

        genderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        genderComboBox.setToolTipText("To select gender.");
        genderComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                genderComboBoxMouseEntered(evt);
            }
        });
        genderComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                genderComboBoxFocusGained(evt);
            }
        });
        genderComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                genderComboBoxKeyPressed(evt);
            }
        });

        syllabusSchemeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2002", "2006", "2010", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        syllabusSchemeComboBox.setToolTipText("To select syllabus scheme.");
        syllabusSchemeComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                syllabusSchemeComboBoxMouseEntered(evt);
            }
        });
        syllabusSchemeComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                syllabusSchemeComboBoxFocusGained(evt);
            }
        });
        syllabusSchemeComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                syllabusSchemeComboBoxKeyPressed(evt);
            }
        });

        semesterComboBox.setToolTipText("To select semester.");
        semesterComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                semesterComboBoxMouseEntered(evt);
            }
        });
        semesterComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                semesterComboBoxFocusGained(evt);
            }
        });
        semesterComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                semesterComboBoxKeyPressed(evt);
            }
        });

        bad1.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad1.setForeground(new java.awt.Color(255, 0, 0));
        bad1.setText(" ");

        bad2.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad2.setForeground(new java.awt.Color(255, 0, 0));
        bad2.setText(" ");

        bad3.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad3.setForeground(new java.awt.Color(255, 0, 0));
        bad3.setText(" ");

        bad4.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad4.setForeground(new java.awt.Color(255, 0, 0));
        bad4.setText(" ");

        bad5.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad5.setForeground(new java.awt.Color(255, 0, 0));
        bad5.setText(" ");

        bad6.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad6.setForeground(new java.awt.Color(255, 0, 0));
        bad6.setText(" ");

        bad7.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad7.setForeground(new java.awt.Color(255, 0, 0));
        bad7.setText(" ");

        bad8.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad8.setForeground(new java.awt.Color(255, 0, 0));
        bad8.setText(" ");

        javax.swing.GroupLayout detailsPanelLayout = new javax.swing.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dispalyInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(detailsPanelLayout.createSequentialGroup()
                                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(religionLabel)
                                            .addComponent(casteLabel))
                                        .addGap(54, 54, 54)
                                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                                .addComponent(casteText, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(bad5))
                                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                                .addComponent(religionText, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(bad4))))
                                    .addGroup(detailsPanelLayout.createSequentialGroup()
                                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(categoryLabel)
                                            .addComponent(hostelCheckBox)
                                            .addComponent(busCheckBox))
                                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                                .addGap(23, 23, 23)
                                                .addComponent(busRootText, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(bad8))
                                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(detailsPanelLayout.createSequentialGroup()
                                                        .addComponent(hostelCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(hostelRoomText, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(bad7)
                                                        .addGap(0, 0, Short.MAX_VALUE))
                                                    .addGroup(detailsPanelLayout.createSequentialGroup()
                                                        .addComponent(categoryText, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(bad6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(detailsPanelLayout.createSequentialGroup()
                                        .addComponent(dobLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(detailsPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(usnLabel)
                                            .addComponent(firstNameLabel)
                                            .addComponent(lastNameLabel)
                                            .addComponent(genderLabel))
                                        .addGap(34, 34, 34)))
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(detailsPanelLayout.createSequentialGroup()
                                        .addComponent(dayOfBirthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(monthOfBirthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(yearOfBirthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(usnText)
                                    .addComponent(firstNameText)
                                    .addComponent(lastNameText)
                                    .addComponent(genderComboBox, 0, 176, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bad1)
                                    .addComponent(bad2)
                                    .addComponent(bad3))
                                .addGap(16, 16, 16)))
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(syllabusSchemeLabel)
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(statusLabel)
                                    .addComponent(classDivLabel)
                                    .addComponent(dojLabel)))
                            .addComponent(semesterLabel)
                            .addComponent(deptLabel))
                        .addGap(26, 26, 26)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deptCombo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(semesterComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(syllabusSchemeComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(classDivisonCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(statusCombo, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(293, 293, 293))
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addComponent(dayOfAdmissionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(monthOfAdmissionCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(yearOfAdmissionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(notification, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(detailsPanelLayout.createSequentialGroup()
                                .addGap(298, 298, 298)
                                .addComponent(photoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(homeButton))))
                        .addContainerGap())))
        );

        detailsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {busRootText, casteText, categoryText, classDivisonCombo, deptCombo, firstNameText, genderComboBox, lastNameText, religionText, statusCombo, usnText});

        detailsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {clearButton, homeButton, nextButton});

        detailsPanelLayout.setVerticalGroup(
            detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailsPanelLayout.createSequentialGroup()
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addComponent(dispalyInfoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(usnLabel)
                            .addComponent(usnText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstNameLabel)
                            .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastNameLabel)
                            .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderLabel)
                            .addComponent(genderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(photoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(nextButton)
                        .addGap(18, 18, 18)
                        .addComponent(clearButton)
                        .addGap(18, 18, 18)
                        .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(yearOfBirthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dayOfBirthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(monthOfBirthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dobLabel)))
                        .addGap(18, 18, 18)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(religionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(religionLabel)
                            .addComponent(bad4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(casteText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(casteLabel)
                            .addComponent(bad5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoryLabel)
                            .addComponent(categoryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hostelCheckBox)
                            .addComponent(hostelCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hostelRoomText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(busRootText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dojLabel)
                                .addComponent(bad8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(busCheckBox))
                        .addGap(31, 31, 31)
                        .addComponent(notification)
                        .addGap(146, 146, 146))
                    .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deptCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deptLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(semesterLabel)
                            .addComponent(semesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(syllabusSchemeLabel)
                            .addComponent(syllabusSchemeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(classDivisonCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(classDivLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusLabel)
                            .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(yearOfAdmissionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(monthOfAdmissionCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dayOfAdmissionSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );

        detailsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {clearButton, homeButton, nextButton});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(detailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(detailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        homeButton.doClick();
    }//GEN-LAST:event_formWindowClosing

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        Run.Runner.RunnerObj.MainUIObj.show();
        AddStudentUI2.AddStudentUIpointer2.dispose();
        this.dispose();
        AddStudentUI2.AddStudentUIpointer2=null;
        AddStudentUIpointer1 = null;
        Run.Runner.RunnerObj.MainUIObj.AddStudentUI1Obj = null;
    }//GEN-LAST:event_homeButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        AddStudentUI2.AddStudentUIpointer2.show();
        this.hide();
    }//GEN-LAST:event_nextButtonActionPerformed

    private void photoPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_photoPanelMouseClicked
        showDialog();
    }//GEN-LAST:event_photoPanelMouseClicked

    private void hostelCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostelCheckBoxActionPerformed

        if (hostelCheckBox.isSelected()) {
            hostelCombo.setEnabled(true);
            hostelRoomText.setEnabled(true);
            hostelRoomText.requestFocus();
            hostelCombo.requestFocus();
        } else {
            hostelCombo.setEnabled(false);
            hostelCheckBox.requestFocus();
            hostelRoomText.setText(null);
            hostelRoomText.setEnabled(false);
            bad7.setText(" ");
        }
    }//GEN-LAST:event_hostelCheckBoxActionPerformed

    private void busCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busCheckBoxActionPerformed

        if (busCheckBox.isSelected()) {
            busRootText.setEnabled(true);
            busRootText.requestFocus();
        } else {
            busRootText.setEnabled(false);
            busRootText.setText(null);
            busCheckBox.requestFocus();
            bad8.setText(" ");
        }
    }//GEN-LAST:event_busCheckBoxActionPerformed

    private void firstNameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameTextFocusGained
        notification.setText("Enter first name.");
    }//GEN-LAST:event_firstNameTextFocusGained

    private void lastNameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameTextFocusGained
        notification.setText("Enter last name.");
    }//GEN-LAST:event_lastNameTextFocusGained

    private void statusComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_statusComboFocusGained
        notification.setText("Select current status.");
    }//GEN-LAST:event_statusComboFocusGained

    private void semesterLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semesterLabelMouseEntered
        notification.setText("Semester.");
    }//GEN-LAST:event_semesterLabelMouseEntered

    private void deptComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deptComboFocusGained
        notification.setText("Select department code.");
    }//GEN-LAST:event_deptComboFocusGained

    private void dojLabelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dojLabelFocusGained
    }//GEN-LAST:event_dojLabelFocusGained

    private void syllabusSchemeLabelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_syllabusSchemeLabelFocusGained
    }//GEN-LAST:event_syllabusSchemeLabelFocusGained

    private void classDivisonComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_classDivisonComboFocusGained
        notification.setText("Select class division.");
    }//GEN-LAST:event_classDivisonComboFocusGained

    private void classDivisonComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classDivisonComboMouseEntered
        notification.setText("Select class division.");
    }//GEN-LAST:event_classDivisonComboMouseEntered

    private void deptComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deptComboMouseEntered
        notification.setText("Select department code.");
    }//GEN-LAST:event_deptComboMouseEntered

    private void hostelRoomTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hostelRoomTextFocusGained
        notification.setText("Enter hostel room number.");
    }//GEN-LAST:event_hostelRoomTextFocusGained

    private void busRootTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_busRootTextFocusGained
        notification.setText("Enter bus route.");
    }//GEN-LAST:event_busRootTextFocusGained

    private void busCheckBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_busCheckBoxMouseEntered
        notification.setText("Select if student having bus facility.");
    }//GEN-LAST:event_busCheckBoxMouseEntered

    private void hostelCheckBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostelCheckBoxMouseEntered
        notification.setText("Select if student is hostelite.");
    }//GEN-LAST:event_hostelCheckBoxMouseEntered

    private void clearButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseEntered
        notification.setText("To clear the form feilds.");
    }//GEN-LAST:event_clearButtonMouseEntered

    private void clearButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_clearButtonFocusGained
        notification.setText("To clear the form feilds.");
    }//GEN-LAST:event_clearButtonFocusGained

    private void homeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseEntered
        notification.setText("Go back to home.");
    }//GEN-LAST:event_homeButtonMouseEntered

    private void homeButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_homeButtonFocusGained
        notification.setText("Go back to home.");
    }//GEN-LAST:event_homeButtonFocusGained

    private void usnLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usnLabelMouseEntered
        notification.setText("USN (University Student Number).");
    }//GEN-LAST:event_usnLabelMouseEntered

    private void photoPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_photoPanelMouseEntered
    }//GEN-LAST:event_photoPanelMouseEntered

    private void lastNameTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastNameTextMouseEntered
        notification.setText("Enter last name.");
    }//GEN-LAST:event_lastNameTextMouseEntered

    private void lastNameLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastNameLabelMouseEntered
        notification.setText("Last name.");
    }//GEN-LAST:event_lastNameLabelMouseEntered

    private void firstNameTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstNameTextMouseEntered
        notification.setText("Enter first name.");
    }//GEN-LAST:event_firstNameTextMouseEntered

    private void firstNameLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstNameLabelMouseEntered
        notification.setText("First name.");
    }//GEN-LAST:event_firstNameLabelMouseEntered

    private void syllabusSchemeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_syllabusSchemeLabelMouseEntered
        notification.setText("Syllabus scheme.");
    }//GEN-LAST:event_syllabusSchemeLabelMouseEntered

    private void genderLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genderLabelMouseEntered
        notification.setText("Gender.");
    }//GEN-LAST:event_genderLabelMouseEntered

    private void deptLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deptLabelMouseEntered
        notification.setText("Department code.");
    }//GEN-LAST:event_deptLabelMouseEntered

    private void religionLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_religionLabelMouseEntered
        notification.setText("Religion.");
    }//GEN-LAST:event_religionLabelMouseEntered

    private void religionTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_religionTextMouseEntered
        notification.setText("Enter religion.");
    }//GEN-LAST:event_religionTextMouseEntered

    private void casteLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_casteLabelMouseEntered
        notification.setText("Caste.");
    }//GEN-LAST:event_casteLabelMouseEntered

    private void casteTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_casteTextMouseEntered
        notification.setText("Enter caste.");
    }//GEN-LAST:event_casteTextMouseEntered

    private void dobLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dobLabelMouseEntered
        notification.setText("DOB (Date Of Birth.");
    }//GEN-LAST:event_dobLabelMouseEntered

    private void statusLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusLabelMouseEntered
        notification.setText("Current status.");
    }//GEN-LAST:event_statusLabelMouseEntered

    private void statusComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusComboMouseEntered
        notification.setText("Select current status.");
    }//GEN-LAST:event_statusComboMouseEntered

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        usnText.setText(null);
        firstNameText.setText(null);
        lastNameText.setText(null);
        genderComboBox.setSelectedIndex(0);
        semesterComboBox.setSelectedIndex(0);
        dayOfBirthSpinner.setValue(1);
        monthOfBirthCombo.setSelectedIndex(0);
        yearOfBirthSpinner.setValue(1992);
        dayOfAdmissionSpinner.setValue(1);
        monthOfAdmissionCombo.setSelectedIndex(0);
        yearOfAdmissionSpinner.setValue(2012);
        statusCombo.setSelectedIndex(0);
        deptCombo.setSelectedIndex(0);
        classDivisonCombo.setSelectedIndex(0);
        syllabusSchemeComboBox.setSelectedIndex(0);
        religionText.setText(null);
        casteText.setText(null);
        categoryText.setText(null);
        notification.setText(" ");
        dispalyInfoLabel.setText(" ");
        if (hostelRoomText.isEnabled()) {
            hostelRoomText.setText(null);
            hostelCheckBox.doClick();
        }
        if (busRootText.isEnabled()) {
            busRootText.setText(null);
            busCheckBox.doClick();
        }
        usnText.requestFocus();
        bad1.setText(" ");
        bad2.setText(" ");
        bad3.setText(" ");
        bad4.setText(" ");
        bad5.setText(" ");
        bad6.setText(" ");
        bad7.setText(" ");
        bad8.setText(" ");
        studPhotoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/defaultPhoto(3.5x4.5).jpg")));
    }//GEN-LAST:event_clearButtonActionPerformed

    private void dayOfBirthSpinnerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dayOfBirthSpinnerMouseEntered
        notification.setText("To select day of birth.");
    }//GEN-LAST:event_dayOfBirthSpinnerMouseEntered

    private void monthOfBirthComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monthOfBirthComboMouseEntered
        notification.setText("To select month of birth.");
    }//GEN-LAST:event_monthOfBirthComboMouseEntered

    private void yearOfBirthSpinnerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearOfBirthSpinnerMouseEntered
        notification.setText("To select year of birth.");
    }//GEN-LAST:event_yearOfBirthSpinnerMouseEntered

    private void dayOfAdmissionSpinnerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dayOfAdmissionSpinnerMouseEntered
        notification.setText("Select day of admission.");
    }//GEN-LAST:event_dayOfAdmissionSpinnerMouseEntered

    private void monthOfAdmissionComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monthOfAdmissionComboMouseEntered
        notification.setText("Select month of admission.");
    }//GEN-LAST:event_monthOfAdmissionComboMouseEntered

    private void yearOfAdmissionSpinnerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearOfAdmissionSpinnerMouseEntered
        notification.setText("Select year of admission.");
    }//GEN-LAST:event_yearOfAdmissionSpinnerMouseEntered

    private void deptComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptComboActionPerformed
        fillSemesterComboBox();
    }//GEN-LAST:event_deptComboActionPerformed

    private void usnTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usnTextKeyReleased
        if (usnText.getText().length() > 10) {
            Toolkit.getDefaultToolkit().beep();
            usnText.setText(usnText.getText().substring(0, 10));
        }
        if (!usnText.getText().matches("[1-4][A-Z][A-Z][0-9][0-9][A-Z][A-Z][0-9][0-9][0-9]")) {
            bad1.setText("!");
        } else {
            bad1.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT) {
            return;
        }
        usnText.setText(usnText.getText().toUpperCase());
    }//GEN-LAST:event_usnTextKeyReleased

    private void firstNameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstNameTextKeyReleased
        if (firstNameText.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            firstNameText.setText(firstNameText.getText().substring(0, 50));
        }
        if (!firstNameText.getText().matches("[a-zA-Z][ .a-zA-Z]*")) {
            bad2.setText("!");
        } else {
            bad2.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            return;
        }
        firstNameText.setText(toFullNameFormate(firstNameText.getText()));
    }//GEN-LAST:event_firstNameTextKeyReleased

    private void lastNameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastNameTextKeyReleased
        if (lastNameText.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            lastNameText.setText(lastNameText.getText().substring(0, 50));
        }
        if (!lastNameText.getText().matches("[ .a-zA-Z]*")) {
            bad3.setText("!");
        } else {
            bad3.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            return;
        }
        lastNameText.setText(toFullNameFormate(lastNameText.getText()));
    }//GEN-LAST:event_lastNameTextKeyReleased

    private void religionTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_religionTextKeyReleased
        if (religionText.getText().length() > 20) {
            Toolkit.getDefaultToolkit().beep();
            religionText.setText(religionText.getText().substring(0, 20));
        }
        if (!religionText.getText().matches("[a-zA-Z]*")) {
            bad4.setText("!");
        } else {
            bad4.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            return;
        }
        religionText.setText(toFullNameFormate(religionText.getText()));
    }//GEN-LAST:event_religionTextKeyReleased

    private void casteTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_casteTextKeyReleased
        if (casteText.getText().length() > 30) {
            Toolkit.getDefaultToolkit().beep();
            casteText.setText(casteText.getText().substring(0, 30));
        }
        if (!casteText.getText().matches("[a-zA-Z]*")) {
            bad5.setText("!");
        } else {
            bad5.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            return;
        }
        casteText.setText(toFullNameFormate(casteText.getText()));
    }//GEN-LAST:event_casteTextKeyReleased

    private void categoryTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categoryTextKeyReleased
        if (categoryText.getText().length() > 10) {
            Toolkit.getDefaultToolkit().beep();
            categoryText.setText(categoryText.getText().substring(0, 10));
        }
        if (!categoryText.getText().matches("[a-zA-Z]*")) {
            bad6.setText("!");
        } else {
            bad6.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            return;
        }
        categoryText.setText(toFullNameFormate(categoryText.getText()));
    }//GEN-LAST:event_categoryTextKeyReleased

    private void hostelRoomTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hostelRoomTextKeyReleased
        if (hostelRoomText.getText().length() > 7) {
            Toolkit.getDefaultToolkit().beep();
            hostelRoomText.setText(hostelRoomText.getText().substring(0, 7));
        }
        if (!hostelRoomText.getText().matches("[-a-zA-Z0-9]*")) {
            bad7.setText("!");
        } else {
            bad7.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT) {
            return;
        }
        hostelRoomText.setText(hostelRoomText.getText().toUpperCase());
    }//GEN-LAST:event_hostelRoomTextKeyReleased

    private void busRootTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busRootTextKeyReleased
        if (busRootText.getText().length() > 5) {
            Toolkit.getDefaultToolkit().beep();
            busRootText.setText(busRootText.getText().substring(0, 5));
        }
        if (!busRootText.getText().matches("[-a-zA-z0-9]*")) {
            bad8.setText("!");
        } else {
            bad8.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            return;
        }
        busRootText.setText(toFullNameFormate(busRootText.getText()));
    }//GEN-LAST:event_busRootTextKeyReleased

    private void hostelComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostelComboActionPerformed
        hostelRoomText.requestFocus();
    }//GEN-LAST:event_hostelComboActionPerformed

    private void usnTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usnTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_usnTextKeyPressed

    private void firstNameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstNameTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_firstNameTextKeyPressed

    private void lastNameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lastNameTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_lastNameTextKeyPressed

    private void genderComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_genderComboBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_genderComboBoxKeyPressed

    private void dayOfBirthSpinnerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dayOfBirthSpinnerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_dayOfBirthSpinnerKeyPressed

    private void monthOfBirthComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_monthOfBirthComboKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_monthOfBirthComboKeyPressed

    private void yearOfBirthSpinnerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearOfBirthSpinnerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_yearOfBirthSpinnerKeyPressed

    private void religionTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_religionTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_religionTextKeyPressed

    private void casteTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_casteTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_casteTextKeyPressed

    private void categoryTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_categoryTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_categoryTextKeyPressed

    private void hostelCheckBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hostelCheckBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_hostelCheckBoxKeyPressed

    private void hostelComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hostelComboKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_hostelComboKeyPressed

    private void hostelRoomTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hostelRoomTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_hostelRoomTextKeyPressed

    private void busCheckBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busCheckBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_busCheckBoxKeyPressed

    private void busRootTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busRootTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_busRootTextKeyPressed

    private void deptComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deptComboKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_deptComboKeyPressed

    private void semesterComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_semesterComboBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_semesterComboBoxKeyPressed

    private void syllabusSchemeComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_syllabusSchemeComboBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_syllabusSchemeComboBoxKeyPressed

    private void classDivisonComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_classDivisonComboKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_classDivisonComboKeyPressed

    private void statusComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_statusComboKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_statusComboKeyPressed

    private void dayOfAdmissionSpinnerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dayOfAdmissionSpinnerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_dayOfAdmissionSpinnerKeyPressed

    private void monthOfAdmissionComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_monthOfAdmissionComboKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_monthOfAdmissionComboKeyPressed

    private void yearOfAdmissionSpinnerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearOfAdmissionSpinnerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.requestFocus();
        }
    }//GEN-LAST:event_yearOfAdmissionSpinnerKeyPressed

    private void nextButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nextButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            nextButton.doClick();
        }
    }//GEN-LAST:event_nextButtonKeyPressed

    private void clearButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clearButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clearButton.doClick();
        }
    }//GEN-LAST:event_clearButtonKeyPressed

    private void homeButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_homeButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            homeButton.doClick();
        }
    }//GEN-LAST:event_homeButtonKeyPressed

    private void categoryLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryLabelMouseEntered
        notification.setText("Category.");
    }//GEN-LAST:event_categoryLabelMouseEntered

    private void hostelCheckBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hostelCheckBoxFocusGained
        notification.setText("Select if student is hostelite.");
    }//GEN-LAST:event_hostelCheckBoxFocusGained

    private void busCheckBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_busCheckBoxFocusGained
        notification.setText("Select if student having bus facility.");
    }//GEN-LAST:event_busCheckBoxFocusGained

    private void studPhotoLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studPhotoLabelMouseEntered
        notification.setText("Click here to select a photo.");
    }//GEN-LAST:event_studPhotoLabelMouseEntered

    private void studPhotoLabelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studPhotoLabelFocusGained
        notification.setText("Click here to select a photo.");
    }//GEN-LAST:event_studPhotoLabelFocusGained

    private void classDivLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classDivLabelMouseEntered
        notification.setText("Class division.");
    }//GEN-LAST:event_classDivLabelMouseEntered

    private void dojLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dojLabelMouseEntered
        notification.setText("DOA (Date Of Admission).");
    }//GEN-LAST:event_dojLabelMouseEntered

    private void nextButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseEntered
        notification.setText("To goto next page of student form.");
    }//GEN-LAST:event_nextButtonMouseEntered

    private void nextButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nextButtonFocusGained
        notification.setText("To goto next page of student form.");
    }//GEN-LAST:event_nextButtonFocusGained

    private void usnTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usnTextMouseEntered
        notification.setText("Enter USN.");
    }//GEN-LAST:event_usnTextMouseEntered

    private void usnTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usnTextFocusGained
        notification.setText("Enter USN.");
    }//GEN-LAST:event_usnTextFocusGained

    private void genderComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genderComboBoxMouseEntered
        notification.setText("Select gender.");
    }//GEN-LAST:event_genderComboBoxMouseEntered

    private void genderComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_genderComboBoxFocusGained
        notification.setText("Select gender.");
    }//GEN-LAST:event_genderComboBoxFocusGained

    private void dayOfBirthSpinnerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayOfBirthSpinnerFocusGained
        notification.setText("Select day of birth.");
    }//GEN-LAST:event_dayOfBirthSpinnerFocusGained

    private void monthOfBirthComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthOfBirthComboFocusGained
        notification.setText("Select month of birth.");
    }//GEN-LAST:event_monthOfBirthComboFocusGained

    private void yearOfBirthSpinnerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearOfBirthSpinnerFocusGained
        notification.setText("Select year of birth.");
    }//GEN-LAST:event_yearOfBirthSpinnerFocusGained

    private void religionTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_religionTextFocusGained
        notification.setText("Enter religion.");
    }//GEN-LAST:event_religionTextFocusGained

    private void casteTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_casteTextFocusGained
        notification.setText("Enter caste.");
    }//GEN-LAST:event_casteTextFocusGained

    private void categoryTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryTextMouseEntered
        notification.setText("Enter category.");
    }//GEN-LAST:event_categoryTextMouseEntered

    private void categoryTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_categoryTextFocusGained
        notification.setText("Enter category.");
    }//GEN-LAST:event_categoryTextFocusGained

    private void hostelComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hostelComboFocusGained
        notification.setText("Select hostel.");
    }//GEN-LAST:event_hostelComboFocusGained

    private void hostelComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostelComboMouseEntered
        notification.setText("Select hostel.");
    }//GEN-LAST:event_hostelComboMouseEntered

    private void hostelRoomTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostelRoomTextMouseEntered
        notification.setText("Enter hostel room number.");
    }//GEN-LAST:event_hostelRoomTextMouseEntered

    private void busRootTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_busRootTextMouseEntered
        notification.setText("Enter bus route.");
    }//GEN-LAST:event_busRootTextMouseEntered

    private void semesterComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_semesterComboBoxFocusGained
        notification.setText("Select semester.");
    }//GEN-LAST:event_semesterComboBoxFocusGained

    private void semesterComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semesterComboBoxMouseEntered
        notification.setText("Select semester.");
    }//GEN-LAST:event_semesterComboBoxMouseEntered

    private void syllabusSchemeComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_syllabusSchemeComboBoxMouseEntered
        notification.setText("Select syllabus scheme.");
    }//GEN-LAST:event_syllabusSchemeComboBoxMouseEntered

    private void syllabusSchemeComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_syllabusSchemeComboBoxFocusGained
        notification.setText("Select syllabus scheme.");
    }//GEN-LAST:event_syllabusSchemeComboBoxFocusGained

    private void dayOfAdmissionSpinnerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayOfAdmissionSpinnerFocusGained
        notification.setText("Select day of admission.");
    }//GEN-LAST:event_dayOfAdmissionSpinnerFocusGained

    private void monthOfAdmissionComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthOfAdmissionComboFocusGained
        notification.setText("Select month of admission.");
    }//GEN-LAST:event_monthOfAdmissionComboFocusGained

    private void yearOfAdmissionSpinnerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearOfAdmissionSpinnerFocusGained
        notification.setText("Select year of admission.");
    }//GEN-LAST:event_yearOfAdmissionSpinnerFocusGained

    private void studPhotoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studPhotoLabelMouseClicked
        showDialog();
    }//GEN-LAST:event_studPhotoLabelMouseClicked
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Copy;
    private javax.swing.JMenu Cut;
    private javax.swing.JMenu Paste;
    public static javax.swing.JLabel bad1;
    public static javax.swing.JLabel bad2;
    public static javax.swing.JLabel bad3;
    public static javax.swing.JLabel bad4;
    public static javax.swing.JLabel bad5;
    public static javax.swing.JLabel bad6;
    public static javax.swing.JLabel bad7;
    public static javax.swing.JLabel bad8;
    public static javax.swing.JCheckBox busCheckBox;
    public static javax.swing.JTextField busRootText;
    private javax.swing.JLabel casteLabel;
    public static javax.swing.JTextField casteText;
    private javax.swing.JLabel categoryLabel;
    public static javax.swing.JTextField categoryText;
    private javax.swing.JLabel classDivLabel;
    public static javax.swing.JComboBox classDivisonCombo;
    private static javax.swing.JButton clearButton;
    public static javax.swing.JSpinner dayOfAdmissionSpinner;
    public static javax.swing.JSpinner dayOfBirthSpinner;
    public static javax.swing.JComboBox deptCombo;
    private javax.swing.JLabel deptLabel;
    private javax.swing.JPanel detailsPanel;
    private static javax.swing.JLabel dispalyInfoLabel;
    private javax.swing.JLabel dobLabel;
    private javax.swing.JLabel dojLabel;
    private javax.swing.JLabel firstNameLabel;
    public static javax.swing.JTextField firstNameText;
    public static javax.swing.JComboBox genderComboBox;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JButton homeButton;
    public static javax.swing.JCheckBox hostelCheckBox;
    public static javax.swing.JComboBox hostelCombo;
    public static javax.swing.JTextField hostelRoomText;
    private javax.swing.JLabel lastNameLabel;
    public static javax.swing.JTextField lastNameText;
    public static javax.swing.JComboBox monthOfAdmissionCombo;
    public static javax.swing.JComboBox monthOfBirthCombo;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel notification;
    private javax.swing.JPanel photoPanel;
    private javax.swing.JLabel religionLabel;
    public static javax.swing.JTextField religionText;
    private javax.swing.JPopupMenu rightClickMenu;
    public static javax.swing.JComboBox semesterComboBox;
    private javax.swing.JLabel semesterLabel;
    public static javax.swing.JComboBox statusCombo;
    private javax.swing.JLabel statusLabel;
    public static javax.swing.JLabel studPhotoLabel;
    public static javax.swing.JComboBox syllabusSchemeComboBox;
    private javax.swing.JLabel syllabusSchemeLabel;
    private javax.swing.JLabel usnLabel;
    public static javax.swing.JTextField usnText;
    public static com.toedter.calendar.JYearChooser yearOfAdmissionSpinner;
    public static com.toedter.calendar.JYearChooser yearOfBirthSpinner;
    // End of variables declaration//GEN-END:variables
    ///variable of studentsDetailsUI

    private void showDialog() {
        BufferedImage image = null, scaledImage = null;
        JFileChooser imageChooser;

        if (Run.Runner.RunnerObj.prevDirectory == null) {
            imageChooser = new JFileChooser();
        } else {
            imageChooser = new JFileChooser(Run.Runner.RunnerObj.prevDirectory);
        }

        imageChooser.setAcceptAllFileFilterUsed(false);
        imageChooser.addChoosableFileFilter(new MyImageFilter());

        int retVal = imageChooser.showOpenDialog(this);
        if (retVal == JFileChooser.APPROVE_OPTION) {
            myFile = imageChooser.getSelectedFile();
            //find out the file type
            String fileName = myFile.getName();
            File file = imageChooser.getSelectedFile();
            Run.Runner.RunnerObj.prevDirectory = file.getParent();
            int dotPos = fileName.lastIndexOf(".") + 1;
            String extension = fileName.substring(dotPos);
            try {
                image = ImageIO.read(myFile);
                scaledImage = main_package.MainUI.getScaledImageObj.getScaledImage(image);
                myFile = new File(getClass().getResource("/main_package/resources/temp.jpg").getFile());
                ImageIO.write(scaledImage, extension, myFile);
                studPhotoLabel.setIcon(new ImageIcon(scaledImage));
            } catch (IOException e) {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private String toNameFormate(String name, int lower) {
        if ("".equals(name)) {
            return name;
        }
        if (lower == 1) {
            name = name.toLowerCase();
        }
        name = name.replaceFirst(Character.toString(name.charAt(0)), Character.toString(name.toUpperCase().charAt(0)));
        return name;
    }

    private String toFullNameFormate(String name) {
        name = name.toLowerCase();
        String tempText[] = name.split("\\ ");
        name = "";
        for (int i = 0; i < tempText.length; i++) {
            name += toNameFormate(tempText[i], 1) + " ";
        }
        String tempText2[] = name.split("\\.");
        name = "";
        for (int i = 0; i < tempText2.length; i++) {
            name += toNameFormate(tempText2[i], 0) + ".";
        }
        name = name.substring(0, name.length() - 2);
        return name;
    }

    private void fillDepartmentCombo() {
        try {
            deptCombo.setModel(new javax.swing.DefaultComboBoxModel());
            String sql = "Select * from department";

            ResultSet rs = dbConnect.getCon().createStatement().executeQuery(sql);
            while (rs.next()) {
                String Temp = rs.getString("DeptCode");
                deptCombo.addItem(Temp);
            }

            rs.close();
        } catch (SQLException ex) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void fillSemesterComboBox() {
        if (deptCombo.getModel().getSize() == 0) {
            return;
        }
        DefaultComboBoxModel modelComboBox = new DefaultComboBoxModel();
        semesterComboBox.setModel(modelComboBox);
        String numberOfSemester = null;
        String sql = "Select NumOfSems from department where DeptCode=\"" + deptCombo.getSelectedItem().toString() + "\"";
        try {
            ResultSet rs = dbConnect.getCon().createStatement().executeQuery(sql);
            while (rs.next()) {
                numberOfSemester = rs.getString("NumOfSems");
            }
            rs.close();
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        for (int i = 0; i < Integer.parseInt(numberOfSemester); i++) {
            modelComboBox.addElement(Integer.toString(i + 1));
        }
    }

    static void UpdateDisplayLabelAndClear() {
        String fname = firstNameText.getText();
        clearButton.doClick();
        dispalyInfoLabel.setText("<html><b><font color=blue>" + fname + "</b><font color=green> successfully added.</html>");
    }
}
