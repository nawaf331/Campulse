/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 * edited --- 15-08-2012.. uploaded at 8.00 am
 * version 0.0.2
 * Have to compleate:
 *  home buttone
 */
package studentDetails;

import Run.Runner;
import Run.dbConnect;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import marks.findStudent;

/**
 *
 * @author Nawaf
 */
public class StudenDerivedMarks extends javax.swing.JFrame {

    private String deptCode = null;
    private int sourceTemp = 0;

    /**
     * Creates new form StudenDerivedMarks
     */
    public StudenDerivedMarks(String usnTemp, String deptCodeTemp, int sourceId) {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/main_package/resources/icon.png")).getImage());
        setLocationRelativeTo(null);
        usnText.setText(usnTemp);
        deptCode = deptCodeTemp;
        sourceTemp = sourceId;
        initialiseSemester();
        fillMarksTable(1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        markViewPanel = new javax.swing.JPanel();
        usnLabel = new javax.swing.JLabel();
        semLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        marksTable = new javax.swing.JTable();
        semCombo = new javax.swing.JComboBox();
        homeButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        usnText = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View Mark");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        markViewPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "View Marks", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        usnLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        usnLabel.setText("USN :");

        semLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        semLabel.setText("Choose Semester :");

        marksTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        marksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject Codes", "Internal 1", "Internal 2", "Internal 3", "Internal Average", "External", "Classes Held", "Classes Attented"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        marksTable.setRowHeight(25);
        marksTable.setRowMargin(2);
        marksTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(marksTable);
        marksTable.getColumnModel().getColumn(0).setMinWidth(95);
        marksTable.getColumnModel().getColumn(0).setPreferredWidth(95);
        marksTable.getColumnModel().getColumn(0).setMaxWidth(95);
        marksTable.getColumnModel().getColumn(1).setMinWidth(70);
        marksTable.getColumnModel().getColumn(1).setPreferredWidth(70);
        marksTable.getColumnModel().getColumn(1).setMaxWidth(70);
        marksTable.getColumnModel().getColumn(2).setMinWidth(70);
        marksTable.getColumnModel().getColumn(2).setPreferredWidth(70);
        marksTable.getColumnModel().getColumn(2).setMaxWidth(70);
        marksTable.getColumnModel().getColumn(3).setMinWidth(70);
        marksTable.getColumnModel().getColumn(3).setPreferredWidth(70);
        marksTable.getColumnModel().getColumn(3).setMaxWidth(70);
        marksTable.getColumnModel().getColumn(4).setMinWidth(105);
        marksTable.getColumnModel().getColumn(4).setPreferredWidth(105);
        marksTable.getColumnModel().getColumn(4).setMaxWidth(105);
        marksTable.getColumnModel().getColumn(5).setMinWidth(60);
        marksTable.getColumnModel().getColumn(5).setPreferredWidth(60);
        marksTable.getColumnModel().getColumn(5).setMaxWidth(60);
        marksTable.getColumnModel().getColumn(6).setMinWidth(90);
        marksTable.getColumnModel().getColumn(6).setPreferredWidth(90);
        marksTable.getColumnModel().getColumn(6).setMaxWidth(90);
        marksTable.getColumnModel().getColumn(7).setMinWidth(110);
        marksTable.getColumnModel().getColumn(7).setPreferredWidth(110);
        marksTable.getColumnModel().getColumn(7).setMaxWidth(110);

        semCombo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        semCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8" }));
        semCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semComboActionPerformed(evt);
            }
        });

        homeButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/home-icon-small.png"))); // NOI18N
        homeButton.setText(" Home");
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Actions-go-previous-icon.png"))); // NOI18N
        backButton.setText("  Go Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        usnText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        usnText.setText("4pa10cs001");

        jButton1.setText("Allow Editing");

        jButton2.setText("Cancel Editing");

        jButton3.setText("Update");

        javax.swing.GroupLayout markViewPanelLayout = new javax.swing.GroupLayout(markViewPanel);
        markViewPanel.setLayout(markViewPanelLayout);
        markViewPanelLayout.setHorizontalGroup(
            markViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(markViewPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(usnLabel)
                .addGap(18, 18, 18)
                .addComponent(usnText)
                .addGap(146, 146, 146)
                .addComponent(semLabel)
                .addGap(18, 18, 18)
                .addComponent(semCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, markViewPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(markViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(markViewPanelLayout.createSequentialGroup()
                        .addComponent(backButton)
                        .addGap(52, 52, 52)
                        .addComponent(homeButton)
                        .addGap(33, 33, 33)
                        .addComponent(jButton1)
                        .addGap(27, 27, 27)
                        .addComponent(jButton2)
                        .addGap(32, 32, 32)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        markViewPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {backButton, homeButton});

        markViewPanelLayout.setVerticalGroup(
            markViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(markViewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(markViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(semLabel)
                    .addComponent(usnLabel)
                    .addComponent(semCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usnText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(markViewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(homeButton)
                    .addComponent(backButton)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        markViewPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {backButton, homeButton});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(markViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(markViewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void semComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semComboActionPerformed
        int sem = semCombo.getSelectedIndex() + 1;            //sem
        DefaultTableModel model = (DefaultTableModel) marksTable.getModel();
        model.setRowCount(0);
        fillMarksTable(sem);
    }//GEN-LAST:event_semComboActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Run.Runner.RunnerObj.MainUIObj.show();
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        Run.Runner.RunnerObj.MainUIObj.show();
        this.dispose();
        if (sourceTemp == 1) {
           Run.Runner.RunnerObj.MainUIObj.StudentViewAndModificationObj.dispose();
           Run.Runner.RunnerObj.MainUIObj.StudentViewAndModificationObj=null;
        } else {
           Run.Runner.RunnerObj.MainUIObj.findStudentObj.dispose();
           Run.Runner.RunnerObj.MainUIObj.findStudentObj=null;
        }
    }//GEN-LAST:event_homeButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        if (sourceTemp == 1) {
            StudentViewAndModification.studViewPointer.show();
            this.dispose();
        } else {
            findStudent.findStudentPointer.show();
            this.dispose();
        }
    }//GEN-LAST:event_backButtonActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton homeButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel markViewPanel;
    private javax.swing.JTable marksTable;
    private javax.swing.JComboBox semCombo;
    private javax.swing.JLabel semLabel;
    private javax.swing.JLabel usnLabel;
    private javax.swing.JLabel usnText;
    // End of variables declaration//GEN-END:variables

    private void fillMarksTable(int sem) {
        try {
            int syllabusOrder = 0;        //syllabus order
            int columnIndex = 0;         //points to a particular column
            DefaultTableModel model = (DefaultTableModel) marksTable.getModel();
            String subCodeQuery = "Select * from subject where Sem=" + (sem) + " and D_DeptCode=\"" + (deptCode) + "\"";
            ResultSet rs = dbConnect.getCon().createStatement().executeQuery(subCodeQuery);
            System.out.println(subCodeQuery);
            String markFillQuery = "Select * from marks where S_USN=\"" + (usnText.getText()) + "\"";

            System.out.println(markFillQuery);
            String internal1 = null;
            String internal2 = null, internal3 = null, internAvg = null, classHeld = null, classAtnd = null, external = null;
            while (rs.next()) {
                String subCodeTemp = rs.getString("SubCode");
                System.out.println(subCodeTemp + " sem= " + sem);
                ResultSet rs2 = dbConnect.getCon().createStatement().executeQuery(markFillQuery);

                columnIndex = ((sem - 1) * 7 * 8 + syllabusOrder * 7 + sem + 1);        // reffering to a column thru formula
                System.out.println(columnIndex);
                while (rs2.next()) {


                    internal1 = rs2.getString(columnIndex);
                    internal2 = rs2.getString(columnIndex + 1);
                    internal3 = rs2.getString(columnIndex + 2);
                    internAvg = rs2.getString(columnIndex + 3);
                    classHeld = rs2.getString(columnIndex + 4);
                    classAtnd = rs2.getString(columnIndex + 5);
                    external = rs2.getString(columnIndex + 6);
                }
                rs2.close();

                model.addRow(new Object[]{
                            subCodeTemp, internal1, internal2, internal3, internAvg, classHeld, classAtnd, external
                        });
                syllabusOrder++;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Couldnt Fetch subject codes" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            //Logger.getLogger(UserViewModifyDelete.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Couldnt Fetch marks due to some ......" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

        }
    }

    private void initialiseSemester() {
        try {
            ResultSet rs = null;
            String selectSemQuery = "select Sem from student where USN=\"" + usnText.getText() + "\"";
            rs = dbConnect.getCon().createStatement().executeQuery(selectSemQuery);
            rs.next();
            int semTemp = Integer.parseInt(rs.getString("Sem")) - 1;
            semCombo.setSelectedIndex(semTemp);
        } catch (SQLException ex) {
            Logger.getLogger(StudenDerivedMarks.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
}
