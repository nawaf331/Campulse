/*
 * Form : AddStudentUI2
 * Version : 0.0.4
 * Updated : 21-08-2012 at 12.33 AM
 * 25-08-2012 at 1.12 Am icon and fram name
 * 3-9-2012 at 2.45 PM kill object
 */
package studentDetails;

import Run.dbConnect;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Nawaf
 */
public class AddStudentUI2 extends javax.swing.JFrame {

    /**
     * Creates new form AddStudentUI2
     */
    public static JFrame AddStudentUIpointer2;

    public AddStudentUI2() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/main_package/resources/icon.png")).getImage());
        studCellText.requestFocus();
        setLocationRelativeTo(null);
        studCellText.requestFocus();
        AddStudentUIpointer2 = this;
        cetRankText.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        studentPanel2 = new javax.swing.JPanel();
        currentAddressLabel = new javax.swing.JLabel();
        permAddressLabel = new javax.swing.JLabel();
        parentNameText = new javax.swing.JTextField();
        studMailText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        currentAddressText = new javax.swing.JTextPane();
        studCellLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        permAddressText = new javax.swing.JTextPane();
        parentMailLabel = new javax.swing.JLabel();
        parentMailText = new javax.swing.JTextField();
        studMailLabel = new javax.swing.JLabel();
        parentNameLabel = new javax.swing.JLabel();
        studCellText = new javax.swing.JTextField();
        copyButton = new javax.swing.JButton();
        parentCellLabel = new javax.swing.JLabel();
        parentCellText = new javax.swing.JTextField();
        sslcPercentLabel = new javax.swing.JLabel();
        pucPercentLabel = new javax.swing.JLabel();
        firstSemCycleLabel = new javax.swing.JLabel();
        sslcPercentText = new javax.swing.JTextField();
        pucPercentText = new javax.swing.JTextField();
        firstSemCycleCombo = new javax.swing.JComboBox();
        cetRankCheck = new javax.swing.JCheckBox();
        cetRankText = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();
        notification = new javax.swing.JLabel();
        bad1 = new javax.swing.JLabel();
        bad2 = new javax.swing.JLabel();
        bad3 = new javax.swing.JLabel();
        bad4 = new javax.swing.JLabel();
        bad5 = new javax.swing.JLabel();
        bad6 = new javax.swing.JLabel();
        bad7 = new javax.swing.JLabel();
        bad8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add student - Page 2");
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        studentPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Student details"));

        currentAddressLabel.setText("Current address :");
        currentAddressLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                currentAddressLabelMouseEntered(evt);
            }
        });

        permAddressLabel.setText("Permanent address :");
        permAddressLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                permAddressLabelMouseEntered(evt);
            }
        });

        parentNameText.setToolTipText("To enter parent name.");
        parentNameText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                parentNameTextMouseEntered(evt);
            }
        });
        parentNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                parentNameTextFocusGained(evt);
            }
        });
        parentNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                parentNameTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                parentNameTextKeyReleased(evt);
            }
        });

        studMailText.setToolTipText("To enter student email id.");
        studMailText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                studMailTextMouseEntered(evt);
            }
        });
        studMailText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studMailTextFocusGained(evt);
            }
        });
        studMailText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                studMailTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                studMailTextKeyReleased(evt);
            }
        });

        currentAddressText.setToolTipText("To enter current address.");
        currentAddressText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                currentAddressTextMouseEntered(evt);
            }
        });
        currentAddressText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                currentAddressTextFocusGained(evt);
            }
        });
        currentAddressText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                currentAddressTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                currentAddressTextKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(currentAddressText);

        studCellLabel.setText("Student phone no. :");
        studCellLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                studCellLabelMouseEntered(evt);
            }
        });

        permAddressText.setToolTipText("To enter permanent address.");
        permAddressText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                permAddressTextMouseEntered(evt);
            }
        });
        permAddressText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                permAddressTextFocusGained(evt);
            }
        });
        permAddressText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                permAddressTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                permAddressTextKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(permAddressText);

        parentMailLabel.setText("Parent email :");
        parentMailLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                parentMailLabelMouseEntered(evt);
            }
        });

        parentMailText.setToolTipText("To enter parent email id..");
        parentMailText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                parentMailTextMouseEntered(evt);
            }
        });
        parentMailText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                parentMailTextFocusGained(evt);
            }
        });
        parentMailText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                parentMailTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                parentMailTextKeyReleased(evt);
            }
        });

        studMailLabel.setText("Student email :");
        studMailLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                studMailLabelMouseEntered(evt);
            }
        });

        parentNameLabel.setText("Parent name :");
        parentNameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                parentNameLabelMouseEntered(evt);
            }
        });

        studCellText.setToolTipText("To enter student phone number.");
        studCellText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                studCellTextMouseEntered(evt);
            }
        });
        studCellText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                studCellTextFocusGained(evt);
            }
        });
        studCellText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                studCellTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                studCellTextKeyReleased(evt);
            }
        });

        copyButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        copyButton.setText("Copy");
        copyButton.setToolTipText("To copy current address to permanent address.");
        copyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        copyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                copyButtonMouseEntered(evt);
            }
        });
        copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButtonActionPerformed(evt);
            }
        });
        copyButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                copyButtonFocusGained(evt);
            }
        });
        copyButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                copyButtonKeyPressed(evt);
            }
        });

        parentCellLabel.setText("Parent phone no. :");
        parentCellLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                parentCellLabelMouseEntered(evt);
            }
        });

        parentCellText.setToolTipText("To enter parent phone number.");
        parentCellText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                parentCellTextMouseEntered(evt);
            }
        });
        parentCellText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                parentCellTextFocusGained(evt);
            }
        });
        parentCellText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                parentCellTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                parentCellTextKeyReleased(evt);
            }
        });

        sslcPercentLabel.setText("10th percentage :");
        sslcPercentLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sslcPercentLabelMouseEntered(evt);
            }
        });

        pucPercentLabel.setText("PUC percentage :");
        pucPercentLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pucPercentLabelMouseEntered(evt);
            }
        });

        firstSemCycleLabel.setText("1st sem cycle :");
        firstSemCycleLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                firstSemCycleLabelMouseEntered(evt);
            }
        });

        sslcPercentText.setToolTipText("To enter 10th (SSLC) percentage.");
        sslcPercentText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                sslcPercentTextMouseEntered(evt);
            }
        });
        sslcPercentText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                sslcPercentTextFocusGained(evt);
            }
        });
        sslcPercentText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sslcPercentTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sslcPercentTextKeyReleased(evt);
            }
        });

        pucPercentText.setToolTipText("To enter PUC percentage.");
        pucPercentText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                pucPercentTextMouseEntered(evt);
            }
        });
        pucPercentText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pucPercentTextFocusGained(evt);
            }
        });
        pucPercentText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pucPercentTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pucPercentTextKeyReleased(evt);
            }
        });

        firstSemCycleCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Chemistry", "Physics", "Diploma" }));
        firstSemCycleCombo.setToolTipText("To select 1st semester cycle.");
        firstSemCycleCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                firstSemCycleComboMouseEntered(evt);
            }
        });
        firstSemCycleCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                firstSemCycleComboFocusGained(evt);
            }
        });
        firstSemCycleCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                firstSemCycleComboKeyPressed(evt);
            }
        });

        cetRankCheck.setText("CET rank");
        cetRankCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cetRankCheckMouseEntered(evt);
            }
        });
        cetRankCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cetRankCheckActionPerformed(evt);
            }
        });
        cetRankCheck.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cetRankCheckFocusGained(evt);
            }
        });
        cetRankCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cetRankCheckKeyPressed(evt);
            }
        });

        cetRankText.setToolTipText("To enter CET rank.");
        cetRankText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cetRankTextMouseEntered(evt);
            }
        });
        cetRankText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cetRankTextFocusGained(evt);
            }
        });
        cetRankText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cetRankTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cetRankTextKeyReleased(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Button-Add-icon.png"))); // NOI18N
        addButton.setText("Add");
        addButton.setToolTipText("<html>\nStep 1, Fill all minimum required feilds.<br>\nStep 2, Click add button.<br>\n</html>");
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addButtonMouseEntered(evt);
            }
        });
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        addButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addButtonFocusGained(evt);
            }
        });
        addButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addButtonKeyPressed(evt);
            }
        });

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Actions-go-previous-icon.png"))); // NOI18N
        backButton.setText("Back");
        backButton.setToolTipText("Click to go back to previous page.");
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backButtonMouseEntered(evt);
            }
        });
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        backButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                backButtonFocusGained(evt);
            }
        });
        backButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                backButtonKeyPressed(evt);
            }
        });

        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Actions-edit-clear-icon.png"))); // NOI18N
        clearButton.setText("Clear");
        clearButton.setToolTipText("To clear the form feilds.");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearButtonMouseEntered(evt);
            }
        });
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        clearButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                clearButtonFocusGained(evt);
            }
        });
        clearButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                clearButtonKeyPressed(evt);
            }
        });

        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/home-icon.png"))); // NOI18N
        homeButton.setText("Home");
        homeButton.setToolTipText("Click home button to go back to home.");
        homeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        homeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeButtonMouseEntered(evt);
            }
        });
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        homeButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                homeButtonFocusGained(evt);
            }
        });
        homeButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                homeButtonKeyPressed(evt);
            }
        });

        notification.setForeground(new java.awt.Color(51, 51, 251));
        notification.setText(" ");

        bad1.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad1.setForeground(new java.awt.Color(255, 0, 0));
        bad1.setText(" ");

        bad2.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad2.setForeground(new java.awt.Color(255, 0, 0));
        bad2.setText(" ");

        bad3.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad3.setForeground(new java.awt.Color(255, 0, 0));
        bad3.setText(" ");

        bad4.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad4.setForeground(new java.awt.Color(255, 0, 0));
        bad4.setText(" ");

        bad5.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad5.setForeground(new java.awt.Color(255, 0, 0));
        bad5.setText(" ");

        bad6.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad6.setForeground(new java.awt.Color(255, 0, 0));
        bad6.setText(" ");

        bad7.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad7.setForeground(new java.awt.Color(255, 0, 0));
        bad7.setText(" ");

        bad8.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad8.setForeground(new java.awt.Color(255, 0, 0));
        bad8.setText(" ");

        javax.swing.GroupLayout studentPanel2Layout = new javax.swing.GroupLayout(studentPanel2);
        studentPanel2.setLayout(studentPanel2Layout);
        studentPanel2Layout.setHorizontalGroup(
            studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentPanel2Layout.createSequentialGroup()
                .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstSemCycleLabel)
                            .addComponent(pucPercentLabel)
                            .addComponent(parentCellLabel)
                            .addComponent(sslcPercentLabel)
                            .addComponent(parentNameLabel)
                            .addComponent(studMailLabel)
                            .addComponent(studCellLabel)
                            .addComponent(parentMailLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(parentMailText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cetRankText, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(firstSemCycleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(pucPercentText, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(sslcPercentText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(studCellText, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(parentCellText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(parentNameText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(studMailText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bad1)
                            .addComponent(bad2)
                            .addComponent(bad3)
                            .addComponent(bad4)
                            .addComponent(bad5)
                            .addComponent(bad6)
                            .addComponent(bad7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currentAddressLabel)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(permAddressLabel)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(copyButton)))
                    .addGroup(studentPanel2Layout.createSequentialGroup()
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentPanel2Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(addButton)
                                .addGap(44, 44, 44)
                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(homeButton))
                            .addGroup(studentPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(notification, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(studentPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(cetRankCheck)
                                .addGap(248, 248, 248)
                                .addComponent(bad8)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        studentPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        studentPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addButton, backButton, clearButton, homeButton});

        studentPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cetRankText, firstSemCycleCombo, parentCellText, parentMailText, parentNameText, pucPercentText, sslcPercentText, studCellText, studMailText});

        studentPanel2Layout.setVerticalGroup(
            studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentPanel2Layout.createSequentialGroup()
                .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(studentPanel2Layout.createSequentialGroup()
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studCellLabel)
                            .addComponent(studCellText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studMailLabel)
                            .addComponent(studMailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(parentNameLabel)
                            .addComponent(parentNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad3))
                        .addGap(9, 9, 9)
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(parentCellLabel)
                            .addComponent(parentCellText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(parentMailLabel)
                            .addComponent(parentMailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sslcPercentLabel)
                            .addComponent(sslcPercentText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pucPercentLabel)
                            .addComponent(pucPercentText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstSemCycleLabel)
                            .addComponent(firstSemCycleCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cetRankText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad8)
                            .addComponent(cetRankCheck)))
                    .addGroup(studentPanel2Layout.createSequentialGroup()
                        .addComponent(currentAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(copyButton)
                        .addGap(18, 18, 18)
                        .addComponent(permAddressLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(studentPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton)
                    .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(notification))
        );

        studentPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        studentPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cetRankText, firstSemCycleCombo, parentCellText, parentMailText, parentNameText, pucPercentText, sslcPercentText, studCellText, studMailText});

        studentPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addButton, backButton, clearButton, homeButton});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(studentPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed

        Run.Runner.RunnerObj.MainUIObj.show();
        this.dispose();
        AddStudentUI1.AddStudentUIpointer1=null;
        Run.Runner.RunnerObj.MainUIObj.AddStudentUI1Obj = null;
        AddStudentUIpointer2=null;
    }//GEN-LAST:event_homeButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        homeButton.doClick();
    }//GEN-LAST:event_formWindowClosing

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        AddStudentUI1.AddStudentUIpointer1.show();
        this.hide();
    }//GEN-LAST:event_backButtonActionPerformed

    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed
        permAddressText.setText(currentAddressText.getText());
    }//GEN-LAST:event_copyButtonActionPerformed

    private void cetRankCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cetRankCheckActionPerformed
        if (cetRankCheck.isSelected()) {
            cetRankText.setEnabled(true);
            cetRankText.requestFocus();
        } else {
            cetRankText.setEnabled(false);
            cetRankText.setText(null);
            cetRankCheck.requestFocus();
            bad8.setText(" ");
        }
    }//GEN-LAST:event_cetRankCheckActionPerformed

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
    }//GEN-LAST:event_formMouseEntered

    private void studCellLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studCellLabelMouseEntered
        notification.setText("Student phone number.");
    }//GEN-LAST:event_studCellLabelMouseEntered

    private void studCellTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studCellTextMouseEntered
        notification.setText("Enter student phone number.");
    }//GEN-LAST:event_studCellTextMouseEntered

    private void sslcPercentLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sslcPercentLabelMouseEntered
        notification.setText("10th percentage.");
    }//GEN-LAST:event_sslcPercentLabelMouseEntered

    private void sslcPercentTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sslcPercentTextMouseEntered
        notification.setText("Enter 10th percent.");
    }//GEN-LAST:event_sslcPercentTextMouseEntered

    private void studMailLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studMailLabelMouseEntered
        notification.setText("Student email id.");
    }//GEN-LAST:event_studMailLabelMouseEntered

    private void pucPercentLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pucPercentLabelMouseEntered
        notification.setText("PUC percentage.");
    }//GEN-LAST:event_pucPercentLabelMouseEntered

    private void parentNameLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parentNameLabelMouseEntered
        notification.setText("Parent name.");
    }//GEN-LAST:event_parentNameLabelMouseEntered

    private void parentCellLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parentCellLabelMouseEntered
        notification.setText("Parent phone number.");
    }//GEN-LAST:event_parentCellLabelMouseEntered

    private void cetRankCheckMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cetRankCheckMouseEntered
        notification.setText("Select if student having CET rank.");
    }//GEN-LAST:event_cetRankCheckMouseEntered

    private void cetRankTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cetRankTextMouseEntered
        notification.setText("Enter CET rank.");
    }//GEN-LAST:event_cetRankTextMouseEntered

    private void currentAddressLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_currentAddressLabelMouseEntered
        notification.setText("Current address.");
    }//GEN-LAST:event_currentAddressLabelMouseEntered

    private void permAddressLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_permAddressLabelMouseEntered
        notification.setText("Permanent address.");
    }//GEN-LAST:event_permAddressLabelMouseEntered

    private void currentAddressTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_currentAddressTextMouseEntered
        notification.setText("Enter current address.");
    }//GEN-LAST:event_currentAddressTextMouseEntered

    private void permAddressTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_permAddressTextMouseEntered
        notification.setText("Enter permanent address.");
    }//GEN-LAST:event_permAddressTextMouseEntered

    private void copyButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_copyButtonMouseEntered
        notification.setText("To copy current address to permanent address.");
    }//GEN-LAST:event_copyButtonMouseEntered

    private void addButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseEntered
        notification.setText("To add student.");
    }//GEN-LAST:event_addButtonMouseEntered

    private void backButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseEntered
        notification.setText("To go back to previous page.");
    }//GEN-LAST:event_backButtonMouseEntered

    private void clearButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseEntered
        notification.setText("To clear the form feilds.");
    }//GEN-LAST:event_clearButtonMouseEntered

    private void homeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseEntered
        notification.setText("Go back to home.");
    }//GEN-LAST:event_homeButtonMouseEntered

    private void firstSemCycleLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstSemCycleLabelMouseEntered
        notification.setText("1st semester cycle.");
    }//GEN-LAST:event_firstSemCycleLabelMouseEntered

    private void firstSemCycleComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstSemCycleComboMouseEntered
        notification.setText("Select 1st semester cycle.");
    }//GEN-LAST:event_firstSemCycleComboMouseEntered

    private void parentMailLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parentMailLabelMouseEntered
        notification.setText("Parent email id.");
    }//GEN-LAST:event_parentMailLabelMouseEntered

    private void parentMailTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parentMailTextMouseEntered
        notification.setText("Enter parent email id.");
    }//GEN-LAST:event_parentMailTextMouseEntered

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        studCellText.setText(null);
        studMailText.setText(null);
        parentCellText.setText(null);
        parentMailText.setText(null);
        parentNameText.setText(null);
        currentAddressText.setText(null);
        permAddressText.setText(null);
        sslcPercentText.setText(null);
        pucPercentText.setText(null);
        firstSemCycleCombo.setSelectedIndex(0);
        if (cetRankText.isEnabled()) {
            cetRankText.setText(null);
            cetRankCheck.doClick();
        }
        studCellText.requestFocus();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void sendToDataBase(String DOB, String DOA) {
        try {
            String deptCode = (String) AddStudentUI1.deptCombo.getSelectedItem();
            String sex = "M";
            if (AddStudentUI1.genderComboBox.getSelectedItem().toString().equals("Female")) {
                sex = "F";
            }
            String usn = AddStudentUI1.usnText.getText();
            String fname = AddStudentUI1.firstNameText.getText();
            String lname = AddStudentUI1.lastNameText.getText();
            String curStatus = AddStudentUI1.statusCombo.getSelectedItem().toString();
            String hostelRoom = AddStudentUI1.hostelCombo.getSelectedItem().toString() + AddStudentUI1.hostelRoomText.getText();
            String busRoute = AddStudentUI1.busRootText.getText();

            int cDiv = AddStudentUI1.classDivisonCombo.getSelectedIndex();
            int pucPer = -1;
            int sslcPer = -1;
            int cetRank = -1;
            int scheme = -1;


            if (!"".equals(pucPercentText.getText())) {
                pucPer = Integer.parseInt(pucPercentText.getText());
            }

            if (!"".equals(sslcPercentText.getText())) {
                sslcPer = Integer.parseInt(sslcPercentText.getText());
            }

            if (!"".equals(cetRankText.getText())) {
                cetRank = Integer.parseInt(cetRankText.getText());
            }

            scheme = Integer.parseInt(AddStudentUI1.syllabusSchemeComboBox.getSelectedItem().toString());

            String firstSemCycle = "C";
            if ("Physics".equals(firstSemCycleCombo.getSelectedItem().toString())) {
                firstSemCycle = "P";
            }
            if ("Diploma".equals(firstSemCycleCombo.getSelectedItem().toString())) {
                firstSemCycle = "D";
            }
            String curAddress = currentAddressText.getText();
            String studentPhone = studCellText.getText();
            String studentMailId = studMailText.getText();
            String parentName = parentNameText.getText();
            String parentPhone = parentCellText.getText();
            String permanentAddress = permAddressText.getText();
            String parentMailId = parentMailText.getText();
            String religion = AddStudentUI1.religionText.getText();
            String cast = AddStudentUI1.casteText.getText();
            String category = AddStudentUI1.categoryText.getText();

            PreparedStatement psmnt = null;
            FileInputStream fis = null;

            psmnt = dbConnect.getCon().prepareStatement("insert into student " + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
            psmnt.setString(1, usn);
            psmnt.setString(2, fname);
            psmnt.setString(3, lname);
            psmnt.setString(4, (String) AddStudentUI1.semesterComboBox.getSelectedItem().toString());
            psmnt.setString(5, deptCode);
            psmnt.setString(6, DOB);
            psmnt.setString(7, sex);
            psmnt.setString(8, DOA);
            psmnt.setInt(9, scheme);
            psmnt.setString(10, curStatus);
            psmnt.setString(11, hostelRoom);
            psmnt.setString(12, busRoute);
            psmnt.setInt(13, cDiv);
            psmnt.setInt(14, pucPer);
            psmnt.setInt(15, sslcPer);
            psmnt.setInt(16, cetRank);
            psmnt.setString(17, firstSemCycle);
            psmnt.setString(18, curAddress);
            psmnt.setString(19, studentPhone);
            psmnt.setString(20, studentMailId);
            psmnt.setString(21, parentName);
            psmnt.setString(22, parentPhone);
            psmnt.setString(23, permanentAddress);
            psmnt.setString(24, parentMailId);

            psmnt.setString(26, religion);
            psmnt.setString(27, cast);
            psmnt.setString(28, category);

            if (AddStudentUI1.myFile != null) {
                try {
                    fis = new FileInputStream(AddStudentUI1.myFile);
                } catch (FileNotFoundException ex) {
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
                psmnt.setBinaryStream(25, (InputStream) fis, (int) (AddStudentUI1.myFile.length()));
            } else {
                psmnt.setBinaryStream(25, null);
            }

            int s = psmnt.executeUpdate();
            psmnt.close();

            if (s > 0) {
                int successful;
                String sql = "insert into marks(S_USN) values(\"" + usn + "\")";
                try {
                    successful = dbConnect.getCon().createStatement().executeUpdate(sql);
                } catch (SQLException ex) {
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(null, "Student adding is not successful.\nPlease manually delete this student from student table.\nThen try again.", "Failed", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (successful > 0) {
                    clearButton.doClick();
                    this.hide();
                    studentDetails.AddStudentUI1.AddStudentUIpointer1.show();
                    studentDetails.AddStudentUI1.UpdateDisplayLabelAndClear();
                }
            }
        } catch (SQLException ex) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Faculty adding is not successful.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if ("".equals(AddStudentUI1.usnText.getText())) {
            JOptionPane.showMessageDialog(null, "USN field cannot be empty.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            this.hide();
            studentDetails.AddStudentUI1.AddStudentUIpointer1.show();
            AddStudentUI1.usnText.requestFocus();
            return;
        }
        if ("!".equals(AddStudentUI1.bad1.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate USN.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            this.hide();
            studentDetails.AddStudentUI1.AddStudentUIpointer1.show();
            AddStudentUI1.usnText.requestFocus();
            return;
        }
        if ("".equals(AddStudentUI1.firstNameText.getText())) {
            JOptionPane.showMessageDialog(null, "First name field cannot be empty.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            this.hide();
            studentDetails.AddStudentUI1.AddStudentUIpointer1.show();
            AddStudentUI1.firstNameText.requestFocus();
            return;
        }
        if ("!".equals(AddStudentUI1.bad2.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate first name.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            this.hide();
            studentDetails.AddStudentUI1.AddStudentUIpointer1.show();
            AddStudentUI1.firstNameText.requestFocus();
            return;
        }
        if ("!".equals(AddStudentUI1.bad3.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate last name.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            this.hide();
            studentDetails.AddStudentUI1.AddStudentUIpointer1.show();
            AddStudentUI1.lastNameText.requestFocus();
            return;
        }
        String DOB = AddStudentUI1.yearOfBirthSpinner.getValue() + "-" + Integer.toString(AddStudentUI1.monthOfBirthCombo.getSelectedIndex() + 1) + "-" + AddStudentUI1.dayOfBirthSpinner.getValue().toString();
        if (isValidDateStr(DOB) == false) {
            JOptionPane.showMessageDialog(null, "Please validate DOB.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            this.hide();
            studentDetails.AddStudentUI1.AddStudentUIpointer1.show();
            AddStudentUI1.dayOfBirthSpinner.requestFocus();
            return;
        }
        if ("!".equals(AddStudentUI1.bad4.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate religion.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            this.hide();
            studentDetails.AddStudentUI1.AddStudentUIpointer1.show();
            AddStudentUI1.religionText.requestFocus();
            return;
        }
        if ("!".equals(AddStudentUI1.bad5.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate caste.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            this.hide();
            studentDetails.AddStudentUI1.AddStudentUIpointer1.show();
            AddStudentUI1.casteText.requestFocus();
            return;
        }
        if ("!".equals(AddStudentUI1.bad6.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate category.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            this.hide();
            studentDetails.AddStudentUI1.AddStudentUIpointer1.show();
            AddStudentUI1.categoryText.requestFocus();
            return;
        }
        if (AddStudentUI1.hostelCheckBox.isSelected()) {
            if ("!".equals(AddStudentUI1.bad7.getText())) {
                JOptionPane.showMessageDialog(null, "Please validate hostal room number.", "Notification", JOptionPane.INFORMATION_MESSAGE);
                this.hide();
                studentDetails.AddStudentUI1.AddStudentUIpointer1.show();
                AddStudentUI1.hostelRoomText.requestFocus();
                return;
            }
        }
        if (AddStudentUI1.busCheckBox.isSelected()) {
            if ("!".equals(AddStudentUI1.bad8.getText())) {
                JOptionPane.showMessageDialog(null, "Please validate bus root.", "Notification", JOptionPane.INFORMATION_MESSAGE);
                this.hide();
                studentDetails.AddStudentUI1.AddStudentUIpointer1.show();
                AddStudentUI1.busRootText.requestFocus();
                return;
            }
        }
        String DOA = AddStudentUI1.yearOfAdmissionSpinner.getValue() + "-" + Integer.toString(AddStudentUI1.monthOfAdmissionCombo.getSelectedIndex() + 1) + "-" + AddStudentUI1.dayOfAdmissionSpinner.getValue().toString();
        if (isValidDateStr(DOB) == false) {
            JOptionPane.showMessageDialog(null, "Please validate DOA.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            this.hide();
            studentDetails.AddStudentUI1.AddStudentUIpointer1.show();
            AddStudentUI1.dayOfAdmissionSpinner.requestFocus();
            return;
        }
        if ("!".equals(bad1.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate student phone number.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            studCellText.requestFocus();
            return;
        }
        if ("!".equals(bad2.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate student email.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            studCellText.requestFocus();
            return;
        }
        if ("!".equals(bad2.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate student email.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            studMailText.requestFocus();
            return;
        }
        if ("!".equals(bad3.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate parent name.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            parentNameText.requestFocus();
            return;
        }
        if ("!".equals(bad4.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate parent phone number.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            parentCellText.requestFocus();
            return;
        }
        if ("!".equals(bad5.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate parent email.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            parentMailText.requestFocus();
            return;
        }
        if ("!".equals(bad6.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate 10th percentage.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            sslcPercentText.requestFocus();
            return;
        }
        if ("!".equals(bad7.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate PUC percentage.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            pucPercentText.requestFocus();
            return;
        }
        if (cetRankCheck.isSelected()) {
            if ("!".equals(bad8.getText())) {
                JOptionPane.showMessageDialog(null, "Please validate CET rank.", "Notification", JOptionPane.INFORMATION_MESSAGE);
                cetRankText.requestFocus();
                return;
            }
        }
        sendToDataBase(DOB, DOA);
    }//GEN-LAST:event_addButtonActionPerformed

    private void studCellTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studCellTextKeyReleased
        if (studCellText.getText().length() > 25) {
            Toolkit.getDefaultToolkit().beep();
            studCellText.setText(studCellText.getText().substring(0, 25));
        }
        if (!studCellText.getText().matches("[+]?[0-9]+(-[0-9][0-9]*)*[0-9]*")) {
            bad1.setText("!");
        } else {
            bad1.setText(" ");
        }
        if ("".equals(studCellText.getText())) {
            bad1.setText(" ");
        }
    }//GEN-LAST:event_studCellTextKeyReleased

    private void studMailTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studMailTextKeyReleased
        if (studMailText.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            studMailText.setText(studMailText.getText().substring(0, 50));
        }
        if (!studMailText.getText().matches("^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
            bad2.setText("!");
        } else {
            bad2.setText(" ");
        }
        if ("".equals(studMailText.getText())) {
            bad2.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT) {
            return;
        }
        studMailText.setText(studMailText.getText().toLowerCase());
    }//GEN-LAST:event_studMailTextKeyReleased

    private void parentNameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_parentNameTextKeyReleased
        if (parentNameText.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            parentNameText.setText(parentNameText.getText().substring(0, 50));
        }
        if (!parentNameText.getText().matches("[ .a-zA-Z]*")) {
            bad3.setText("!");
        } else {
            bad3.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            return;
        }
        parentNameText.setText(toFullNameFormate(parentNameText.getText()));
    }//GEN-LAST:event_parentNameTextKeyReleased

    private void parentCellTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_parentCellTextKeyReleased
        if (parentCellText.getText().length() > 25) {
            Toolkit.getDefaultToolkit().beep();
            parentCellText.setText(parentCellText.getText().substring(0, 25));
        }
        if (!parentCellText.getText().matches("[+]?[0-9]+(-[0-9][0-9]*)*[0-9]*")) {
            bad4.setText("!");
        } else {
            bad4.setText(" ");
        }
        if ("".equals(parentCellText.getText())) {
            bad4.setText(" ");
        }
    }//GEN-LAST:event_parentCellTextKeyReleased

    private void parentMailTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_parentMailTextKeyReleased
        if (parentMailText.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            parentMailText.setText(parentCellText.getText().substring(0, 50));
        }
        if (!parentMailText.getText().matches("^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
            bad5.setText("!");
        } else {
            bad5.setText(" ");
        }
        if ("".equals(parentMailText.getText())) {
            bad5.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT) {
            return;
        }
        parentMailText.setText(parentMailText.getText().toLowerCase());
    }//GEN-LAST:event_parentMailTextKeyReleased

    private void sslcPercentTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sslcPercentTextKeyReleased
        if (sslcPercentText.getText().length() > 3) {
            Toolkit.getDefaultToolkit().beep();
            sslcPercentText.setText(sslcPercentText.getText().substring(0, 3));
        }
        if (!sslcPercentText.getText().matches("[.0-9]*")) {
            bad6.setText("!");
        } else {
            bad6.setText(" ");
        }
    }//GEN-LAST:event_sslcPercentTextKeyReleased

    private void pucPercentTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pucPercentTextKeyReleased
        if (pucPercentText.getText().length() > 3) {
            Toolkit.getDefaultToolkit().beep();
            pucPercentText.setText(pucPercentText.getText().substring(0, 3));
        }
        if (!pucPercentText.getText().matches("[.0-9]*")) {
            bad7.setText("!");
        } else {
            bad7.setText(" ");
        }
    }//GEN-LAST:event_pucPercentTextKeyReleased

    private void cetRankTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cetRankTextKeyReleased
        if (cetRankText.getText().length() > 10) {
            Toolkit.getDefaultToolkit().beep();
            cetRankText.setText(cetRankText.getText().substring(0, 10));
        }
        if (!cetRankText.getText().matches("[0-9]*")) {
            bad8.setText("!");
        } else {
            bad8.setText(" ");
        }
    }//GEN-LAST:event_cetRankTextKeyReleased

    private void currentAddressTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_currentAddressTextKeyReleased
        if (currentAddressText.getText().length() > 500) {
            Toolkit.getDefaultToolkit().beep();
            currentAddressText.setText(currentAddressText.getText().substring(0, 500));
        }
    }//GEN-LAST:event_currentAddressTextKeyReleased

    private void permAddressTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_permAddressTextKeyReleased
        if (permAddressText.getText().length() > 500) {
            Toolkit.getDefaultToolkit().beep();
            permAddressText.setText(permAddressText.getText().substring(0, 500));
        }
    }//GEN-LAST:event_permAddressTextKeyReleased

    private void currentAddressTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_currentAddressTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            currentAddressText.setText(currentAddressText.getText() + " ");
            evt.setKeyCode(KeyEvent.VK_BACK_SPACE);
        }
    }//GEN-LAST:event_currentAddressTextKeyPressed

    private void permAddressTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_permAddressTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            permAddressText.setText(permAddressText.getText() + " ");
            evt.setKeyCode(KeyEvent.VK_BACK_SPACE);
        }
    }//GEN-LAST:event_permAddressTextKeyPressed

    private void backButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_backButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            backButton.doClick();
        }
    }//GEN-LAST:event_backButtonKeyPressed

    private void addButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.doClick();
        }
    }//GEN-LAST:event_addButtonKeyPressed

    private void clearButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clearButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clearButton.doClick();
        }
    }//GEN-LAST:event_clearButtonKeyPressed

    private void homeButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_homeButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            homeButton.doClick();
        }
    }//GEN-LAST:event_homeButtonKeyPressed

    private void copyButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_copyButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            copyButton.doClick();
        }
    }//GEN-LAST:event_copyButtonKeyPressed

    private void studCellTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studCellTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_studCellTextKeyPressed

    private void studMailTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_studMailTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_studMailTextKeyPressed

    private void parentNameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_parentNameTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_parentNameTextKeyPressed

    private void parentCellTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_parentCellTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_parentCellTextKeyPressed

    private void parentMailTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_parentMailTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_parentMailTextKeyPressed

    private void sslcPercentTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sslcPercentTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_sslcPercentTextKeyPressed

    private void pucPercentTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pucPercentTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_pucPercentTextKeyPressed

    private void firstSemCycleComboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstSemCycleComboKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_firstSemCycleComboKeyPressed

    private void cetRankCheckKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cetRankCheckKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_cetRankCheckKeyPressed

    private void cetRankTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cetRankTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_cetRankTextKeyPressed

    private void cetRankCheckFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cetRankCheckFocusGained
        notification.setText("Select if student having CET rank.");
    }//GEN-LAST:event_cetRankCheckFocusGained

    private void studCellTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studCellTextFocusGained
        notification.setText("Enter student phone number.");
    }//GEN-LAST:event_studCellTextFocusGained

    private void studMailTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studMailTextMouseEntered
        notification.setText("Enter student email id.");
    }//GEN-LAST:event_studMailTextMouseEntered

    private void studMailTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_studMailTextFocusGained
        notification.setText("Enter student email id.");
    }//GEN-LAST:event_studMailTextFocusGained

    private void parentNameTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parentNameTextMouseEntered
        notification.setText("Enter parent name.");
    }//GEN-LAST:event_parentNameTextMouseEntered

    private void parentNameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_parentNameTextFocusGained
        notification.setText("Enter parent name.");
    }//GEN-LAST:event_parentNameTextFocusGained

    private void parentCellTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_parentCellTextMouseEntered
        notification.setText("Enter parent phone number.");
    }//GEN-LAST:event_parentCellTextMouseEntered

    private void parentCellTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_parentCellTextFocusGained
        notification.setText("Enter parent phone number.");
    }//GEN-LAST:event_parentCellTextFocusGained

    private void parentMailTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_parentMailTextFocusGained
        notification.setText("Enter parent email id.");
    }//GEN-LAST:event_parentMailTextFocusGained

    private void sslcPercentTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_sslcPercentTextFocusGained
        notification.setText("Enter 10th percent.");
    }//GEN-LAST:event_sslcPercentTextFocusGained

    private void pucPercentTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pucPercentTextMouseEntered
        notification.setText("Enter PUC percent.");
    }//GEN-LAST:event_pucPercentTextMouseEntered

    private void pucPercentTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pucPercentTextFocusGained
        notification.setText("Enter PUC percent.");
    }//GEN-LAST:event_pucPercentTextFocusGained

    private void firstSemCycleComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstSemCycleComboFocusGained
        notification.setText("Select 1st semester cycle.");
    }//GEN-LAST:event_firstSemCycleComboFocusGained

    private void cetRankTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cetRankTextFocusGained
        notification.setText("Enter CET rank.");
    }//GEN-LAST:event_cetRankTextFocusGained

    private void currentAddressTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_currentAddressTextFocusGained
        notification.setText("Enter current address.");
    }//GEN-LAST:event_currentAddressTextFocusGained

    private void permAddressTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_permAddressTextFocusGained
        notification.setText("Enter permanent address.");
    }//GEN-LAST:event_permAddressTextFocusGained

    private void backButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_backButtonFocusGained
        notification.setText("To go back to previous page.");
    }//GEN-LAST:event_backButtonFocusGained

    private void addButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addButtonFocusGained
        notification.setText("To add student.");
    }//GEN-LAST:event_addButtonFocusGained

    private void clearButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_clearButtonFocusGained
        notification.setText("To clear the form feilds.");
    }//GEN-LAST:event_clearButtonFocusGained

    private void homeButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_homeButtonFocusGained
        notification.setText("Go back to home.");
    }//GEN-LAST:event_homeButtonFocusGained

    private void copyButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_copyButtonFocusGained
        notification.setText("To copy current address to permanent address.");
    }//GEN-LAST:event_copyButtonFocusGained
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    public static javax.swing.JLabel bad1;
    public static javax.swing.JLabel bad2;
    public static javax.swing.JLabel bad3;
    public static javax.swing.JLabel bad4;
    public static javax.swing.JLabel bad5;
    public static javax.swing.JLabel bad6;
    public static javax.swing.JLabel bad7;
    public static javax.swing.JLabel bad8;
    private javax.swing.JCheckBox cetRankCheck;
    public static javax.swing.JTextField cetRankText;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton copyButton;
    private javax.swing.JLabel currentAddressLabel;
    public static javax.swing.JTextPane currentAddressText;
    public static javax.swing.JComboBox firstSemCycleCombo;
    private javax.swing.JLabel firstSemCycleLabel;
    private javax.swing.JButton homeButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel notification;
    private javax.swing.JLabel parentCellLabel;
    public static javax.swing.JTextField parentCellText;
    private javax.swing.JLabel parentMailLabel;
    public static javax.swing.JTextField parentMailText;
    private javax.swing.JLabel parentNameLabel;
    public static javax.swing.JTextField parentNameText;
    private javax.swing.JLabel permAddressLabel;
    public static javax.swing.JTextPane permAddressText;
    private javax.swing.JLabel pucPercentLabel;
    public static javax.swing.JTextField pucPercentText;
    private javax.swing.JLabel sslcPercentLabel;
    public static javax.swing.JTextField sslcPercentText;
    private javax.swing.JLabel studCellLabel;
    public static javax.swing.JTextField studCellText;
    private javax.swing.JLabel studMailLabel;
    public static javax.swing.JTextField studMailText;
    private javax.swing.JPanel studentPanel2;
    // End of variables declaration//GEN-END:variables
    // AddStudentUI1 variables 

    private boolean isValidDateStr(String date) {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            sdf.setLenient(false);
            sdf.parse(date);
        } catch (ParseException e) {
            return false;
        } catch (IllegalArgumentException e) {
            return false;
        }
        return true;
    }

    private String toNameFormate(String name, int lower) {
        if ("".equals(name)) {
            return name;
        }
        if (lower == 1) {
            name = name.toLowerCase();
        }
        name = name.replaceFirst(Character.toString(name.charAt(0)), Character.toString(name.toUpperCase().charAt(0)));
        return name;
    }

    private String toFullNameFormate(String name) {
        name = name.toLowerCase();
        String tempText[] = name.split("\\ ");
        name = "";
        for (int i = 0; i < tempText.length; i++) {
            name += toNameFormate(tempText[i], 1) + " ";
        }
        String tempText2[] = name.split("\\.");
        name = "";
        for (int i = 0; i < tempText2.length; i++) {
            name += toNameFormate(tempText2[i], 0) + ".";
        }
        name = name.substring(0, name.length() - 2);
        return name;
    }
}
