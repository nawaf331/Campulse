/*
 * Form: AddSubjectUI
 * version: 0.0.8 (No bugs reported.)
 * Updated: 06-08-2012 at 3.42 PM
 *          12-08-2012
 *          19-08-2012 at 11.33 PM reqst focus after clear.
 *          25-08-2012 at 1.14 AM icon
 *          3-9-2012 at 2.56 kill object
 */
package subject;

import Run.dbConnect;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SwingUtilities;

/**
 *
 * @author Nawaf
 */
public class AddSubjectUI extends javax.swing.JFrame {

    /**
     * Creates new form AddSubjectUI
     */
    public AddSubjectUI() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/main_package/resources/icon.png")).getImage());
        setLocationRelativeTo(null);
        subCodeText.requestFocus();
        filldeptCodeComboBox();
        fillSubTypeComboBox();
        syllabusSchemeComboBox.setSelectedIndex(2);
        alignSpinnerLeft();
        deptCodeCombo.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        subjPanel = new javax.swing.JPanel();
        subTypeLabel = new javax.swing.JLabel();
        subNameLabel = new javax.swing.JLabel();
        syllabusOrderLabel = new javax.swing.JLabel();
        subCodeLabel = new javax.swing.JLabel();
        subTypeCombo = new javax.swing.JComboBox();
        semSpinner = new javax.swing.JSpinner();
        semLabel = new javax.swing.JLabel();
        subNameText = new javax.swing.JTextField();
        subCodeText = new javax.swing.JTextField();
        syllabusOrderSpinner = new javax.swing.JSpinner();
        syllabusSchemeLabel = new javax.swing.JLabel();
        deptCodeLabel = new javax.swing.JLabel();
        deptCodeCombo = new javax.swing.JComboBox();
        displayLabel = new javax.swing.JLabel();
        notification = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();
        bad1 = new javax.swing.JLabel();
        bad2 = new javax.swing.JLabel();
        syllabusSchemeComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add subject");
        setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        subjPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Add subject"));

        subTypeLabel.setText("Subject type :");
        subTypeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                subTypeLabelMouseEntered(evt);
            }
        });

        subNameLabel.setText("Subject name *:");
        subNameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                subNameLabelMouseEntered(evt);
            }
        });

        syllabusOrderLabel.setText("Syllabus order :");
        syllabusOrderLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                syllabusOrderLabelMouseEntered(evt);
            }
        });

        subCodeLabel.setText("Subject code *:");
        subCodeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                subCodeLabelMouseEntered(evt);
            }
        });

        subTypeCombo.setToolTipText("<html>\nSelect subject type.<br>\n( Eg: Theory, Practical or etc.).\n</html>");
        subTypeCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                subTypeComboMouseEntered(evt);
            }
        });
        subTypeCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                subTypeComboFocusGained(evt);
            }
        });

        semSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
        semSpinner.setToolTipText("Semester number.");
        semSpinner.setAlignmentX(1.0F);
        semSpinner.setAlignmentY(1.0F);
        semSpinner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                semSpinnerMouseEntered(evt);
            }
        });
        semSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                semSpinnerFocusGained(evt);
            }
        });
        semSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                semSpinnerKeyPressed(evt);
            }
        });

        semLabel.setText("Semester :");
        semLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                semLabelMouseEntered(evt);
            }
        });

        subNameText.setToolTipText("Subject name.");
        subNameText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                subNameTextMouseEntered(evt);
            }
        });
        subNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                subNameTextFocusGained(evt);
            }
        });
        subNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                subNameTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                subNameTextKeyReleased(evt);
            }
        });

        subCodeText.setToolTipText("Subject code.");
        subCodeText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                subCodeTextMouseEntered(evt);
            }
        });
        subCodeText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                subCodeTextFocusGained(evt);
            }
        });
        subCodeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                subCodeTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                subCodeTextKeyReleased(evt);
            }
        });

        syllabusOrderSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 8, 1));
        syllabusOrderSpinner.setToolTipText("<html>\nSelect the syllabus order of the subject<br>\nwith respect to actual vtu subject order.\n</html>");
        syllabusOrderSpinner.setAlignmentX(1.0F);
        syllabusOrderSpinner.setAlignmentY(1.0F);
        syllabusOrderSpinner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                syllabusOrderSpinnerMouseEntered(evt);
            }
        });
        syllabusOrderSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                syllabusOrderSpinnerFocusGained(evt);
            }
        });
        syllabusOrderSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                syllabusOrderSpinnerKeyPressed(evt);
            }
        });

        syllabusSchemeLabel.setText("Syllabus scheme :");
        syllabusSchemeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                syllabusSchemeLabelMouseEntered(evt);
            }
        });

        deptCodeLabel.setText("Dept. code :");
        deptCodeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deptCodeLabelMouseEntered(evt);
            }
        });

        deptCodeCombo.setToolTipText("Select department code of the subject.");
        deptCodeCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deptCodeComboMouseEntered(evt);
            }
        });
        deptCodeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptCodeComboActionPerformed(evt);
            }
        });
        deptCodeCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                deptCodeComboFocusGained(evt);
            }
        });
        deptCodeCombo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                deptCodeComboKeyReleased(evt);
            }
        });

        displayLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        displayLabel.setForeground(new java.awt.Color(0, 153, 51));
        displayLabel.setText(" ");

        notification.setForeground(new java.awt.Color(51, 51, 251));
        notification.setText(" ");

        addButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Button-Add-icon.png"))); // NOI18N
        addButton.setText("Add");
        addButton.setToolTipText("<html>\nStep 1, Fill all form fields.<br>\nStep 2, Click add button.\n</html>");
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addButtonMouseEntered(evt);
            }
        });
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        addButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addButtonFocusGained(evt);
            }
        });
        addButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addButtonKeyPressed(evt);
            }
        });

        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Actions-edit-clear-icon.png"))); // NOI18N
        clearButton.setText("Clear");
        clearButton.setToolTipText("Click to clear the form fields.");
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearButtonMouseEntered(evt);
            }
        });
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        clearButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                clearButtonFocusGained(evt);
            }
        });
        clearButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                clearButtonKeyPressed(evt);
            }
        });

        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/home-icon.png"))); // NOI18N
        homeButton.setText("Home");
        homeButton.setToolTipText("Click home button to go back to home.");
        homeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeButtonMouseEntered(evt);
            }
        });
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        homeButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                homeButtonFocusGained(evt);
            }
        });
        homeButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                homeButtonKeyPressed(evt);
            }
        });

        bad1.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad1.setForeground(new java.awt.Color(255, 0, 0));
        bad1.setText(" ");

        bad2.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad2.setForeground(new java.awt.Color(255, 0, 0));
        bad2.setText(" ");

        syllabusSchemeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2002", "2006", "2010", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        syllabusSchemeComboBox.setToolTipText("Select corresponding syllabus scheme of subject.");
        syllabusSchemeComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                syllabusSchemeComboBoxMouseEntered(evt);
            }
        });
        syllabusSchemeComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                syllabusSchemeComboBoxFocusGained(evt);
            }
        });

        javax.swing.GroupLayout subjPanelLayout = new javax.swing.GroupLayout(subjPanel);
        subjPanel.setLayout(subjPanelLayout);
        subjPanelLayout.setHorizontalGroup(
            subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(subjPanelLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(displayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(subjPanelLayout.createSequentialGroup()
                        .addGroup(subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(notification, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(subjPanelLayout.createSequentialGroup()
                                .addGroup(subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(deptCodeLabel)
                                    .addComponent(subCodeLabel)
                                    .addComponent(subNameLabel)
                                    .addComponent(semLabel)
                                    .addComponent(syllabusSchemeLabel)
                                    .addComponent(subTypeLabel)
                                    .addComponent(syllabusOrderLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(syllabusOrderSpinner)
                                    .addComponent(subTypeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(semSpinner)
                                    .addComponent(subCodeText)
                                    .addComponent(deptCodeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(syllabusSchemeComboBox, 0, 197, Short.MAX_VALUE)
                                    .addComponent(subNameText)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, subjPanelLayout.createSequentialGroup()
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bad1)
                            .addComponent(bad2))
                        .addContainerGap())))
        );

        subjPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addButton, clearButton, homeButton});

        subjPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {deptCodeCombo, subTypeCombo, syllabusSchemeComboBox});

        subjPanelLayout.setVerticalGroup(
            subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(subjPanelLayout.createSequentialGroup()
                .addComponent(displayLabel)
                .addGap(17, 17, 17)
                .addGroup(subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deptCodeLabel)
                    .addComponent(deptCodeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subCodeLabel)
                    .addComponent(subCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bad1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subNameLabel)
                    .addComponent(subNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bad2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(semLabel)
                    .addComponent(semSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(syllabusSchemeLabel)
                    .addComponent(syllabusSchemeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subTypeLabel)
                    .addComponent(subTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(syllabusOrderLabel)
                    .addComponent(syllabusOrderSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(subjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(notification))
        );

        subjPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addButton, clearButton, homeButton});

        subjPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {deptCodeCombo, semSpinner, subCodeText, subNameText, subTypeCombo, syllabusOrderSpinner, syllabusSchemeComboBox});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(subjPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(subjPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        homeButton.doClick();
    }//GEN-LAST:event_formWindowClosing

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        subCodeText.setText(null);
        subNameText.setText(null);
        deptCodeCombo.setSelectedIndex(0);
        semSpinner.setValue(1);
        subTypeCombo.setSelectedIndex(0);
        syllabusOrderSpinner.setValue(1);
        syllabusSchemeComboBox.setSelectedIndex(2);
        displayLabel.setText(" ");
        bad1.setText(" ");
        bad2.setText(" ");
        deptCodeCombo.requestFocus();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        Run.Runner.RunnerObj.MainUIObj.show();
        this.setVisible(false);
        Run.Runner.RunnerObj.MainUIObj.AddSubjectUIObj = null;
    }//GEN-LAST:event_homeButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if ("".equals(subCodeText.getText())) {
            JOptionPane.showMessageDialog(null, "Subject code field cannot be empty.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            subCodeText.requestFocus();
            return;
        }
        if ("!".equals(bad1.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate subject code.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            subCodeText.requestFocus();
            return;
        }
        if ("".equals(subNameText.getText())) {
            JOptionPane.showMessageDialog(null, "Subject name field cannot be empty.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            subNameText.requestFocus();
            return;
        }
        if ("!".equals(bad2.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate subject name.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            subNameText.requestFocus();
            return;
        }
        int returnStatus = 0;
        try {
            String deptTemp = deptCodeCombo.getSelectedItem().toString();
            int semTemp = Integer.parseInt(semSpinner.getValue().toString());
            String smlTemp = subTypeCombo.getSelectedItem().toString();
            String SyllabusTemp = syllabusSchemeComboBox.getSelectedItem().toString();
            int orderTemp = Integer.parseInt(syllabusOrderSpinner.getValue().toString());
            String subAddQuery = "insert into subject values ('" + (subCodeText.getText()) + "','" + (deptTemp) + "','" + (subNameText.getText()) + "'," + (semTemp) + ",'" + (smlTemp) + "'," + (SyllabusTemp) + "," + (orderTemp) + ")";
            returnStatus = dbConnect.getCon().createStatement().executeUpdate(subAddQuery);
        } catch (SQLException ex) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (returnStatus != 0) {
            String tempSubjectCode = subCodeText.getText();
            clearButton.doClick();
            displayLabel.setText("<html><b><font color=blue>" + tempSubjectCode + "</b><font color=green> successfully added.</html>");
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void subCodeTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_subCodeTextFocusGained
        notification.setText("Enter subject code.");
    }//GEN-LAST:event_subCodeTextFocusGained

    private void subNameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_subNameTextFocusGained
        notification.setText("Enter subject name.");
    }//GEN-LAST:event_subNameTextFocusGained

    private void deptCodeComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deptCodeComboMouseEntered
        notification.setText("Select department code.");
    }//GEN-LAST:event_deptCodeComboMouseEntered

    private void semSpinnerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_semSpinnerFocusGained
        notification.setText("Select semester number.");
    }//GEN-LAST:event_semSpinnerFocusGained

    private void subTypeComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subTypeComboMouseEntered
        notification.setText("Select subject type.");
    }//GEN-LAST:event_subTypeComboMouseEntered

    private void syllabusOrderSpinnerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_syllabusOrderSpinnerFocusGained
        notification.setText("Select syllabus order.");
    }//GEN-LAST:event_syllabusOrderSpinnerFocusGained

    private void addButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseEntered
        notification.setText("To add new subject.");
    }//GEN-LAST:event_addButtonMouseEntered

    private void clearButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseEntered
        notification.setText("To clear form fields.");
    }//GEN-LAST:event_clearButtonMouseEntered

    private void homeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseEntered
        notification.setText("Go back to home.");
    }//GEN-LAST:event_homeButtonMouseEntered

    private void deptCodeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptCodeComboActionPerformed
        semSpinner.setValue(1);
        setSemester();
    }//GEN-LAST:event_deptCodeComboActionPerformed

    private void subCodeTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subCodeTextKeyReleased
        if (subCodeText.getText().length() > 10) {
            Toolkit.getDefaultToolkit().beep();
            subCodeText.setText(subCodeText.getText().substring(0, 10));
        }
        if (!subCodeText.getText().matches("[a-zA-Z0-9][a-zA-Z0-9]*")) {
            bad1.setText("!");
        } else {
            bad1.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT) {
            return;
        }
        subCodeText.setText(subCodeText.getText().toUpperCase());
    }//GEN-LAST:event_subCodeTextKeyReleased

    private void subNameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subNameTextKeyReleased
        if (subNameText.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            subNameText.setText(subNameText.getText().substring(0, 50));
        }
        if (!subNameText.getText().matches("[a-zA-Z][ .a-zA-Z]*")) {
            bad2.setText("!");
        } else {
            bad2.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            return;
        }
        subNameText.setText(toFullNameFormate(subNameText.getText()));
    }//GEN-LAST:event_subNameTextKeyReleased

    private void deptCodeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deptCodeLabelMouseEntered
        notification.setText("Department code.");
    }//GEN-LAST:event_deptCodeLabelMouseEntered

    private void subCodeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subCodeLabelMouseEntered
        notification.setText("Subject code.");
    }//GEN-LAST:event_subCodeLabelMouseEntered

    private void subNameLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subNameLabelMouseEntered
        notification.setText("Subject name.");
    }//GEN-LAST:event_subNameLabelMouseEntered

    private void semLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semLabelMouseEntered
        notification.setText("Semester.");
    }//GEN-LAST:event_semLabelMouseEntered

    private void syllabusSchemeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_syllabusSchemeLabelMouseEntered
        notification.setText("Syllabus scheme.");
    }//GEN-LAST:event_syllabusSchemeLabelMouseEntered

    private void subTypeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subTypeLabelMouseEntered
        notification.setText("Subject type.");
    }//GEN-LAST:event_subTypeLabelMouseEntered

    private void syllabusOrderLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_syllabusOrderLabelMouseEntered
        notification.setText("Syllabus order.");
    }//GEN-LAST:event_syllabusOrderLabelMouseEntered

    private void deptCodeComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deptCodeComboFocusGained
        notification.setText("Select department code.");
    }//GEN-LAST:event_deptCodeComboFocusGained

    private void subCodeTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subCodeTextMouseEntered
        notification.setText("Enter subject code.");
    }//GEN-LAST:event_subCodeTextMouseEntered

    private void subNameTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subNameTextMouseEntered
        notification.setText("Enter subject name.");
    }//GEN-LAST:event_subNameTextMouseEntered

    private void semSpinnerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semSpinnerMouseEntered
        notification.setText("Select semester number.");
    }//GEN-LAST:event_semSpinnerMouseEntered

    private void syllabusSchemeComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_syllabusSchemeComboBoxMouseEntered
        notification.setText("Select syllabus scheem.");
    }//GEN-LAST:event_syllabusSchemeComboBoxMouseEntered

    private void syllabusSchemeComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_syllabusSchemeComboBoxFocusGained
        notification.setText("Select syllabus scheem.");
    }//GEN-LAST:event_syllabusSchemeComboBoxFocusGained

    private void deptCodeComboKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deptCodeComboKeyReleased
        setSemester();
    }//GEN-LAST:event_deptCodeComboKeyReleased

    private void subTypeComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_subTypeComboFocusGained
        notification.setText("Select subject type.");
    }//GEN-LAST:event_subTypeComboFocusGained

    private void syllabusOrderSpinnerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_syllabusOrderSpinnerMouseEntered
        notification.setText("Select syllabus order.");
    }//GEN-LAST:event_syllabusOrderSpinnerMouseEntered

    private void addButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addButtonFocusGained
        notification.setText("To add new subject.");
    }//GEN-LAST:event_addButtonFocusGained

    private void clearButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_clearButtonFocusGained
        notification.setText("To clear form fields.");
    }//GEN-LAST:event_clearButtonFocusGained

    private void homeButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_homeButtonFocusGained
        notification.setText("Go back to home.");
    }//GEN-LAST:event_homeButtonFocusGained

    private void subCodeTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subCodeTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_subCodeTextKeyPressed

    private void subNameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subNameTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_subNameTextKeyPressed

    private void semSpinnerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_semSpinnerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_semSpinnerKeyPressed

    private void syllabusOrderSpinnerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_syllabusOrderSpinnerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_syllabusOrderSpinnerKeyPressed

    private void addButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.doClick();
        }
    }//GEN-LAST:event_addButtonKeyPressed

    private void clearButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clearButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clearButton.doClick();
        }
    }//GEN-LAST:event_clearButtonKeyPressed

    private void homeButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_homeButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            homeButton.doClick();
        }
    }//GEN-LAST:event_homeButtonKeyPressed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel bad1;
    private javax.swing.JLabel bad2;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox deptCodeCombo;
    private javax.swing.JLabel deptCodeLabel;
    private javax.swing.JLabel displayLabel;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel notification;
    private javax.swing.JLabel semLabel;
    private javax.swing.JSpinner semSpinner;
    private javax.swing.JLabel subCodeLabel;
    private javax.swing.JTextField subCodeText;
    private javax.swing.JLabel subNameLabel;
    private javax.swing.JTextField subNameText;
    private javax.swing.JComboBox subTypeCombo;
    private javax.swing.JLabel subTypeLabel;
    private javax.swing.JPanel subjPanel;
    private javax.swing.JLabel syllabusOrderLabel;
    private javax.swing.JSpinner syllabusOrderSpinner;
    private javax.swing.JComboBox syllabusSchemeComboBox;
    private javax.swing.JLabel syllabusSchemeLabel;
    // End of variables declaration//GEN-END:variables

    private void setSemester() {
        if (deptCodeCombo.getModel().getSize() == 0) {
            return;
        }
        try {
            String deptQuery = "Select NumOfSems from department where DeptCode=\"" + deptCodeCombo.getSelectedItem().toString() + "\"";
            ResultSet rs = dbConnect.getCon().createStatement().executeQuery(deptQuery);

            while (rs.next()) {
                semSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, Integer.parseInt(rs.getString("NumOfSems")), 1));
            }
            rs.close();
        } catch (SQLException ex) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void filldeptCodeComboBox() {
        try {
            deptCodeCombo.setModel(new javax.swing.DefaultComboBoxModel());
            String deptQuery = "Select DeptCode from department";
            ResultSet rs = dbConnect.getCon().createStatement().executeQuery(deptQuery);

            while (rs.next()) {
                String deptTemp = rs.getString("DeptCode");
                deptCodeCombo.addItem(deptTemp);
            }
            rs.close();
        } catch (SQLException ex) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void fillSubTypeComboBox() {
        try {
            subTypeCombo.setModel(new javax.swing.DefaultComboBoxModel());
            String subjQuery = "Select * from submarkslimit";
            ResultSet rs = dbConnect.getCon().createStatement().executeQuery(subjQuery);
            while (rs.next()) {
                String subjTemp = rs.getString("SubType");
                subTypeCombo.addItem(subjTemp);
            }
            rs.close();
        } catch (SQLException ex) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void alignSpinnerLeft() {
        JSpinner.DefaultEditor semEditor = new JSpinner.DefaultEditor(semSpinner);
        semEditor.getTextField().setHorizontalAlignment(SwingUtilities.LEFT);
        semSpinner.setEditor(semEditor);

        JSpinner.DefaultEditor syllabusEditor = new JSpinner.DefaultEditor(syllabusOrderSpinner);
        syllabusEditor.getTextField().setHorizontalAlignment(SwingUtilities.LEFT);
        syllabusOrderSpinner.setEditor(syllabusEditor);
    }

    private String toNameFormate(String name, int lower) {
        if ("".equals(name)) {
            return name;
        }
        if (lower == 1) {
            name = name.toLowerCase();
        }
        name = name.replaceFirst(Character.toString(name.charAt(0)), Character.toString(name.toUpperCase().charAt(0)));
        return name;
    }

    private String toFullNameFormate(String name) {
        name = name.toLowerCase();
        String tempText[] = name.split("\\ ");
        name = "";
        for (int i = 0; i < tempText.length; i++) {
            name += toNameFormate(tempText[i], 1) + " ";
        }
        String tempText2[] = name.split("\\.");
        name = "";
        for (int i = 0; i < tempText2.length; i++) {
            name += toNameFormate(tempText2[i], 0) + ".";
        }
        name = name.substring(0, name.length() - 2);
        return name;
    }
}
