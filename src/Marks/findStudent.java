/*
 * Form : findStudent
 * Version :0.0.5 (No bug reported.)
 * Update : 18-08-2012 at 11.42 PM
 *  25-08-2012 at 1.08 Am  icon
 *  31-08-2012 at 2.18 Am unwanted code removed.
 * 31-08-12 at 3.05Pm editable table removed
 * 3-9-2012 at 2.38 pm kill object
 */
package marks;

import Run.dbConnect;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import studentDetails.StudenDerivedMarks;

/**
 *
 * @author user
 */
public class findStudent extends javax.swing.JFrame {

    /**
     * Creates new form findStudent
     */
    public static findStudent findStudentPointer;

    public findStudent() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/main_package/resources/icon.png")).getImage());
        setLocationRelativeTo(null);
        findStudentPointer = this;
        findStudentTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        fillFindTable();
        filldeptCodeComboBox();
        findText.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        findText = new javax.swing.JTextField();
        statusLabel = new javax.swing.JLabel();
        batchCB = new javax.swing.JComboBox();
        statuseComboBox = new javax.swing.JComboBox();
        selectedUSNLabel = new javax.swing.JLabel();
        selectedUSNText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        findStudentTable = new javax.swing.JTable();
        batchLabel = new javax.swing.JLabel();
        semesterLabel = new javax.swing.JLabel();
        marksButtone = new javax.swing.JButton();
        deptCodeLabel = new javax.swing.JLabel();
        semesterComboBox = new javax.swing.JComboBox();
        homeButton = new javax.swing.JButton();
        deptComboBox = new javax.swing.JComboBox();
        notification = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Student marks");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Find"));

        findText.setToolTipText("Enter text to filter from the table.");
        findText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                findTextMouseEntered(evt);
            }
        });
        findText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                findTextFocusGained(evt);
            }
        });
        findText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                findTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                findTextKeyReleased(evt);
            }
        });

        statusLabel.setText("Status :");
        statusLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                statusLabelMouseEntered(evt);
            }
        });

        batchCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20" }));
        batchCB.setToolTipText("Click and select batch to filter the student.");
        batchCB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                batchCBMouseEntered(evt);
            }
        });
        batchCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batchCBActionPerformed(evt);
            }
        });
        batchCB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                batchCBFocusGained(evt);
            }
        });

        statuseComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Current", "Passed Out", "Year Out", "TC", "NFT" }));
        statuseComboBox.setToolTipText("Click and select status to filter the student.");
        statuseComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                statuseComboBoxMouseEntered(evt);
            }
        });
        statuseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statuseComboBoxActionPerformed(evt);
            }
        });
        statuseComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                statuseComboBoxFocusGained(evt);
            }
        });

        selectedUSNLabel.setText("Selected USN :");
        selectedUSNLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                selectedUSNLabelMouseEntered(evt);
            }
        });

        selectedUSNText.setBackground(new java.awt.Color(204, 204, 204));
        selectedUSNText.setEditable(false);
        selectedUSNText.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        selectedUSNText.setForeground(new java.awt.Color(204, 204, 204));
        selectedUSNText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        selectedUSNText.setToolTipText("Selected student.");
        selectedUSNText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                selectedUSNTextMouseEntered(evt);
            }
        });
        selectedUSNText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                selectedUSNTextFocusGained(evt);
            }
        });

        findStudentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "USN", "Name", "Department", "Semester", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        findStudentTable.setToolTipText("Click and select student from the table.");
        findStudentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                findStudentTableMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                findStudentTableMouseEntered(evt);
            }
        });
        findStudentTable.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                findStudentTableFocusGained(evt);
            }
        });
        findStudentTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                findStudentTableKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                findStudentTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(findStudentTable);
        findStudentTable.getColumnModel().getColumn(0).setMinWidth(100);
        findStudentTable.getColumnModel().getColumn(0).setPreferredWidth(100);
        findStudentTable.getColumnModel().getColumn(0).setMaxWidth(100);
        findStudentTable.getColumnModel().getColumn(2).setMinWidth(0);
        findStudentTable.getColumnModel().getColumn(2).setPreferredWidth(0);
        findStudentTable.getColumnModel().getColumn(2).setMaxWidth(0);
        findStudentTable.getColumnModel().getColumn(3).setMinWidth(0);
        findStudentTable.getColumnModel().getColumn(3).setPreferredWidth(0);
        findStudentTable.getColumnModel().getColumn(3).setMaxWidth(0);
        findStudentTable.getColumnModel().getColumn(4).setMinWidth(0);
        findStudentTable.getColumnModel().getColumn(4).setPreferredWidth(0);
        findStudentTable.getColumnModel().getColumn(4).setMaxWidth(0);

        batchLabel.setText("Batch :");
        batchLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                batchLabelMouseEntered(evt);
            }
        });

        semesterLabel.setText("Semester :");
        semesterLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                semesterLabelMouseEntered(evt);
            }
        });

        marksButtone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main_package/resources/makSmall.png"))); // NOI18N
        marksButtone.setText("Marks");
        marksButtone.setToolTipText("<html>\nStep 1, Select a student from the table.<br>\nStep 2, Click mark button.<br>\n</html>");
        marksButtone.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        marksButtone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                marksButtoneMouseEntered(evt);
            }
        });
        marksButtone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marksButtoneActionPerformed(evt);
            }
        });
        marksButtone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                marksButtoneFocusGained(evt);
            }
        });
        marksButtone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                marksButtoneKeyPressed(evt);
            }
        });

        deptCodeLabel.setText("Dept. code :");
        deptCodeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deptCodeLabelMouseEntered(evt);
            }
        });

        semesterComboBox.setToolTipText("Click and select semester to filter the student.");
        semesterComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                semesterComboBoxMouseEntered(evt);
            }
        });
        semesterComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semesterComboBoxActionPerformed(evt);
            }
        });
        semesterComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                semesterComboBoxFocusGained(evt);
            }
        });

        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main_package/resources/home-icon.png"))); // NOI18N
        homeButton.setText("Home");
        homeButton.setToolTipText("Click home button to go back to home.");
        homeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        homeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeButtonMouseEntered(evt);
            }
        });
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        homeButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                homeButtonFocusGained(evt);
            }
        });

        deptComboBox.setToolTipText("Click and select department code to filter the student.");
        deptComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deptComboBoxMouseEntered(evt);
            }
        });
        deptComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptComboBoxActionPerformed(evt);
            }
        });
        deptComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                deptComboBoxFocusGained(evt);
            }
        });

        notification.setForeground(new java.awt.Color(51, 51, 251));
        notification.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(notification, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(deptCodeLabel)
                                            .addComponent(deptComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(semesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(semesterLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(batchLabel)
                                            .addComponent(batchCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(selectedUSNLabel)
                                        .addGap(12, 12, 12)
                                        .addComponent(selectedUSNText, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(marksButtone))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGap(25, 25, 25)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(statuseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(statusLabel))))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(findText)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(homeButton)
                                .addGap(114, 114, 114))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {homeButton, marksButtone});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectedUSNLabel)
                    .addComponent(selectedUSNText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(marksButtone))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(semesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(deptCodeLabel)
                                    .addComponent(semesterLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deptComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusLabel)
                            .addComponent(batchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(statuseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(batchCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(findText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(notification))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {homeButton, marksButtone});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        Run.Runner.RunnerObj.MainUIObj.show();
        this.dispose();
        Run.Runner.RunnerObj.MainUIObj.findStudentObj = null;
    }//GEN-LAST:event_homeButtonActionPerformed

    private void statuseComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statuseComboBoxActionPerformed
        filter();
    }//GEN-LAST:event_statuseComboBoxActionPerformed

    private void batchCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batchCBActionPerformed
        filter();
    }//GEN-LAST:event_batchCBActionPerformed

    private void semesterComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semesterComboBoxActionPerformed
        filter();
    }//GEN-LAST:event_semesterComboBoxActionPerformed

    private void deptComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptComboBoxActionPerformed
        fillSemesterComboBox();
    }//GEN-LAST:event_deptComboBoxActionPerformed

    private void findTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_findTextKeyReleased
        filter();
    }//GEN-LAST:event_findTextKeyReleased

    private void findStudentTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findStudentTableMouseEntered
        notification.setText("To select student.");
    }//GEN-LAST:event_findStudentTableMouseEntered

    private void findStudentTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_findStudentTableKeyReleased
        if (findStudentTable.getRowCount() > 0) {
            int row = findStudentTable.convertRowIndexToModel(findStudentTable.getSelectedRow());
            selectedUSNText.setText(findStudentTable.getModel().getValueAt(row, 0).toString());
        }
    }//GEN-LAST:event_findStudentTableKeyReleased

    private void findStudentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findStudentTableMouseClicked
        if (findStudentTable.getRowCount() > 0) {
            int row = findStudentTable.convertRowIndexToModel(findStudentTable.getSelectedRow());
            selectedUSNText.setText(findStudentTable.getModel().getValueAt(row, 0).toString());
        }
    }//GEN-LAST:event_findStudentTableMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        homeButton.doClick();
    }//GEN-LAST:event_formWindowClosing

    private void selectedUSNLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectedUSNLabelMouseEntered
        notification.setText("Selected USN.");
    }//GEN-LAST:event_selectedUSNLabelMouseEntered

    private void deptCodeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deptCodeLabelMouseEntered
        notification.setText("Dept. Code.");
    }//GEN-LAST:event_deptCodeLabelMouseEntered

    private void semesterLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semesterLabelMouseEntered
        notification.setText("Semester.");
    }//GEN-LAST:event_semesterLabelMouseEntered

    private void batchLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_batchLabelMouseEntered
        notification.setText("Batch.");
    }//GEN-LAST:event_batchLabelMouseEntered

    private void statusLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusLabelMouseEntered
        notification.setText("Status.");
    }//GEN-LAST:event_statusLabelMouseEntered

    private void selectedUSNTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectedUSNTextMouseEntered
        notification.setText("Selected USN.");
    }//GEN-LAST:event_selectedUSNTextMouseEntered

    private void selectedUSNTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_selectedUSNTextFocusGained
        notification.setText("Selected USN.");
    }//GEN-LAST:event_selectedUSNTextFocusGained

    private void deptComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deptComboBoxMouseEntered
        notification.setText("To select department code.");
    }//GEN-LAST:event_deptComboBoxMouseEntered

    private void deptComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deptComboBoxFocusGained
        notification.setText("To select department code.");
    }//GEN-LAST:event_deptComboBoxFocusGained

    private void semesterComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_semesterComboBoxMouseEntered
        notification.setText("To select semester.");
    }//GEN-LAST:event_semesterComboBoxMouseEntered

    private void semesterComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_semesterComboBoxFocusGained
        notification.setText("To select semester.");
    }//GEN-LAST:event_semesterComboBoxFocusGained

    private void batchCBMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_batchCBMouseEntered
        notification.setText("To select batch.");
    }//GEN-LAST:event_batchCBMouseEntered

    private void batchCBFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_batchCBFocusGained
        notification.setText("To select batch.");
    }//GEN-LAST:event_batchCBFocusGained

    private void statuseComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statuseComboBoxMouseEntered
        notification.setText("To select current student status.");
    }//GEN-LAST:event_statuseComboBoxMouseEntered

    private void statuseComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_statuseComboBoxFocusGained
        notification.setText("To select current student status.");
    }//GEN-LAST:event_statuseComboBoxFocusGained

    private void findTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findTextMouseEntered
        notification.setText("Enter the text to filter from the table.");
    }//GEN-LAST:event_findTextMouseEntered

    private void findTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_findTextFocusGained
        notification.setText("Enter the text to filter from the table.");
    }//GEN-LAST:event_findTextFocusGained

    private void findStudentTableFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_findStudentTableFocusGained
        notification.setText("To select student.");
    }//GEN-LAST:event_findStudentTableFocusGained

    private void homeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseEntered
        notification.setText("Go back to home.");
    }//GEN-LAST:event_homeButtonMouseEntered

    private void homeButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_homeButtonFocusGained
        notification.setText("Go back to home.");
    }//GEN-LAST:event_homeButtonFocusGained

    private void findTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_findTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            findStudentTable.requestFocus();
        }
    }//GEN-LAST:event_findTextKeyPressed

    private void findStudentTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_findStudentTableKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            marksButtone.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            findText.requestFocus();
        }
    }//GEN-LAST:event_findStudentTableKeyPressed

    private void marksButtoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_marksButtoneFocusGained
        notification.setText("To view the marks.");
    }//GEN-LAST:event_marksButtoneFocusGained

    private void marksButtoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marksButtoneActionPerformed
        if (findStudentTable.getSelectionModel().isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select a student.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (!findStudentTable.getModel().getValueAt(findStudentTable.convertRowIndexToModel(findStudentTable.getSelectedRow()), 0).toString().equals(selectedUSNText.getText())) {
            JOptionPane.showMessageDialog(null, "Please make sure your selection.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        StudenDerivedMarks form = new StudenDerivedMarks(selectedUSNText.getText(), deptComboBox.getSelectedItem().toString(), 0);
        form.setVisible(true);
        this.hide();
    }//GEN-LAST:event_marksButtoneActionPerformed

    private void marksButtoneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_marksButtoneMouseEntered
        notification.setText("To view the marks.");
    }//GEN-LAST:event_marksButtoneMouseEntered

    private void marksButtoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_marksButtoneKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            marksButtone.doClick();
        }
    }//GEN-LAST:event_marksButtoneKeyPressed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox batchCB;
    private javax.swing.JLabel batchLabel;
    private javax.swing.JLabel deptCodeLabel;
    private javax.swing.JComboBox deptComboBox;
    private javax.swing.JTable findStudentTable;
    private javax.swing.JTextField findText;
    private javax.swing.JButton homeButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton marksButtone;
    private javax.swing.JLabel notification;
    private javax.swing.JLabel selectedUSNLabel;
    private javax.swing.JTextField selectedUSNText;
    private javax.swing.JComboBox semesterComboBox;
    private javax.swing.JLabel semesterLabel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JComboBox statuseComboBox;
    // End of variables declaration//GEN-END:variables

    private void filldeptCodeComboBox() {
        try {
            deptComboBox.setModel(new javax.swing.DefaultComboBoxModel());
            String deptQuery = "Select DeptCode from department";
            deptComboBox.addItem("All");
            ResultSet rs = dbConnect.getCon().createStatement().executeQuery(deptQuery);
            while (rs.next()) {
                String deptTemp = rs.getString("DeptCode");
                deptComboBox.addItem(deptTemp);
            }
            rs.close();
        } catch (SQLException ex) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void fillSemesterComboBox() {
        if (deptComboBox.getModel().getSize() == 0) {
            return;
        }
        DefaultComboBoxModel modelComboBox = new DefaultComboBoxModel();
        semesterComboBox.setModel(modelComboBox);
        modelComboBox.addElement("All");
        String numberOfSemester = null;
        if (deptComboBox.getSelectedIndex() == 0) {
            numberOfSemester = "10";
        } else {
            String sql = "Select NumOfSems from department where DeptCode=\"" + deptComboBox.getSelectedItem().toString() + "\"";
            try {
                ResultSet rs = dbConnect.getCon().createStatement().executeQuery(sql);
                while (rs.next()) {
                    numberOfSemester = rs.getString("NumOfSems");
                }
                rs.close();
            } catch (Exception e) {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        for (int i = 0; i < Integer.parseInt(numberOfSemester); i++) {
            modelComboBox.addElement(Integer.toString(i + 1));
        }
    }

    private void fillFindTable() {
        try {
            DefaultTableModel model = (DefaultTableModel) findStudentTable.getModel();
            model.getDataVector().removeAllElements();
            String sql = "Select * from student order by FName,LName";
            ResultSet rs = dbConnect.getCon().createStatement().executeQuery(sql);
            while (rs.next()) {
                String usn = rs.getString(1);
                String name = rs.getString(3) == null ? rs.getString(2) : rs.getString(2) + " " + rs.getString(3);
                String sem = rs.getString(4);
                String deptCode = rs.getString(5);
                String status = rs.getString(10);
                model.addRow(new Object[]{usn, name, deptCode, sem, status});
            }
            rs.close();
        } catch (Exception e) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void filter() {
        String deptCode = deptComboBox.getSelectedItem().toString();
        String sem = semesterComboBox.getSelectedItem().toString();
        String currentStatus = statuseComboBox.getSelectedItem().toString();
        String userText = findText.getText();
        String batch = batchCB.getSelectedItem().toString();

        if ("All".equals(deptCode)) {
            deptCode = "";
        }
        if ("All".equals(sem)) {
            sem = "";
        }
        if ("All".equals(currentStatus)) {
            currentStatus = "";
        }
        if ("All".equals(batch)) {
            batch = "";
        }

        ArrayList<RowFilter<Object, Object>> andFilters = new ArrayList<RowFilter<Object, Object>>();
        andFilters.add(RowFilter.regexFilter("(?i)" + userText, 0, 1));
        andFilters.add(RowFilter.regexFilter("(?i)" + deptCode, 2));
        andFilters.add(RowFilter.regexFilter("(?i)" + batch + "[a-zA-Z]+[0-9]*", 0));
        andFilters.add(RowFilter.regexFilter("(?i)" + sem, 3));
        andFilters.add(RowFilter.regexFilter("(?i)" + currentStatus, 4));

        DefaultTableModel model = (DefaultTableModel) findStudentTable.getModel();
        final TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model);
        sorter.setRowFilter(RowFilter.andFilter(andFilters));
        findStudentTable.setRowSorter(sorter);

        if (findStudentTable.getRowCount() > 0) {
            selectedUSNText.setForeground(Color.black);
            findStudentTable.getSelectionModel().setSelectionInterval(0, 0);
            int row = findStudentTable.convertRowIndexToModel(findStudentTable.getSelectedRow());
            selectedUSNText.setText(findStudentTable.getModel().getValueAt(row, 0).toString());
        } else {
            Toolkit.getDefaultToolkit().beep();
            selectedUSNText.setForeground(Color.red);
            selectedUSNText.setText("No match found.");
        }
    }
}
