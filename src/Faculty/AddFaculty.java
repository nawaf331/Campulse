/*
 * Form: AddFaculty
 * Version: 0.2.4
 * Updated: 04-08-2012 8.18 P.M
 *          12-08-2012 2.52 PM
 *          14-08-2012 10:35 AM
 *          15-08-2012 3.11 PM
 *          15-08-2012 4.07 PM
 *          15-08-2012 7.22 PM
 *          18-08-2012 at 6.47 PM vlaidateUsername() got changed.
 *          19-08-2012 at 8.18PM reqstFocusOfChech box
 *          19-08-2012 at 11.29 PM reqst focus after clear.
 *          19-08-2012 at 11.55PM reqstFocus when date error
 *          20-08-2012 12.04 AM hostal checkBox Updated.
 *          20-08-2012 1.46 AM address feild enter key bug fixed
 *          23-08-2012 2.40 AM qualification text conversion
 *          23-08-2012 2.59 AM validate username updated.
 *          25-08-2012 at 1.03 AM icon
 *          26-08-2012 at 9.59 Availability status
 *          30-08-2012 at 2.46 PM qualification text conversion is removed.
 *          30-08-2012 at 5.38 PM month comboBox modified.
 *          31-08-2012 at 11.53 PM hostel spelling mistake
 *          31-08-2012 at 12.33 PM photo panel name changed.
 *          3-09-2012 at 2.24 Pm kill object
 */
package faculty;

import Misc.MyImageFilter;
import Run.dbConnect;
import com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Jikson
 */
public class AddFaculty extends javax.swing.JFrame {

    /**
     * Creates new form AddFaculty
     */
    private static File myFile = null;

    public AddFaculty() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/main_package/resources/icon.png")).getImage());
        setLocationRelativeTo(null);
        hostelComboBox.setEnabled(false);
        hostelText.setEnabled(false);
        filldeptCodeComboBox();
        displayInfoLabel.setText(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FacultyAddPanel = new javax.swing.JPanel();
        ufnLabel = new javax.swing.JLabel();
        ufnText = new javax.swing.JTextField();
        fnameLabel = new javax.swing.JLabel();
        lNameLabel = new javax.swing.JLabel();
        fNameText = new javax.swing.JTextField();
        lNameText = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        qualificationLabel = new javax.swing.JLabel();
        qualificationText = new javax.swing.JTextField();
        DOBLabel = new javax.swing.JLabel();
        DOJLabel = new javax.swing.JLabel();
        AddressLabel = new javax.swing.JLabel();
        deptCodeLabel = new javax.swing.JLabel();
        deptCodeCombo = new javax.swing.JComboBox();
        phoneLabel = new javax.swing.JLabel();
        phoneText = new javax.swing.JTextField();
        emailIDLabel = new javax.swing.JLabel();
        emailIDText = new javax.swing.JTextField();
        hostelComboBox = new javax.swing.JComboBox();
        hostelText = new javax.swing.JTextField();
        genderComboBox = new javax.swing.JComboBox();
        hostelliteCheckBox = new javax.swing.JCheckBox();
        addButton = new javax.swing.JButton();
        homeButton = new javax.swing.JButton();
        photoPanel = new javax.swing.JPanel();
        facultyPhotoLabel = new javax.swing.JLabel();
        dayOfBirthSpinner = new javax.swing.JSpinner();
        monthOfBirthCombo = new javax.swing.JComboBox();
        yearOfBirthSpinner = new com.toedter.calendar.JYearChooser();
        dayOfjoinSpinner = new javax.swing.JSpinner();
        monthOfjoinCombo = new javax.swing.JComboBox();
        yearOfJoinSpinner = new com.toedter.calendar.JYearChooser();
        notification = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        addressTextArea = new javax.swing.JTextPane();
        displayInfoLabel = new javax.swing.JLabel();
        clearButton = new javax.swing.JButton();
        bad1 = new javax.swing.JLabel();
        bad2 = new javax.swing.JLabel();
        bad3 = new javax.swing.JLabel();
        bad4 = new javax.swing.JLabel();
        bad5 = new javax.swing.JLabel();
        bad6 = new javax.swing.JLabel();
        bad7 = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        userNameText = new javax.swing.JTextField();
        passwordText = new javax.swing.JTextField();
        bad8 = new javax.swing.JLabel();
        bad9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add faculty");
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                AddFacultyClosing(evt);
            }
        });

        FacultyAddPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Add faculty"));
        FacultyAddPanel.setPreferredSize(new java.awt.Dimension(607, 664));

        ufnLabel.setText("University faculty No. * :");
        ufnLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ufnLabelMouseEntered(evt);
            }
        });

        ufnText.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ufnText.setToolTipText("University faculty number.");
        ufnText.setMinimumSize(new java.awt.Dimension(6, 23));
        ufnText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ufnTextMouseEntered(evt);
            }
        });
        ufnText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ufnTextFocusGained(evt);
            }
        });
        ufnText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ufnTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ufnTextKeyReleased(evt);
            }
        });

        fnameLabel.setText("First name *:");
        fnameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fnameLabelMouseEntered(evt);
            }
        });

        lNameLabel.setText("Last name :");
        lNameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lNameLabelMouseEntered(evt);
            }
        });

        fNameText.setToolTipText("First name.");
        fNameText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fNameTextMouseEntered(evt);
            }
        });
        fNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fNameTextFocusGained(evt);
            }
        });
        fNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fNameTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fNameTextKeyReleased(evt);
            }
        });

        lNameText.setToolTipText("Last name.");
        lNameText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lNameTextMouseEntered(evt);
            }
        });
        lNameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lNameTextFocusGained(evt);
            }
        });
        lNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lNameTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lNameTextKeyReleased(evt);
            }
        });

        genderLabel.setText("Gender *:");
        genderLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                genderLabelMouseEntered(evt);
            }
        });

        qualificationLabel.setText("Qualification :");
        qualificationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                qualificationLabelMouseEntered(evt);
            }
        });

        qualificationText.setToolTipText("Qualification.");
        qualificationText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                qualificationTextMouseEntered(evt);
            }
        });
        qualificationText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                qualificationTextFocusGained(evt);
            }
        });
        qualificationText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                qualificationTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qualificationTextKeyReleased(evt);
            }
        });

        DOBLabel.setText("DOB :");
        DOBLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DOBLabelMouseEntered(evt);
            }
        });

        DOJLabel.setText("DOJ :");
        DOJLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DOJLabelMouseEntered(evt);
            }
        });

        AddressLabel.setText("Address :");
        AddressLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AddressLabelMouseEntered(evt);
            }
        });

        deptCodeLabel.setText("Dept. code *:");
        deptCodeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deptCodeLabelMouseEntered(evt);
            }
        });

        deptCodeCombo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        deptCodeCombo.setToolTipText("Click and select department code.");
        deptCodeCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deptCodeComboMouseEntered(evt);
            }
        });
        deptCodeCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                deptCodeComboFocusGained(evt);
            }
        });

        phoneLabel.setText("Phone number :");
        phoneLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                phoneLabelMouseEntered(evt);
            }
        });

        phoneText.setToolTipText("Phone number.");
        phoneText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                phoneTextMouseEntered(evt);
            }
        });
        phoneText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                phoneTextFocusGained(evt);
            }
        });
        phoneText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                phoneTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                phoneTextKeyReleased(evt);
            }
        });

        emailIDLabel.setText("Email ID :");
        emailIDLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                emailIDLabelMouseEntered(evt);
            }
        });

        emailIDText.setToolTipText("Email ID.");
        emailIDText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                emailIDTextMouseEntered(evt);
            }
        });
        emailIDText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailIDTextFocusGained(evt);
            }
        });
        emailIDText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                emailIDTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailIDTextKeyReleased(evt);
            }
        });

        hostelComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "JBH", "SBH", "GH" }));
        hostelComboBox.setToolTipText("Hostel.");
        hostelComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hostelComboBoxMouseEntered(evt);
            }
        });
        hostelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostelComboBoxActionPerformed(evt);
            }
        });
        hostelComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                hostelComboBoxFocusGained(evt);
            }
        });

        hostelText.setToolTipText("Room number.");
        hostelText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hostelTextMouseEntered(evt);
            }
        });
        hostelText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                hostelTextFocusGained(evt);
            }
        });
        hostelText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hostelTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hostelTextKeyReleased(evt);
            }
        });

        genderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        genderComboBox.setToolTipText("Click and select gender of faculty.");
        genderComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                genderComboBoxMouseEntered(evt);
            }
        });
        genderComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                genderComboBoxFocusGained(evt);
            }
        });

        hostelliteCheckBox.setText("Hostelite");
        hostelliteCheckBox.setToolTipText("Select it for hostal faculty.");
        hostelliteCheckBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                hostelliteCheckBoxMouseEntered(evt);
            }
        });
        hostelliteCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostelliteCheckBoxActionPerformed(evt);
            }
        });
        hostelliteCheckBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                hostelliteCheckBoxFocusGained(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Button-Add-icon.png"))); // NOI18N
        addButton.setText("Add");
        addButton.setToolTipText("<html>\nStep 1, Fill all minimum required (*) fields in the form.<br>\nStep 2, Choose a photo.<br>\nStep 3, Click add button.\n</html>");
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addButtonMouseEntered(evt);
            }
        });
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        addButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addButtonFocusGained(evt);
            }
        });
        addButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addButtonKeyPressed(evt);
            }
        });

        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/home-icon.png"))); // NOI18N
        homeButton.setText("Home");
        homeButton.setToolTipText("Click home button to go back to home.");
        homeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeButtonMouseEntered(evt);
            }
        });
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        homeButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                homeButtonFocusGained(evt);
            }
        });
        homeButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                homeButtonKeyPressed(evt);
            }
        });

        photoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Faculty photo"));
        photoPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        facultyPhotoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main_package/resources/defaultPhoto(3.5x4.5).jpg"))); // NOI18N
        facultyPhotoLabel.setToolTipText("Click to select a photo.");
        facultyPhotoLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        facultyPhotoLabel.setRequestFocusEnabled(false);
        facultyPhotoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                facultyPhotoLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                facultyPhotoLabelMouseEntered(evt);
            }
        });
        facultyPhotoLabel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                facultyPhotoLabelFocusGained(evt);
            }
        });

        javax.swing.GroupLayout photoPanelLayout = new javax.swing.GroupLayout(photoPanel);
        photoPanel.setLayout(photoPanelLayout);
        photoPanelLayout.setHorizontalGroup(
            photoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(photoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(facultyPhotoLabel)
                .addContainerGap())
        );
        photoPanelLayout.setVerticalGroup(
            photoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(photoPanelLayout.createSequentialGroup()
                .addComponent(facultyPhotoLabel)
                .addGap(0, 5, Short.MAX_VALUE))
        );

        dayOfBirthSpinner.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dayOfBirthSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        dayOfBirthSpinner.setToolTipText("Select day.");
        dayOfBirthSpinner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dayOfBirthSpinnerMouseEntered(evt);
            }
        });
        dayOfBirthSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dayOfBirthSpinnerFocusGained(evt);
            }
        });
        dayOfBirthSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dayOfBirthSpinnerKeyPressed(evt);
            }
        });

        monthOfBirthCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "July", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        monthOfBirthCombo.setToolTipText("Select month.");
        monthOfBirthCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                monthOfBirthComboMouseEntered(evt);
            }
        });
        monthOfBirthCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                monthOfBirthComboFocusGained(evt);
            }
        });

        yearOfBirthSpinner.setToolTipText("Select year.");
        yearOfBirthSpinner.setValue(1970);
        yearOfBirthSpinner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                yearOfBirthSpinnerMouseEntered(evt);
            }
        });
        yearOfBirthSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yearOfBirthSpinnerFocusGained(evt);
            }
        });
        yearOfBirthSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yearOfBirthSpinnerKeyPressed(evt);
            }
        });

        dayOfjoinSpinner.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        dayOfjoinSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));
        dayOfjoinSpinner.setToolTipText("Select day.");
        dayOfjoinSpinner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dayOfjoinSpinnerMouseEntered(evt);
            }
        });
        dayOfjoinSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dayOfjoinSpinnerFocusGained(evt);
            }
        });
        dayOfjoinSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dayOfjoinSpinnerKeyPressed(evt);
            }
        });

        monthOfjoinCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "July", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        monthOfjoinCombo.setToolTipText("Select month.");
        monthOfjoinCombo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                monthOfjoinComboMouseEntered(evt);
            }
        });
        monthOfjoinCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                monthOfjoinComboFocusGained(evt);
            }
        });

        yearOfJoinSpinner.setToolTipText("Select year.");
        yearOfJoinSpinner.setValue(2002);
        yearOfJoinSpinner.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                yearOfJoinSpinnerMouseEntered(evt);
            }
        });
        yearOfJoinSpinner.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yearOfJoinSpinnerFocusGained(evt);
            }
        });
        yearOfJoinSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yearOfJoinSpinnerKeyPressed(evt);
            }
        });

        notification.setForeground(new java.awt.Color(51, 51, 251));
        notification.setText(" ");

        addressTextArea.setToolTipText("Address.");
        addressTextArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addressTextAreaMouseEntered(evt);
            }
        });
        addressTextArea.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addressTextAreaFocusGained(evt);
            }
        });
        addressTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addressTextAreaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                addressTextAreaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(addressTextArea);

        displayInfoLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        displayInfoLabel.setForeground(new java.awt.Color(0, 153, 51));

        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Actions-edit-clear-icon.png"))); // NOI18N
        clearButton.setText("Clear");
        clearButton.setToolTipText("Click to clear all feilds in the form.");
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearButtonMouseEntered(evt);
            }
        });
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        clearButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                clearButtonFocusGained(evt);
            }
        });
        clearButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                clearButtonKeyPressed(evt);
            }
        });

        bad1.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad1.setForeground(new java.awt.Color(255, 0, 0));
        bad1.setText(" ");

        bad2.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad2.setForeground(new java.awt.Color(255, 0, 0));
        bad2.setText(" ");

        bad3.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad3.setForeground(new java.awt.Color(255, 0, 0));
        bad3.setText(" ");

        bad4.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad4.setForeground(new java.awt.Color(255, 0, 0));
        bad4.setText(" ");

        bad5.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad5.setForeground(new java.awt.Color(255, 0, 0));
        bad5.setText(" ");

        bad6.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad6.setForeground(new java.awt.Color(255, 0, 0));
        bad6.setText(" ");

        bad7.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad7.setForeground(new java.awt.Color(255, 0, 0));
        bad7.setText(" ");

        passwordLabel.setText("Password *:");

        userNameLabel.setText("Username *:");

        userNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userNameTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                userNameTextKeyReleased(evt);
            }
        });

        passwordText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordTextKeyReleased(evt);
            }
        });

        bad8.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad8.setForeground(new java.awt.Color(255, 0, 0));
        bad8.setText(" ");

        bad9.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad9.setForeground(new java.awt.Color(255, 0, 0));
        bad9.setText(" ");

        javax.swing.GroupLayout FacultyAddPanelLayout = new javax.swing.GroupLayout(FacultyAddPanel);
        FacultyAddPanel.setLayout(FacultyAddPanelLayout);
        FacultyAddPanelLayout.setHorizontalGroup(
            FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                        .addComponent(notification, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                        .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                                        .addGap(134, 134, 134)
                                        .addComponent(displayInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(fnameLabel)
                                    .addComponent(ufnLabel))
                                .addGap(18, 18, 18)
                                .addComponent(photoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(phoneLabel)
                                    .addComponent(emailIDLabel)
                                    .addComponent(userNameLabel)
                                    .addComponent(passwordLabel)
                                    .addComponent(qualificationLabel)
                                    .addComponent(genderLabel)
                                    .addComponent(lNameLabel)
                                    .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(DOBLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(deptCodeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(DOJLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                                        .addComponent(dayOfjoinSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(monthOfjoinCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(yearOfJoinSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                                        .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(fNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(qualificationText, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(userNameText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(passwordText, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(genderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ufnText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(bad2)
                                            .addComponent(bad3)
                                            .addComponent(bad1)
                                            .addComponent(bad4)
                                            .addComponent(bad8)
                                            .addComponent(bad9)))
                                    .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                                        .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                                                .addComponent(dayOfBirthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(monthOfBirthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(yearOfBirthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(emailIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(bad6)
                                            .addComponent(bad7)))
                                    .addComponent(deptCodeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AddressLabel)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                                        .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                                                .addComponent(hostelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(hostelText, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(hostelliteCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bad5)))))
                        .addGap(0, 8, Short.MAX_VALUE))))
        );

        FacultyAddPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {dayOfBirthSpinner, dayOfjoinSpinner});

        FacultyAddPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {monthOfBirthCombo, monthOfjoinCombo});

        FacultyAddPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {yearOfBirthSpinner, yearOfJoinSpinner});

        FacultyAddPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {deptCodeCombo, emailIDText, fNameText, genderComboBox, lNameText, passwordText, phoneText, qualificationText, ufnText, userNameText});

        FacultyAddPanelLayout.setVerticalGroup(
            FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                        .addComponent(photoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hostelliteCheckBox)
                        .addGap(18, 18, 18)
                        .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hostelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hostelText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(AddressLabel))
                    .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                        .addComponent(displayInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(userNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bad8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passwordLabel)
                                    .addComponent(bad9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ufnText, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bad1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ufnLabel))
                                .addGap(18, 18, 18)
                                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bad2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fnameLabel))
                                .addGap(18, 18, 18)
                                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bad3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lNameLabel))
                                .addGap(18, 18, 18)
                                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(genderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(genderLabel))
                                .addGap(18, 18, 18)
                                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(qualificationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bad4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(qualificationLabel))
                                .addGap(18, 18, 18)
                                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(deptCodeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(deptCodeLabel)))
                            .addGroup(FacultyAddPanelLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(userNameLabel)))
                        .addGap(18, 18, 18)
                        .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(yearOfBirthSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dayOfBirthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DOBLabel))
                            .addComponent(monthOfBirthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(yearOfJoinSpinner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dayOfjoinSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(monthOfjoinCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(DOJLabel)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FacultyAddPanelLayout.createSequentialGroup()
                        .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneLabel))
                        .addGap(17, 17, 17)
                        .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailIDText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bad7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailIDLabel))))
                .addGap(30, 30, 30)
                .addGroup(FacultyAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(notification)
                .addGap(10, 10, 10))
        );

        FacultyAddPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dayOfBirthSpinner, dayOfjoinSpinner, yearOfBirthSpinner, yearOfJoinSpinner});

        FacultyAddPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {deptCodeCombo, emailIDText, fNameText, genderComboBox, lNameText, phoneText, ufnText});

        FacultyAddPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addButton, clearButton, homeButton});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(FacultyAddPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(FacultyAddPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        FacultyAddPanel.getAccessibleContext().setAccessibleName("Add Faculty Details");
        FacultyAddPanel.getAccessibleContext().setAccessibleDescription("test\n");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        this.dispose();
        Run.Runner.RunnerObj.MainUIObj.show();
        Run.Runner.RunnerObj.MainUIObj.AddFacultyObj=null;
    }//GEN-LAST:event_homeButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if ("".equals(userNameText.getText())) {
            JOptionPane.showMessageDialog(null, "Username field cannot be empty.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            userNameText.requestFocus();
            return;
        }
        if ("!".equals(bad8.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate username.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            userNameText.requestFocus();
            return;
        }
        if (validateUserName(userNameText.getText()) == false) {
            JOptionPane.showMessageDialog(null, "Username alrady used. Please try other.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            userNameText.requestFocus();
            return;
        }
        if ("".equals(passwordText.getText())) {
            JOptionPane.showMessageDialog(null, "Password field cannot be empty.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            passwordText.requestFocus();
            return;
        }
        if ("!".equals(bad9.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate password.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            passwordText.requestFocus();
            return;
        }
        if ("".equals(ufnText.getText())) {
            JOptionPane.showMessageDialog(null, "University faculty No. field cannot be empty.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            ufnText.requestFocus();
            return;
        }
        if ("!".equals(bad1.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate UFN.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            ufnText.requestFocus();
            return;
        }
        if ("".equals(fNameText.getText())) {
            JOptionPane.showMessageDialog(null, "First name field cannot be empty.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            fNameText.requestFocus();
            return;
        }
        if ("!".equals(bad2.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate first name.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            fNameText.requestFocus();
            return;
        }
        if ("!".equals(bad3.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate last name.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            lNameText.requestFocus();
            return;
        }
        if ("!".equals(bad4.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate qualification.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            qualificationText.requestFocus();
            return;
        }
        if (hostelliteCheckBox.isSelected()) {
            if ("!".equals(bad5.getText())) {
                JOptionPane.showMessageDialog(null, "Please validate hostal room number.", "Notification", JOptionPane.INFORMATION_MESSAGE);
                hostelText.requestFocus();
                return;
            }
        }
        if ("!".equals(bad6.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate phone number.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            phoneText.requestFocus();
            return;
        }
        if ("!".equals(bad7.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate email id.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            emailIDText.requestFocus();
            return;
        }
        try {
            String ufn = ufnText.getText();
            String fname = fNameText.getText();
            String lname = lNameText.getText();
            String sex1 = (String) genderComboBox.getSelectedItem();
            String sex = "M";
            if (sex1.equals("Female")) {
                sex = "F";
            }
            String qualification = qualificationText.getText();
            String DOB = yearOfBirthSpinner.getValue() + "-" + Integer.toString(monthOfBirthCombo.getSelectedIndex() + 1) + "-" + dayOfBirthSpinner.getValue().toString();
            if (isValidDateStr(DOB) == false) {
                JOptionPane.showMessageDialog(null, "Please validate DOB.", "Notification", JOptionPane.INFORMATION_MESSAGE);
                dayOfBirthSpinner.requestFocus();
                return;
            }
            String DOJ = yearOfJoinSpinner.getValue() + "-" + Integer.toString(monthOfjoinCombo.getSelectedIndex() + 1) + "-" + dayOfjoinSpinner.getValue().toString();
            if (isValidDateStr(DOJ) == false) {
                JOptionPane.showMessageDialog(null, "Please validate DOJ.", "Notification", JOptionPane.INFORMATION_MESSAGE);
                dayOfjoinSpinner.requestFocus();
                return;
            }
            String address = addressTextArea.getText();
            String d_deptCode = (String) deptCodeCombo.getSelectedItem();
            String phone = phoneText.getText();
            String emailID = emailIDText.getText();

            String hostellite = null;
            if (hostelliteCheckBox.isSelected()) {
                hostellite = (String) hostelComboBox.getSelectedItem() + hostelText.getText();
            } else {
                hostellite = "";
            }

            PreparedStatement psmnt = null;
            FileInputStream fis = null;

            psmnt = dbConnect.getCon().prepareStatement("insert into faculty values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
            psmnt.setString(1, ufn);
            psmnt.setString(2, fname);
            psmnt.setString(3, lname);
            psmnt.setString(4, sex);
            psmnt.setString(5, qualification);
            psmnt.setString(6, DOB);
            psmnt.setString(7, DOJ);
            psmnt.setString(8, address);
            psmnt.setString(9, d_deptCode);
            psmnt.setString(10, phone);
            psmnt.setString(12, emailID);
            psmnt.setString(13, "Available");
            psmnt.setString(14, hostellite);
            if (myFile != null) {
                try {
                    fis = new FileInputStream(myFile);
                } catch (FileNotFoundException ex) {
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
                psmnt.setBinaryStream(11, (InputStream) fis, (int) (myFile.length()));
            } else {
                psmnt.setBinaryStream(11, null);
            }

            int s = psmnt.executeUpdate();
            if (s > 0) {
                String createQuery = "Insert into login values('" + (userNameText.getText()) + "','" + (passwordText.getText()) + "','" + (ufnText.getText()) + "','" + ("faculty") + "');";
                int successful = 0;
                try {
                    successful = dbConnect.getCon().createStatement().executeUpdate(createQuery);
                } catch (SQLException ex) {
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(this, "Faculty adding is not successful.\nPlease manually delete faculty details from the faculty table.\nThen try again.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (successful == 1) {
                    clearButton.doClick();
                    displayInfoLabel.setText("<html><b><font color=blue>" + fname + "</b><font color=green> successfully added.</html>");
                }
            }
            psmnt.close();
        } catch (MySQLIntegrityConstraintViolationException ex) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Faculty adding is not successful.", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Faculty adding is not successful.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void hostelliteCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostelliteCheckBoxActionPerformed
        if (hostelliteCheckBox.isSelected()) {
            hostelComboBox.setEnabled(true);
            hostelText.setEnabled(true);
            hostelText.requestFocus();
            hostelComboBox.requestFocus();
        } else {
            hostelComboBox.setEnabled(false);
            hostelliteCheckBox.requestFocus();
            hostelText.setText(null);
            hostelText.setEnabled(false);
            bad5.setText(" ");
        }
    }//GEN-LAST:event_hostelliteCheckBoxActionPerformed

    private void hostelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostelComboBoxActionPerformed
        hostelText.requestFocus();
    }//GEN-LAST:event_hostelComboBoxActionPerformed

    private void facultyPhotoLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_facultyPhotoLabelMouseClicked
        showDialog();
    }//GEN-LAST:event_facultyPhotoLabelMouseClicked

    private void AddFacultyClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_AddFacultyClosing
        homeButton.doClick();
    }//GEN-LAST:event_AddFacultyClosing

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        userNameText.setText(null);
        passwordText.setText(null);
        ufnText.setText(null);
        fNameText.setText(null);
        lNameText.setText(null);
        genderComboBox.setSelectedIndex(0);
        qualificationText.setText(null);
        deptCodeCombo.setSelectedIndex(0);
        phoneText.setText(null);
        emailIDText.setText(null);
        hostelliteCheckBox.setSelected(false);
        hostelComboBox.setSelectedIndex(0);
        hostelText.setText(null);
        hostelComboBox.setEnabled(false);
        hostelText.setEnabled(false);
        addressTextArea.setText(null);
        dayOfBirthSpinner.setValue(1);
        monthOfBirthCombo.setSelectedIndex(0);
        yearOfBirthSpinner.setValue(1970);
        dayOfjoinSpinner.setValue(1);
        monthOfjoinCombo.setSelectedIndex(0);
        yearOfJoinSpinner.setValue(2002);
        facultyPhotoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/defaultPhoto(3.5x4.5).jpg")));
        displayInfoLabel.setText(" ");
        userNameText.requestFocus();
        bad1.setText(" ");
        bad2.setText(" ");
        bad3.setText(" ");
        bad4.setText(" ");
        bad5.setText(" ");
        bad6.setText(" ");
        bad7.setText(" ");
        bad8.setText(" ");
        bad9.setText(" ");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void ufnTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ufnTextKeyReleased
        if (ufnText.getText().length() > 15) {
            Toolkit.getDefaultToolkit().beep();
            ufnText.setText(ufnText.getText().substring(0, 15));
        }
        if (!ufnText.getText().matches("[a-zA-Z0-9][a-zA-Z0-9]*")) {
            bad1.setText("!");
        } else {
            bad1.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT) {
            return;
        }
        ufnText.setText(ufnText.getText().toUpperCase());
    }//GEN-LAST:event_ufnTextKeyReleased

    private void fNameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fNameTextKeyReleased
        if (fNameText.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            fNameText.setText(fNameText.getText().substring(0, 50));
        }
        if (!fNameText.getText().matches("[a-zA-Z][ .a-zA-Z]*")) {
            bad2.setText("!");
        } else {
            bad2.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            return;
        }
        fNameText.setText(toFullNameFormate(fNameText.getText()));
    }//GEN-LAST:event_fNameTextKeyReleased

    private void lNameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lNameTextKeyReleased
        if (lNameText.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            lNameText.setText(lNameText.getText().substring(0, 50));
        }
        if (!lNameText.getText().matches("[ .a-zA-Z]*")) {
            bad3.setText("!");
        } else {
            bad3.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            return;
        }
        lNameText.setText(toFullNameFormate(lNameText.getText()));
    }//GEN-LAST:event_lNameTextKeyReleased

    private void qualificationTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qualificationTextKeyReleased
        if (qualificationText.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            qualificationText.setText(qualificationText.getText().substring(0, 50));
        }
        if (!qualificationText.getText().matches("[ -.(),a-zA-Z]*")) {
            bad4.setText("!");
        } else {
            bad4.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            return;
        }
    }//GEN-LAST:event_qualificationTextKeyReleased

    private void hostelTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hostelTextKeyReleased
        if (hostelText.getText().length() > 7) {
            Toolkit.getDefaultToolkit().beep();
            hostelText.setText(hostelText.getText().substring(0, 7));
        }
        if (!hostelText.getText().matches("[-a-zA-Z0-9]*")) {
            bad5.setText("!");
        } else {
            bad5.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT) {
            return;
        }
        hostelText.setText(hostelText.getText().toUpperCase());
    }//GEN-LAST:event_hostelTextKeyReleased

    private void phoneTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneTextKeyReleased
        if (phoneText.getText().length() > 15) {
            Toolkit.getDefaultToolkit().beep();
            phoneText.setText(phoneText.getText().substring(0, 15));
        }
        if (!phoneText.getText().matches("[+]?[0-9]+(-[0-9][0-9]*)*[0-9]*")) {
            bad6.setText("!");
        } else {
            bad6.setText(" ");
        }
        if ("".equals(phoneText.getText())) {
            bad6.setText(" ");
        }
    }//GEN-LAST:event_phoneTextKeyReleased

    private void emailIDTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailIDTextKeyReleased
        if (emailIDText.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            emailIDText.setText(emailIDText.getText().substring(0, 50));
        }
        if (!emailIDText.getText().matches("^[_A-Za-z0-9-]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$")) {
            bad7.setText("!");
        } else {
            bad7.setText(" ");
        }
        if ("".equals(emailIDText.getText())) {
            bad7.setText(" ");
        }
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_LEFT) {
            return;
        }
        emailIDText.setText(emailIDText.getText().toLowerCase());
    }//GEN-LAST:event_emailIDTextKeyReleased

    private void addressTextAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressTextAreaKeyReleased
        if (addressTextArea.getText().length() > 500) {
            Toolkit.getDefaultToolkit().beep();
            addressTextArea.setText(addressTextArea.getText().substring(0, 500));
        }
    }//GEN-LAST:event_addressTextAreaKeyReleased

    private void ufnTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ufnTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_ufnTextKeyPressed

    private void fNameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fNameTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_fNameTextKeyPressed

    private void lNameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lNameTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_lNameTextKeyPressed

    private void qualificationTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qualificationTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_qualificationTextKeyPressed

    private void hostelTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hostelTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_hostelTextKeyPressed

    private void dayOfBirthSpinnerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dayOfBirthSpinnerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_dayOfBirthSpinnerKeyPressed

    private void yearOfBirthSpinnerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearOfBirthSpinnerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_yearOfBirthSpinnerKeyPressed

    private void dayOfjoinSpinnerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dayOfjoinSpinnerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_dayOfjoinSpinnerKeyPressed

    private void yearOfJoinSpinnerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearOfJoinSpinnerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_yearOfJoinSpinnerKeyPressed

    private void phoneTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_phoneTextKeyPressed

    private void emailIDTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailIDTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_emailIDTextKeyPressed

    private void clearButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clearButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clearButton.doClick();
        }
    }//GEN-LAST:event_clearButtonKeyPressed

    private void homeButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_homeButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            homeButton.doClick();
        }
    }//GEN-LAST:event_homeButtonKeyPressed

    private void addButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.doClick();
        }
    }//GEN-LAST:event_addButtonKeyPressed

    private void ufnLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ufnLabelMouseEntered
        notification.setText("University faculty number (UFN).");
    }//GEN-LAST:event_ufnLabelMouseEntered

    private void ufnTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ufnTextMouseEntered
        notification.setText("Enter university faculty number.");
    }//GEN-LAST:event_ufnTextMouseEntered

    private void ufnTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ufnTextFocusGained
        notification.setText("Enter university faculty number.");
    }//GEN-LAST:event_ufnTextFocusGained

    private void fNameTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fNameTextMouseEntered
        notification.setText("Enter first name.");
    }//GEN-LAST:event_fNameTextMouseEntered

    private void lNameTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lNameTextMouseEntered
        notification.setText("Enter last name.");
    }//GEN-LAST:event_lNameTextMouseEntered

    private void lNameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lNameTextFocusGained
        notification.setText("Enter last name.");
    }//GEN-LAST:event_lNameTextFocusGained

    private void fNameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fNameTextFocusGained
        notification.setText("Enter first name.");
    }//GEN-LAST:event_fNameTextFocusGained

    private void genderComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genderComboBoxMouseEntered
        notification.setText("Select gender.");
    }//GEN-LAST:event_genderComboBoxMouseEntered

    private void genderComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_genderComboBoxFocusGained
        notification.setText("Select gender.");
    }//GEN-LAST:event_genderComboBoxFocusGained

    private void qualificationTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_qualificationTextMouseEntered
        notification.setText("Enter qualification.");
    }//GEN-LAST:event_qualificationTextMouseEntered

    private void qualificationTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_qualificationTextFocusGained
        notification.setText("Enter qualification.");
    }//GEN-LAST:event_qualificationTextFocusGained

    private void deptCodeComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deptCodeComboMouseEntered
        notification.setText("Select department code.");
    }//GEN-LAST:event_deptCodeComboMouseEntered

    private void deptCodeComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_deptCodeComboFocusGained
        notification.setText("Select department code.");
    }//GEN-LAST:event_deptCodeComboFocusGained

    private void dayOfBirthSpinnerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dayOfBirthSpinnerMouseEntered
        notification.setText("Select day of DOB.");
    }//GEN-LAST:event_dayOfBirthSpinnerMouseEntered

    private void dayOfBirthSpinnerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayOfBirthSpinnerFocusGained
        notification.setText("Select day of DOB.");
    }//GEN-LAST:event_dayOfBirthSpinnerFocusGained

    private void monthOfBirthComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monthOfBirthComboMouseEntered
        notification.setText("Select month of DOB.");
    }//GEN-LAST:event_monthOfBirthComboMouseEntered

    private void monthOfBirthComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthOfBirthComboFocusGained
        notification.setText("Select month of DOB.");
    }//GEN-LAST:event_monthOfBirthComboFocusGained

    private void yearOfBirthSpinnerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearOfBirthSpinnerMouseEntered
        notification.setText("Select year of DOB.");
    }//GEN-LAST:event_yearOfBirthSpinnerMouseEntered

    private void yearOfBirthSpinnerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearOfBirthSpinnerFocusGained
        notification.setText("Select year of DOB.");
    }//GEN-LAST:event_yearOfBirthSpinnerFocusGained

    private void yearOfJoinSpinnerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yearOfJoinSpinnerMouseEntered
        notification.setText("Select year of DOJ.");
    }//GEN-LAST:event_yearOfJoinSpinnerMouseEntered

    private void yearOfJoinSpinnerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearOfJoinSpinnerFocusGained
        notification.setText("Select year of DOJ.");
    }//GEN-LAST:event_yearOfJoinSpinnerFocusGained

    private void monthOfjoinComboMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_monthOfjoinComboMouseEntered
        notification.setText("Select month of DOJ.");
    }//GEN-LAST:event_monthOfjoinComboMouseEntered

    private void monthOfjoinComboFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_monthOfjoinComboFocusGained
        notification.setText("Select month of DOJ.");
    }//GEN-LAST:event_monthOfjoinComboFocusGained

    private void dayOfjoinSpinnerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dayOfjoinSpinnerMouseEntered
        notification.setText("Select day of DOJ.");
    }//GEN-LAST:event_dayOfjoinSpinnerMouseEntered

    private void dayOfjoinSpinnerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dayOfjoinSpinnerFocusGained
        notification.setText("Select day of DOJ.");
    }//GEN-LAST:event_dayOfjoinSpinnerFocusGained

    private void hostelliteCheckBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostelliteCheckBoxMouseEntered
        notification.setText("Select if faculty is hostelite.");
    }//GEN-LAST:event_hostelliteCheckBoxMouseEntered

    private void hostelliteCheckBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hostelliteCheckBoxFocusGained
        notification.setText("Select if faculty is hostelite.");
    }//GEN-LAST:event_hostelliteCheckBoxFocusGained

    private void hostelComboBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostelComboBoxMouseEntered
        notification.setText("Select hostel.");
    }//GEN-LAST:event_hostelComboBoxMouseEntered

    private void hostelComboBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hostelComboBoxFocusGained
        notification.setText("Select hostel.");
    }//GEN-LAST:event_hostelComboBoxFocusGained

    private void hostelTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostelTextMouseEntered
        notification.setText("Enter hostel room  number.");
    }//GEN-LAST:event_hostelTextMouseEntered

    private void hostelTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_hostelTextFocusGained
        notification.setText("Enter hostel room  number.");
    }//GEN-LAST:event_hostelTextFocusGained

    private void addressTextAreaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addressTextAreaMouseEntered
        notification.setText("Enter address.");
    }//GEN-LAST:event_addressTextAreaMouseEntered

    private void addressTextAreaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressTextAreaFocusGained
        notification.setText("Enter adderss.");
    }//GEN-LAST:event_addressTextAreaFocusGained

    private void phoneTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_phoneTextMouseEntered
        notification.setText("Enter phone number.");
    }//GEN-LAST:event_phoneTextMouseEntered

    private void phoneTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneTextFocusGained
        notification.setText("Enter phone number.");
    }//GEN-LAST:event_phoneTextFocusGained

    private void emailIDTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailIDTextMouseEntered
        notification.setText("Enter email id.");
    }//GEN-LAST:event_emailIDTextMouseEntered

    private void emailIDTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailIDTextFocusGained
        notification.setText("Enter email id.");
    }//GEN-LAST:event_emailIDTextFocusGained

    private void addButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseEntered
        notification.setText("Click to add faculty.");
    }//GEN-LAST:event_addButtonMouseEntered

    private void addButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addButtonFocusGained
        notification.setText("Click to add faculty.");
    }//GEN-LAST:event_addButtonFocusGained

    private void clearButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseEntered
        notification.setText("Click to clear the form fields.");
    }//GEN-LAST:event_clearButtonMouseEntered

    private void clearButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_clearButtonFocusGained
        notification.setText("Click to clear the form fields.");
    }//GEN-LAST:event_clearButtonFocusGained

    private void homeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseEntered
        notification.setText("Go back to home.");
    }//GEN-LAST:event_homeButtonMouseEntered

    private void homeButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_homeButtonFocusGained
        notification.setText("Go back to home.");
    }//GEN-LAST:event_homeButtonFocusGained

    private void facultyPhotoLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_facultyPhotoLabelMouseEntered
        notification.setText("Click here to select a photo.");
    }//GEN-LAST:event_facultyPhotoLabelMouseEntered

    private void facultyPhotoLabelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_facultyPhotoLabelFocusGained
        notification.setText("Click here to select a photo.");
    }//GEN-LAST:event_facultyPhotoLabelFocusGained

    private void fnameLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fnameLabelMouseEntered
        notification.setText("First name.");
    }//GEN-LAST:event_fnameLabelMouseEntered

    private void lNameLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lNameLabelMouseEntered
        notification.setText("Last name.");
    }//GEN-LAST:event_lNameLabelMouseEntered

    private void genderLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genderLabelMouseEntered
        notification.setText("Gender.");
    }//GEN-LAST:event_genderLabelMouseEntered

    private void qualificationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_qualificationLabelMouseEntered
        notification.setText("Qualification.");
    }//GEN-LAST:event_qualificationLabelMouseEntered

    private void deptCodeLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deptCodeLabelMouseEntered
        notification.setText("Department code.");
    }//GEN-LAST:event_deptCodeLabelMouseEntered

    private void DOBLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DOBLabelMouseEntered
        notification.setText("Date of birth(DOB).");
    }//GEN-LAST:event_DOBLabelMouseEntered

    private void DOJLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DOJLabelMouseEntered
        notification.setText("Date of join(DOJ).");
    }//GEN-LAST:event_DOJLabelMouseEntered

    private void phoneLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_phoneLabelMouseEntered
        notification.setText("Phone number.");
    }//GEN-LAST:event_phoneLabelMouseEntered

    private void emailIDLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailIDLabelMouseEntered
        notification.setText("Email ID.");
    }//GEN-LAST:event_emailIDLabelMouseEntered

    private void AddressLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddressLabelMouseEntered
        notification.setText("Address.");
    }//GEN-LAST:event_AddressLabelMouseEntered

    private void userNameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameTextKeyReleased
        if (userNameText.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            userNameText.setText(userNameText.getText().substring(0, 50));
        }
        if (!userNameText.getText().matches("[a-zA-Z0-9][_a-zA-Z0-9]*")) {
            bad8.setText("!");
        } else {
            bad8.setText(" ");
        }
    }//GEN-LAST:event_userNameTextKeyReleased

    private void passwordTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextKeyReleased
        if (passwordText.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            passwordText.setText(passwordText.getText().substring(0, 50));
        }
        if (!passwordText.getText().matches("[^ ][^ ]*")) {
            bad9.setText("!");
        } else {
            bad9.setText(" ");
        }
    }//GEN-LAST:event_passwordTextKeyReleased

    private void userNameTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_userNameTextKeyPressed

    private void passwordTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addButton.requestFocus();
        }
    }//GEN-LAST:event_passwordTextKeyPressed

    private void addressTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressTextAreaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            addressTextArea.setText(addressTextArea.getText() + " ");
            evt.setKeyCode(KeyEvent.VK_BACK_SPACE);
        }
    }//GEN-LAST:event_addressTextAreaKeyPressed

    private void showDialog() {
        BufferedImage image = null, scaledImage = null;
        JFileChooser imageChooser;

        if (Run.Runner.RunnerObj.prevDirectory == null) {
            imageChooser = new JFileChooser();
        } else {
            imageChooser = new JFileChooser(Run.Runner.RunnerObj.prevDirectory);
        }

        imageChooser.setAcceptAllFileFilterUsed(false);
        imageChooser.addChoosableFileFilter(new MyImageFilter());

        int retVal = imageChooser.showOpenDialog(this);
        if (retVal == JFileChooser.APPROVE_OPTION) {
            myFile = imageChooser.getSelectedFile();
            //find out the file type
            String fileName = myFile.getName();
            File file = imageChooser.getSelectedFile();
            Run.Runner.RunnerObj.prevDirectory = file.getParent();
            int dotPos = fileName.lastIndexOf(".") + 1;
            String extension = fileName.substring(dotPos);
            try {
                image = ImageIO.read(myFile);
                scaledImage = main_package.MainUI.getScaledImageObj.getScaledImage(image);
                myFile = new File(getClass().getResource("/main_package/resources/temp.jpg").getFile());
                ImageIO.write(scaledImage, extension, myFile);
                facultyPhotoLabel.setIcon(new ImageIcon(scaledImage));
            } catch (IOException e) {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private boolean validateUserName(String userName) {
        try {
            String sql = "Select count(*) from login where User=\"" + userName + "\"";
            ResultSet rs = dbConnect.getCon().createStatement().executeQuery(sql);
            if (rs.next()) {
                int count = rs.getInt("count(*)");
                if (count == 0) {
                    return true;
                }
            }
            rs.close();
        } catch (SQLException ex) {
            return false;
        }
        return false;
    }

    private void filldeptCodeComboBox() {
        try {
            deptCodeCombo.setModel(new javax.swing.DefaultComboBoxModel());
            String sql = "Select * from department";
            ResultSet rs = dbConnect.getCon().createStatement().executeQuery(sql);
            while (rs.next()) {
                String Temp = rs.getString("DeptCode");
                deptCodeCombo.addItem(Temp);
            }
            rs.close();
        } catch (SQLException ex) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private boolean isValidDateStr(String date) {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            sdf.setLenient(false);
            sdf.parse(date);
        } catch (ParseException e) {
            return false;
        } catch (IllegalArgumentException e) {
            return false;
        }
        return true;
    }

    private String toNameFormate(String name, int lower) {
        if ("".equals(name)) {
            return name;
        }
        if (lower == 1) {
            name = name.toLowerCase();
        }
        name = name.replaceFirst(Character.toString(name.charAt(0)), Character.toString(name.toUpperCase().charAt(0)));
        return name;
    }

    private String toFullNameFormate(String name) {
        name = name.toLowerCase();
        String tempText[] = name.split("\\ ");
        name = "";
        for (int i = 0; i < tempText.length; i++) {
            name += toNameFormate(tempText[i], 1) + " ";
        }
        String tempText2[] = name.split("\\.");
        name = "";
        for (int i = 0; i < tempText2.length; i++) {
            name += toNameFormate(tempText2[i], 0) + ".";
        }
        name = name.substring(0, name.length() - 2);
        return name;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddressLabel;
    private javax.swing.JLabel DOBLabel;
    private javax.swing.JLabel DOJLabel;
    private javax.swing.JPanel FacultyAddPanel;
    private javax.swing.JButton addButton;
    private javax.swing.JTextPane addressTextArea;
    private javax.swing.JLabel bad1;
    private javax.swing.JLabel bad2;
    private javax.swing.JLabel bad3;
    private javax.swing.JLabel bad4;
    private javax.swing.JLabel bad5;
    private javax.swing.JLabel bad6;
    private javax.swing.JLabel bad7;
    private javax.swing.JLabel bad8;
    private javax.swing.JLabel bad9;
    private javax.swing.JButton clearButton;
    public static javax.swing.JSpinner dayOfBirthSpinner;
    public static javax.swing.JSpinner dayOfjoinSpinner;
    private javax.swing.JComboBox deptCodeCombo;
    private javax.swing.JLabel deptCodeLabel;
    private javax.swing.JLabel displayInfoLabel;
    private javax.swing.JLabel emailIDLabel;
    private javax.swing.JTextField emailIDText;
    private javax.swing.JTextField fNameText;
    private javax.swing.JLabel facultyPhotoLabel;
    private javax.swing.JLabel fnameLabel;
    private javax.swing.JComboBox genderComboBox;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JButton homeButton;
    private javax.swing.JComboBox hostelComboBox;
    private javax.swing.JTextField hostelText;
    private javax.swing.JCheckBox hostelliteCheckBox;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lNameLabel;
    private javax.swing.JTextField lNameText;
    public static javax.swing.JComboBox monthOfBirthCombo;
    public static javax.swing.JComboBox monthOfjoinCombo;
    private javax.swing.JLabel notification;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField passwordText;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField phoneText;
    private javax.swing.JPanel photoPanel;
    private javax.swing.JLabel qualificationLabel;
    private javax.swing.JTextField qualificationText;
    private javax.swing.JLabel ufnLabel;
    private javax.swing.JTextField ufnText;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userNameText;
    public static com.toedter.calendar.JYearChooser yearOfBirthSpinner;
    public static com.toedter.calendar.JYearChooser yearOfJoinSpinner;
    // End of variables declaration//GEN-END:variables
}
