/*
 * Form : AuthenticationDialog
 * Version : 0.0.3 (No bug reported.)
 * Upadater : 18-08-2012 7.41 PM
 * 18-08-2012 11.16 PM icon added.
 * 21-08-2012 at 7.22 PM
 * 23-08-2012 at 3.15 AM validatePassword function implimented
 */
package main_package;

import Run.dbConnect;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.*;

/**
 *
 * @author Nawaf
 */
public class authenticationDialog extends javax.swing.JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    /**
     * Creates new form authenticationDialog
     */
    public authenticationDialog(java.awt.Frame parent, boolean modal, String warningMessage) {
        super(parent, modal);
        Toolkit.getDefaultToolkit().beep();
        initComponents();
        setLocationRelativeTo(null);
        infoLabel.setText(warningMessage);
        passTextBox.requestFocus();
        usernameTextBox.setText(Run.Runner.RunnerObj.MainUIObj.UserName);
        this.setIconImage(new ImageIcon(getClass().getResource("/main_package/resources/icon.png")).getImage());
        //ESC button.
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        infoLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        yesButton = new javax.swing.JButton();
        passTextBox = new javax.swing.JPasswordField();
        noButton = new javax.swing.JButton();
        userNameLabel = new javax.swing.JLabel();
        usernameTextBox = new javax.swing.JTextField();
        notification = new javax.swing.JLabel();
        areYouSureLabel = new javax.swing.JLabel();
        bad1 = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Authentication"));

        infoLabel.setForeground(new java.awt.Color(255, 0, 51));
        infoLabel.setText(" ");
        infoLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                infoLabelMouseEntered(evt);
            }
        });

        passwordLabel.setText("Password *:");
        passwordLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                passwordLabelMouseEntered(evt);
            }
        });

        yesButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        yesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Ok-icon.png"))); // NOI18N
        yesButton.setText("Yes");
        yesButton.setToolTipText("<html>\nStep 1, Enter your password.<br>\nStep  2, Click yes button.\n</html>");
        yesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                yesButtonMouseEntered(evt);
            }
        });
        yesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesButtonActionPerformed(evt);
            }
        });
        yesButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yesButtonFocusGained(evt);
            }
        });
        yesButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yesButtonKeyPressed(evt);
            }
        });

        passTextBox.setToolTipText("Click and enter your password.");
        passTextBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                passTextBoxMouseEntered(evt);
            }
        });
        passTextBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passTextBoxFocusGained(evt);
            }
        });
        passTextBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passTextBoxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passTextBoxKeyReleased(evt);
            }
        });

        noButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Actions-edit-delete-icon.png"))); // NOI18N
        noButton.setText("No");
        noButton.setToolTipText("Click no button to cancel authentication.");
        noButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                noButtonMouseEntered(evt);
            }
        });
        noButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noButtonActionPerformed(evt);
            }
        });
        noButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                noButtonFocusGained(evt);
            }
        });
        noButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                noButtonKeyPressed(evt);
            }
        });

        userNameLabel.setText("Username :");
        userNameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                userNameLabelMouseEntered(evt);
            }
        });

        usernameTextBox.setBackground(new java.awt.Color(204, 204, 204));
        usernameTextBox.setEditable(false);
        usernameTextBox.setToolTipText("Username.");
        usernameTextBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                usernameTextBoxMouseEntered(evt);
            }
        });
        usernameTextBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usernameTextBoxKeyReleased(evt);
            }
        });

        notification.setForeground(new java.awt.Color(51, 51, 251));
        notification.setText(" ");

        areYouSureLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        areYouSureLabel.setText("Are you sure ?");
        areYouSureLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                areYouSureLabelMouseEntered(evt);
            }
        });

        bad1.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad1.setForeground(new java.awt.Color(255, 0, 0));
        bad1.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(notification, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(112, 112, 112)
                                .addComponent(areYouSureLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(userNameLabel)
                                                .addGap(37, 37, 37))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(passwordLabel)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(usernameTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(passTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bad1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(yesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(noButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {noButton, yesButton});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {passTextBox, usernameTextBox});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(infoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(areYouSureLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLabel)
                    .addComponent(usernameTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bad1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(noButton))
                .addGap(13, 13, 13)
                .addComponent(notification))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {noButton, yesButton});

        getRootPane().setDefaultButton(yesButton);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void yesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesButtonActionPerformed
        if ("".equals(passTextBox.getText())) {
            JOptionPane.showMessageDialog(null, "Password field cannot be empty.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            passTextBox.requestFocus();
            return;
        }
        if ("!".equals(bad1.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate password.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            passTextBox.requestFocus();
            return;
        }
        if (validatePassword(usernameTextBox.getText(), passTextBox.getText()) == false) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Password not match.", "Wrong password", JOptionPane.ERROR_MESSAGE);
            doClose(RET_CANCEL);
        } else {
            doClose(RET_OK);
        }
    }//GEN-LAST:event_yesButtonActionPerformed

    private void noButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_noButtonActionPerformed

    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void passTextBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passTextBoxKeyReleased
        if (passTextBox.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            passTextBox.setText(passTextBox.getText().substring(0, 50));
        }
        if (!passTextBox.getText().matches("[^ ][^ ]*")) {
            bad1.setText("!");
        } else {
            bad1.setText(" ");
        }
    }//GEN-LAST:event_passTextBoxKeyReleased

    private void infoLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoLabelMouseEntered
        notification.setText("Note.");
    }//GEN-LAST:event_infoLabelMouseEntered

    private void areYouSureLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_areYouSureLabelMouseEntered
        notification.setText("Are you sure?");
    }//GEN-LAST:event_areYouSureLabelMouseEntered

    private void userNameLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userNameLabelMouseEntered
        notification.setText("Username.");
    }//GEN-LAST:event_userNameLabelMouseEntered

    private void passwordLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordLabelMouseEntered
        notification.setText("Password.");
    }//GEN-LAST:event_passwordLabelMouseEntered

    private void usernameTextBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameTextBoxMouseEntered
        notification.setText("Username.");
    }//GEN-LAST:event_usernameTextBoxMouseEntered

    private void passTextBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passTextBoxMouseEntered
        notification.setText("Enter password.");
    }//GEN-LAST:event_passTextBoxMouseEntered

    private void passTextBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passTextBoxFocusGained
        notification.setText("Enter password.");
    }//GEN-LAST:event_passTextBoxFocusGained

    private void yesButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yesButtonMouseEntered
        notification.setText("To confirm your authentication.");
    }//GEN-LAST:event_yesButtonMouseEntered

    private void yesButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yesButtonFocusGained
        notification.setText("To confirm your authentication.");
    }//GEN-LAST:event_yesButtonFocusGained

    private void noButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_noButtonMouseEntered
        notification.setText("To cancel authentication.");
    }//GEN-LAST:event_noButtonMouseEntered

    private void noButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_noButtonFocusGained
        notification.setText("To cancel authentication.");
    }//GEN-LAST:event_noButtonFocusGained

    private void usernameTextBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameTextBoxKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            yesButton.requestFocus();
        }
    }//GEN-LAST:event_usernameTextBoxKeyReleased

    private void passTextBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passTextBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            yesButton.requestFocus();
        }
    }//GEN-LAST:event_passTextBoxKeyPressed

    private void yesButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yesButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            yesButton.doClick();
        }
    }//GEN-LAST:event_yesButtonKeyPressed

    private void noButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            noButton.requestFocus();
        }
    }//GEN-LAST:event_noButtonKeyPressed

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel areYouSureLabel;
    private javax.swing.JLabel bad1;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton noButton;
    private javax.swing.JLabel notification;
    private javax.swing.JPasswordField passTextBox;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField usernameTextBox;
    private javax.swing.JButton yesButton;
    // End of variables declaration//GEN-END:variables
    public int returnStatus = RET_CANCEL;

    private boolean validatePassword(String userName, String password) {
        ResultSet rs = null;
        String passQuery = "select Pass from login where User=\"" + userName + "\"";

        try {
            rs = dbConnect.getCon().createStatement().executeQuery(passQuery);
            if (rs.next()) {
                String passwordFromDB = rs.getString("Pass");
                if (password.equals(passwordFromDB)) {
                    return true;
                }
            }
            rs.close();
        } catch (SQLException ex) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return false;
    }
}
