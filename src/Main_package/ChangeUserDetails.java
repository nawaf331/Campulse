/*
 *Form : ChangeUserDetails
 * Version : 0.0.7
 * 16-08-12-----7am
 * 19-08-2012 at 8.12 PM
 * 19-08-2012 at 11.30 reqst focus after clear.
 * 21-08-2012 at 12.37 AM green pass pic updated.
 * 23-08-2012 at 2.41 AM password error message modified.
 * 23-08-2012 at 3.06 AM passwordValidater and userNameValidating () updated.
 * 25-08-2012 at 1.05 AM icon
 * 3-9-2012 at 2.33 pm kill object
 */
package main_package;

import Run.dbConnect;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Nawaf
 */
public class ChangeUserDetails extends javax.swing.JFrame {

    /**
     * Creates new form ChangeUserDetails
     */
    public ChangeUserDetails() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/main_package/resources/icon.png")).getImage());
        usernameTextBox.setText(Run.Runner.RunnerObj.MainUIObj.UserName);
        newUsernameTextBox.setText(usernameTextBox.getText());
        setLocationRelativeTo(null);
        passwordTextBox.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        submitButton = new javax.swing.JButton();
        confirmPasswordLabel = new javax.swing.JLabel();
        passwordTextBox = new javax.swing.JPasswordField();
        passwordLabel = new javax.swing.JLabel();
        icoLabel = new javax.swing.JLabel();
        newPasswordTextBox = new javax.swing.JPasswordField();
        confirmPasswordTextBox = new javax.swing.JPasswordField();
        clearButton = new javax.swing.JButton();
        newPasswordLabel = new javax.swing.JLabel();
        homeButton = new javax.swing.JButton();
        usernameLabel = new javax.swing.JLabel();
        usernameTextBox = new javax.swing.JTextField();
        newUsernameLabel = new javax.swing.JLabel();
        newUsernameTextBox = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        notification = new javax.swing.JLabel();
        bad1 = new javax.swing.JLabel();
        bad2 = new javax.swing.JLabel();
        bad3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Change user details");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Change user details"));

        submitButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        submitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Ok-icon.png"))); // NOI18N
        submitButton.setText("Submit");
        submitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                submitButtonMouseEntered(evt);
            }
        });
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        submitButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                submitButtonFocusGained(evt);
            }
        });
        submitButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                submitButtonKeyPressed(evt);
            }
        });

        confirmPasswordLabel.setText("Confirm password *:");
        confirmPasswordLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                confirmPasswordLabelMouseEntered(evt);
            }
        });

        passwordTextBox.setToolTipText("Current password.");
        passwordTextBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                passwordTextBoxMouseEntered(evt);
            }
        });
        passwordTextBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordTextBoxFocusGained(evt);
            }
        });
        passwordTextBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passwordTextBoxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordTextBoxKeyReleased(evt);
            }
        });

        passwordLabel.setText("Password *:");
        passwordLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                passwordLabelMouseEntered(evt);
            }
        });

        icoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Main_package/resources/Ok-icon-Disabled.png"))); // NOI18N

        newPasswordTextBox.setToolTipText("New password (Case sensitive).");
        newPasswordTextBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newPasswordTextBoxMouseEntered(evt);
            }
        });
        newPasswordTextBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newPasswordTextBoxFocusGained(evt);
            }
        });
        newPasswordTextBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newPasswordTextBoxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newPasswordTextBoxKeyReleased(evt);
            }
        });

        confirmPasswordTextBox.setToolTipText("Confirm password (Case sensitive).");
        confirmPasswordTextBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                confirmPasswordTextBoxMouseEntered(evt);
            }
        });
        confirmPasswordTextBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                confirmPasswordTextBoxFocusGained(evt);
            }
        });
        confirmPasswordTextBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                confirmPasswordTextBoxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                confirmPasswordTextBoxKeyReleased(evt);
            }
        });

        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Actions-edit-clear-icon.png"))); // NOI18N
        clearButton.setText(" Clear");
        clearButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearButtonMouseEntered(evt);
            }
        });
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        clearButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                clearButtonFocusGained(evt);
            }
        });
        clearButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                clearButtonKeyPressed(evt);
            }
        });

        newPasswordLabel.setText("New password *:");
        newPasswordLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newPasswordLabelMouseEntered(evt);
            }
        });

        homeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/home-icon.png"))); // NOI18N
        homeButton.setText(" Home");
        homeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                homeButtonMouseEntered(evt);
            }
        });
        homeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeButtonActionPerformed(evt);
            }
        });
        homeButton.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                homeButtonFocusGained(evt);
            }
        });
        homeButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                homeButtonKeyPressed(evt);
            }
        });

        usernameLabel.setText("Username :");
        usernameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                usernameLabelMouseEntered(evt);
            }
        });

        usernameTextBox.setBackground(new java.awt.Color(204, 204, 204));
        usernameTextBox.setEditable(false);
        usernameTextBox.setToolTipText("Current username.");
        usernameTextBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                usernameTextBoxMouseEntered(evt);
            }
        });
        usernameTextBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameTextBoxFocusGained(evt);
            }
        });

        newUsernameLabel.setText("New username *:");
        newUsernameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newUsernameLabelMouseEntered(evt);
            }
        });

        newUsernameTextBox.setToolTipText("New username (Case sensitive).");
        newUsernameTextBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                newUsernameTextBoxMouseEntered(evt);
            }
        });
        newUsernameTextBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                newUsernameTextBoxFocusGained(evt);
            }
        });
        newUsernameTextBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                newUsernameTextBoxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                newUsernameTextBoxKeyReleased(evt);
            }
        });

        notification.setForeground(new java.awt.Color(51, 51, 251));
        notification.setText(" ");

        bad1.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad1.setForeground(new java.awt.Color(255, 0, 0));
        bad1.setText(" ");

        bad2.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad2.setForeground(new java.awt.Color(255, 0, 0));
        bad2.setText(" ");

        bad3.setFont(new java.awt.Font("Malgun Gothic", 1, 14)); // NOI18N
        bad3.setForeground(new java.awt.Color(255, 0, 0));
        bad3.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(submitButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(clearButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(homeButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(usernameLabel)
                                    .addComponent(passwordLabel)
                                    .addComponent(newUsernameLabel)
                                    .addComponent(newPasswordLabel)
                                    .addComponent(confirmPasswordLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(passwordTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(confirmPasswordTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newPasswordTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(usernameTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newUsernameTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(icoLabel)
                                    .addComponent(bad1)
                                    .addComponent(bad2)
                                    .addComponent(bad3))))
                        .addGap(74, 74, 74))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(notification, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {confirmPasswordTextBox, newPasswordTextBox, passwordTextBox});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {clearButton, homeButton, submitButton});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameLabel)
                    .addComponent(usernameTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bad1))
                .addGap(16, 16, 16)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newUsernameLabel)
                    .addComponent(newUsernameTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bad2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newPasswordLabel)
                    .addComponent(newPasswordTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bad3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPasswordLabel)
                    .addComponent(confirmPasswordTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(icoLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(homeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(notification))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {confirmPasswordTextBox, newPasswordTextBox, passwordTextBox});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {clearButton, homeButton, submitButton});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmPasswordTextBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmPasswordTextBoxKeyReleased

        if (confirmPasswordTextBox.getText().equals(newPasswordTextBox.getText())) {
            icoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Ok-icon.png"))); // NOI18N
        } else {
            icoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Ok-icon-Disabled.png"))); // NOI18N

        }
        if (confirmPasswordTextBox.getText().length() == 0) {
            icoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Ok-icon-Disabled.png")));
        }
    }//GEN-LAST:event_confirmPasswordTextBoxKeyReleased

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        passwordTextBox.setText(null);
        newPasswordTextBox.setText(null);
        confirmPasswordTextBox.setText(null);
        icoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Ok-icon-Disabled.png")));
        passwordTextBox.requestFocus();
        newUsernameTextBox.setText(null);
        bad1.setText(" ");
        bad2.setText(" ");
        bad3.setText(" ");
        passwordTextBox.requestFocus();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void homeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeButtonActionPerformed
        Run.Runner.RunnerObj.MainUIObj.show();
        this.dispose();
        Run.Runner.RunnerObj.MainUIObj.ChangeUserDetailsObj = null;
    }//GEN-LAST:event_homeButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        homeButton.doClick();
    }//GEN-LAST:event_formWindowClosing

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        if ("".equals(passwordTextBox.getText())) {
            JOptionPane.showMessageDialog(null, "Password field cannot be empty.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            passwordTextBox.requestFocus();
            return;
        }
        if ("!".equals(bad1.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate password.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            passwordTextBox.requestFocus();
            return;
        }
        if ("".equals(newUsernameTextBox.getText())) {
            JOptionPane.showMessageDialog(null, "New username field cannot be empty.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            newUsernameTextBox.requestFocus();
            return;
        }
        if ("!".equals(bad2.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate new username.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            newUsernameTextBox.requestFocus();
            return;
        }
        if (validateUserName(newUsernameTextBox.getText()) == false && !newUsernameTextBox.getText().equals(usernameTextBox.getText())) {
            JOptionPane.showMessageDialog(null, "New username alrady used. Please try other.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            newUsernameTextBox.requestFocus();
            return;
        }
        if ("".equals(newPasswordTextBox.getText())) {
            JOptionPane.showMessageDialog(null, "New password field cannot be empty.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            newPasswordTextBox.requestFocus();
            return;
        }
        if ("!".equals(bad3.getText())) {
            JOptionPane.showMessageDialog(null, "Please validate new password.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            newPasswordTextBox.requestFocus();
            return;
        }
        if (!newPasswordTextBox.getText().equals(confirmPasswordTextBox.getText())) {
            JOptionPane.showMessageDialog(null, "Password not match.", "Notification", JOptionPane.INFORMATION_MESSAGE);
            confirmPasswordTextBox.requestFocus();
            return;
        }
        if (validatePassword(usernameTextBox.getText(), passwordTextBox.getText()) == false) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Current password not match.", "Wrong password", JOptionPane.ERROR_MESSAGE);
            passwordTextBox.requestFocus();
        } else {
            int successful = 0;
            String sql = "Update login set User=\"" + newUsernameTextBox.getText() + "\" , Pass=\"" + newPasswordTextBox.getText() + "\" where User=\"" + usernameTextBox.getText() + "\"";
            try {
                successful = dbConnect.getCon().createStatement().executeUpdate(sql);
            } catch (SQLException ex) {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
            if (successful == 1) {
                JOptionPane.showMessageDialog(null, "User details successfully modified.", "Success", JOptionPane.INFORMATION_MESSAGE);
                Run.Runner.RunnerObj.MainUIObj.setUsername(newUsernameTextBox.getText());
                homeButton.doClick();
            } else {
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "User details modification not successful.", "Failed", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    private void passwordTextBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextBoxKeyReleased
        if (passwordTextBox.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            passwordTextBox.setText(passwordTextBox.getText().substring(0, 50));
        }
        if (!passwordTextBox.getText().matches("[^ ][^ ]*")) {
            bad1.setText("!");
        } else {
            bad1.setText(" ");
        }
    }//GEN-LAST:event_passwordTextBoxKeyReleased

    private void newPasswordTextBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPasswordTextBoxKeyReleased
        if (newPasswordTextBox.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            newPasswordTextBox.setText(newPasswordTextBox.getText().substring(0, 50));
        }
        if (!newPasswordTextBox.getText().matches("[^ ][^ ]*")) {
            bad3.setText("!");
        } else {
            bad3.setText(" ");
        }
        if (confirmPasswordTextBox.getText().equals(newPasswordTextBox.getText())) {
            icoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Ok-icon.png"))); // NOI18N
        } else {
            icoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Ok-icon-Disabled.png"))); // NOI18N

        }
        if (newPasswordTextBox.getText().length() == 0) {
            icoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main_package/resources/Ok-icon-Disabled.png")));
        }
    }//GEN-LAST:event_newPasswordTextBoxKeyReleased

    private void newUsernameTextBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newUsernameTextBoxKeyReleased
        if (newUsernameTextBox.getText().length() > 50) {
            Toolkit.getDefaultToolkit().beep();
            newUsernameTextBox.setText(newUsernameTextBox.getText().substring(0, 50));
        }
        if (!newUsernameTextBox.getText().matches("[a-zA-Z0-9][_a-zA-Z0-9]*")) {
            bad2.setText("!");
        } else {
            bad2.setText(" ");
        }
    }//GEN-LAST:event_newUsernameTextBoxKeyReleased

    private void usernameLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameLabelMouseEntered
        notification.setText("Username.");
    }//GEN-LAST:event_usernameLabelMouseEntered

    private void passwordLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordLabelMouseEntered
        notification.setText("Password.");
    }//GEN-LAST:event_passwordLabelMouseEntered

    private void newUsernameLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newUsernameLabelMouseEntered
        notification.setText("New username.");
    }//GEN-LAST:event_newUsernameLabelMouseEntered

    private void newPasswordLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newPasswordLabelMouseEntered
        notification.setText("New password.");
    }//GEN-LAST:event_newPasswordLabelMouseEntered

    private void confirmPasswordLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmPasswordLabelMouseEntered
        notification.setText("Confirm password.");
    }//GEN-LAST:event_confirmPasswordLabelMouseEntered

    private void usernameTextBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameTextBoxMouseEntered
        notification.setText("Current username.");
    }//GEN-LAST:event_usernameTextBoxMouseEntered

    private void usernameTextBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTextBoxFocusGained
        notification.setText("Current username.");
    }//GEN-LAST:event_usernameTextBoxFocusGained

    private void passwordTextBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordTextBoxMouseEntered
        notification.setText("Enter current password.");
    }//GEN-LAST:event_passwordTextBoxMouseEntered

    private void passwordTextBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTextBoxFocusGained
        notification.setText("Enter current password.");
    }//GEN-LAST:event_passwordTextBoxFocusGained

    private void newUsernameTextBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newUsernameTextBoxMouseEntered
        notification.setText("Enter new username (Case sensitive).");
    }//GEN-LAST:event_newUsernameTextBoxMouseEntered

    private void newUsernameTextBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newUsernameTextBoxFocusGained
        notification.setText("Enter new username (Case sensitive).");
    }//GEN-LAST:event_newUsernameTextBoxFocusGained

    private void newPasswordTextBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newPasswordTextBoxMouseEntered
        notification.setText("Enter new password (Case sensitive).");
    }//GEN-LAST:event_newPasswordTextBoxMouseEntered

    private void newPasswordTextBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newPasswordTextBoxFocusGained
        notification.setText("Enter new password (Case sensitive).");
    }//GEN-LAST:event_newPasswordTextBoxFocusGained

    private void confirmPasswordTextBoxMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmPasswordTextBoxMouseEntered
        notification.setText("Enter new password again (Case sensitive).");
    }//GEN-LAST:event_confirmPasswordTextBoxMouseEntered

    private void confirmPasswordTextBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPasswordTextBoxFocusGained
        notification.setText("Enter new password again (Case sensitive).");
    }//GEN-LAST:event_confirmPasswordTextBoxFocusGained

    private void submitButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMouseEntered
        notification.setText("To submit new user details.");
    }//GEN-LAST:event_submitButtonMouseEntered

    private void submitButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_submitButtonFocusGained
        notification.setText("To submit new user details.");
    }//GEN-LAST:event_submitButtonFocusGained

    private void clearButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtonMouseEntered
        notification.setText("To clear form feilds.");
    }//GEN-LAST:event_clearButtonMouseEntered

    private void clearButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_clearButtonFocusGained
        notification.setText("To clear form feilds.");
    }//GEN-LAST:event_clearButtonFocusGained

    private void homeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeButtonMouseEntered
        notification.setText("Go back to home.");
    }//GEN-LAST:event_homeButtonMouseEntered

    private void homeButtonFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_homeButtonFocusGained
        notification.setText("Go back to home.");
    }//GEN-LAST:event_homeButtonFocusGained

    private void passwordTextBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordTextBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            submitButton.requestFocus();
        }
    }//GEN-LAST:event_passwordTextBoxKeyPressed

    private void newUsernameTextBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newUsernameTextBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            submitButton.requestFocus();
        }
    }//GEN-LAST:event_newUsernameTextBoxKeyPressed

    private void newPasswordTextBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_newPasswordTextBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            submitButton.requestFocus();
        }
    }//GEN-LAST:event_newPasswordTextBoxKeyPressed

    private void confirmPasswordTextBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmPasswordTextBoxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            submitButton.requestFocus();
        }
    }//GEN-LAST:event_confirmPasswordTextBoxKeyPressed

    private void submitButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_submitButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            submitButton.doClick();
        }
    }//GEN-LAST:event_submitButtonKeyPressed

    private void clearButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_clearButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            clearButton.doClick();
        }
    }//GEN-LAST:event_clearButtonKeyPressed

    private void homeButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_homeButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            homeButton.doClick();
        }
    }//GEN-LAST:event_homeButtonKeyPressed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bad1;
    private javax.swing.JLabel bad2;
    private javax.swing.JLabel bad3;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel confirmPasswordLabel;
    private javax.swing.JPasswordField confirmPasswordTextBox;
    private javax.swing.JButton homeButton;
    private javax.swing.JLabel icoLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel newPasswordLabel;
    private javax.swing.JPasswordField newPasswordTextBox;
    private javax.swing.JLabel newUsernameLabel;
    private javax.swing.JTextField newUsernameTextBox;
    private javax.swing.JLabel notification;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordTextBox;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextBox;
    // End of variables declaration//GEN-END:variables

    private boolean validateUserName(String userName) {
        try {
            String sql = "Select count(*) from login where User=\"" + userName + "\"";
            ResultSet rs = dbConnect.getCon().createStatement().executeQuery(sql);
            if (rs.next()) {
                int count = rs.getInt("count(*)");
                if (count == 0) {
                    return true;
                }
            }
            rs.close();
        } catch (SQLException ex) {
            return false;
        }
        return false;
    }

    private boolean validatePassword(String userName, String password) {
        ResultSet rs = null;
        String passQuery = "select Pass from login where User=\"" + userName + "\"";

        try {
            rs = dbConnect.getCon().createStatement().executeQuery(passQuery);
            if (rs.next()) {
                String passwordFromDB = rs.getString("Pass");
                if (password.equals(passwordFromDB)) {
                    return true;
                }
            }
            rs.close();
        } catch (SQLException ex) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return false;
    }
}
